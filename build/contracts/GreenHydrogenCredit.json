{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "frozen",
          "type": "bool"
        }
      ],
      "name": "AccountFrozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "producer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CreditIssued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CreditPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "producer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "certified",
          "type": "bool"
        }
      ],
      "name": "ProducerCertified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalPurchased",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "QuotaMet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quota",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "QuotaSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "notifier",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "subject",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "action",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RegulatoryNotification",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum GreenHydrogenCredit.UserRole",
          "name": "role",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "roleName",
          "type": "string"
        }
      ],
      "name": "RoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "enum GreenHydrogenCredit.UserRole",
          "name": "role",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "roleName",
          "type": "string"
        }
      ],
      "name": "assignRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "producer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "certified",
          "type": "bool"
        }
      ],
      "name": "certifyProducer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "factories",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "quota",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "hasQuota",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "creditsPurchased",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "quotaMet",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "quotaSetTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "getFactoryInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "quota",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "hasQuota",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "creditsPurchased",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "quotaMet",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "quotaSetTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct GreenHydrogenCredit.Factory",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "producer",
          "type": "address"
        }
      ],
      "name": "getProducerInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "certified",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalIssued",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastIssuanceTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ],
          "internalType": "struct GreenHydrogenCredit.Producer",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserRole",
      "outputs": [
        {
          "internalType": "enum GreenHydrogenCredit.UserRole",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governmentAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "issueCredits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pollutionBodyAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "producers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "certified",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalIssued",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastIssuanceTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "purchaseCredits",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsCitizen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsProducer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "frozen",
          "type": "bool"
        }
      ],
      "name": "setAccountFrozen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_government",
          "type": "address"
        }
      ],
      "name": "setGovernmentAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pollutionBody",
          "type": "address"
        }
      ],
      "name": "setPollutionBodyAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quota",
          "type": "uint256"
        }
      ],
      "name": "setQuota",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userRoleNames",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userRoles",
      "outputs": [
        {
          "internalType": "enum GreenHydrogenCredit.UserRole",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Win/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Win/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
    "2": "C:/Users/Win/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "3": "C:/Users/Win/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "4": "C:/Users/Win/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
    "5": "contracts/GreenHydrogenCredit.sol"
  },
  "ast": {
    "absolutePath": "contracts/GreenHydrogenCredit.sol",
    "exportedSymbols": {
      "Context": [
        1778
      ],
      "ERC20": [
        1756
      ],
      "GreenHydrogenCredit": [
        1056
      ],
      "IERC20": [
        1856
      ],
      "IERC20Metadata": [
        1881
      ],
      "Ownable": [
        1169
      ]
    },
    "id": 1057,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:5"
      },
      {
        "absolutePath": "C:/Users/Win/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1057,
        "sourceUnit": 1757,
        "src": "58:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Win/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1057,
        "sourceUnit": 1170,
        "src": "114:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "ERC20",
              "nameLocations": [
                "200:5:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1756,
              "src": "200:5:5"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "200:5:5"
          },
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nameLocations": [
                "207:7:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1169,
              "src": "207:7:5"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "207:7:5"
          }
        ],
        "canonicalName": "GreenHydrogenCredit",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1056,
        "linearizedBaseContracts": [
          1056,
          1169,
          1756,
          1881,
          1856,
          1778
        ],
        "name": "GreenHydrogenCredit",
        "nameLocation": "177:19:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "GreenHydrogenCredit.Producer",
            "id": 16,
            "members": [
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "certified",
                "nameLocation": "306:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "301:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "301:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "totalIssued",
                "nameLocation": "333:11:5",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "325:19:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "325:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "lastIssuanceTime",
                "nameLocation": "362:16:5",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "354:24:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "354:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "isActive",
                "nameLocation": "393:8:5",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "388:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 14,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "388:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Producer",
            "nameLocation": "282:8:5",
            "nodeType": "StructDefinition",
            "scope": 1056,
            "src": "275:133:5",
            "visibility": "public"
          },
          {
            "canonicalName": "GreenHydrogenCredit.Factory",
            "id": 27,
            "members": [
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "quota",
                "nameLocation": "451:5:5",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "443:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "443:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "hasQuota",
                "nameLocation": "471:8:5",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "466:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 19,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "466:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "creditsPurchased",
                "nameLocation": "497:16:5",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "489:24:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "489:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "quotaMet",
                "nameLocation": "528:8:5",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "523:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 23,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "523:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "quotaSetTime",
                "nameLocation": "554:12:5",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "546:20:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "546:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Factory",
            "nameLocation": "425:7:5",
            "nodeType": "StructDefinition",
            "scope": 1056,
            "src": "418:155:5",
            "visibility": "public"
          },
          {
            "canonicalName": "GreenHydrogenCredit.UserRole",
            "id": 34,
            "members": [
              {
                "id": 28,
                "name": "NONE",
                "nameLocation": "623:4:5",
                "nodeType": "EnumValue",
                "src": "623:4:5"
              },
              {
                "id": 29,
                "name": "PRODUCER",
                "nameLocation": "629:8:5",
                "nodeType": "EnumValue",
                "src": "629:8:5"
              },
              {
                "id": 30,
                "name": "FACTORY",
                "nameLocation": "639:7:5",
                "nodeType": "EnumValue",
                "src": "639:7:5"
              },
              {
                "id": 31,
                "name": "GOVERNMENT",
                "nameLocation": "648:10:5",
                "nodeType": "EnumValue",
                "src": "648:10:5"
              },
              {
                "id": 32,
                "name": "POLLUTION_BODY",
                "nameLocation": "660:14:5",
                "nodeType": "EnumValue",
                "src": "660:14:5"
              },
              {
                "id": 33,
                "name": "CITIZEN",
                "nameLocation": "676:7:5",
                "nodeType": "EnumValue",
                "src": "676:7:5"
              }
            ],
            "name": "UserRole",
            "nameLocation": "612:8:5",
            "nodeType": "EnumDefinition",
            "src": "607:78:5"
          },
          {
            "constant": false,
            "functionSelector": "26324eff",
            "id": 39,
            "mutability": "mutable",
            "name": "producers",
            "nameLocation": "754:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 1056,
            "src": "718:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$16_storage_$",
              "typeString": "mapping(address => struct GreenHydrogenCredit.Producer)"
            },
            "typeName": {
              "id": 38,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 35,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "726:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "718:28:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$16_storage_$",
                "typeString": "mapping(address => struct GreenHydrogenCredit.Producer)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 37,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 36,
                  "name": "Producer",
                  "nameLocations": [
                    "737:8:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16,
                  "src": "737:8:5"
                },
                "referencedDeclaration": 16,
                "src": "737:8:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Producer_$16_storage_ptr",
                  "typeString": "struct GreenHydrogenCredit.Producer"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fab52689",
            "id": 44,
            "mutability": "mutable",
            "name": "factories",
            "nameLocation": "804:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 1056,
            "src": "769:44:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
              "typeString": "mapping(address => struct GreenHydrogenCredit.Factory)"
            },
            "typeName": {
              "id": 43,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 40,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "777:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "769:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                "typeString": "mapping(address => struct GreenHydrogenCredit.Factory)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 42,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 41,
                  "name": "Factory",
                  "nameLocations": [
                    "788:7:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "788:7:5"
                },
                "referencedDeclaration": 27,
                "src": "788:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Factory_$27_storage_ptr",
                  "typeString": "struct GreenHydrogenCredit.Factory"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e5839836",
            "id": 48,
            "mutability": "mutable",
            "name": "isFrozen",
            "nameLocation": "851:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 1056,
            "src": "819:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 47,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "827:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "819:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 46,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "838:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "74d5e100",
            "id": 53,
            "mutability": "mutable",
            "name": "userRoles",
            "nameLocation": "901:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 1056,
            "src": "865:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
              "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
            },
            "typeName": {
              "id": 52,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 49,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "873:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "865:28:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 51,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50,
                  "name": "UserRole",
                  "nameLocations": [
                    "884:8:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34,
                  "src": "884:8:5"
                },
                "referencedDeclaration": 34,
                "src": "884:8:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_UserRole_$34",
                  "typeString": "enum GreenHydrogenCredit.UserRole"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "911798e9",
            "id": 57,
            "mutability": "mutable",
            "name": "userRoleNames",
            "nameLocation": "950:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 1056,
            "src": "916:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 56,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 54,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "924:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "916:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 55,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "935:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d570ab34",
            "id": 59,
            "mutability": "mutable",
            "name": "governmentAddress",
            "nameLocation": "1032:17:5",
            "nodeType": "VariableDeclaration",
            "scope": 1056,
            "src": "1017:32:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 58,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1017:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ef806f5e",
            "id": 61,
            "mutability": "mutable",
            "name": "pollutionBodyAddress",
            "nameLocation": "1070:20:5",
            "nodeType": "VariableDeclaration",
            "scope": 1056,
            "src": "1055:35:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 60,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1055:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "a33e6b076d391e96626483b30e365719f79f1d6594aff6587649ffd6c82ed7fa",
            "id": 67,
            "name": "AccountFrozen",
            "nameLocation": "1148:13:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1178:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1162:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "frozen",
                  "nameLocation": "1189:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1184:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1161:35:5"
            },
            "src": "1142:55:5"
          },
          {
            "anonymous": false,
            "eventSelector": "f8cddf2eaf16af6f7a9735a8bed50968cabcef91b322eecbde3805d8d8377da4",
            "id": 75,
            "name": "CreditIssued",
            "nameLocation": "1208:12:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "producer",
                  "nameLocation": "1237:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1221:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1255:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1247:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1271:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1263:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1220:61:5"
            },
            "src": "1202:80:5"
          },
          {
            "anonymous": false,
            "eventSelector": "a80e182fc2735b1564190719686030bec3e14399a5f804181ff5054d1c57bdd1",
            "id": 87,
            "name": "CreditPurchased",
            "nameLocation": "1293:15:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1325:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1309:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1309:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1348:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1332:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1364:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1356:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1380:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1372:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1395:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1387:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1308:97:5"
            },
            "src": "1287:119:5"
          },
          {
            "anonymous": false,
            "eventSelector": "f8d2d47f1a3527c24d2e241f4634c1fee251076c49fae9b5530a36e77e0bd9d9",
            "id": 93,
            "name": "ProducerCertified",
            "nameLocation": "1417:17:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "producer",
                  "nameLocation": "1451:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1435:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1435:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "certified",
                  "nameLocation": "1466:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1461:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1434:42:5"
            },
            "src": "1411:66:5"
          },
          {
            "anonymous": false,
            "eventSelector": "76555acd4d6a60c38af93f6afadf981892e0ca4c57c35b1b117a8ff4ed30c7bd",
            "id": 101,
            "name": "QuotaSet",
            "nameLocation": "1488:8:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "1513:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1497:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quota",
                  "nameLocation": "1530:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1522:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1522:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1545:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1537:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1496:59:5"
            },
            "src": "1482:74:5"
          },
          {
            "anonymous": false,
            "eventSelector": "097457cc13035ee82650b6c285cb0fcb524f2fed19793d4cab249480b193ec0b",
            "id": 109,
            "name": "QuotaMet",
            "nameLocation": "1567:8:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "1592:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1576:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalPurchased",
                  "nameLocation": "1609:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1601:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1633:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1625:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1625:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1575:68:5"
            },
            "src": "1561:83:5"
          },
          {
            "anonymous": false,
            "eventSelector": "6f9e8382effc1f2659a04b480fc00e03e9ea704a05c90d74db22a5fb12ee46af",
            "id": 118,
            "name": "RoleAssigned",
            "nameLocation": "1655:12:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1684:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "1668:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1668:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "1699:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "1690:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_UserRole_$34",
                    "typeString": "enum GreenHydrogenCredit.UserRole"
                  },
                  "typeName": {
                    "id": 113,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 112,
                      "name": "UserRole",
                      "nameLocations": [
                        "1690:8:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34,
                      "src": "1690:8:5"
                    },
                    "referencedDeclaration": 34,
                    "src": "1690:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserRole_$34",
                      "typeString": "enum GreenHydrogenCredit.UserRole"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "roleName",
                  "nameLocation": "1712:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "1705:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1667:54:5"
            },
            "src": "1649:73:5"
          },
          {
            "anonymous": false,
            "eventSelector": "eb586938364ec042f4a155852f3ac306b4f61b6a36ff84c1330e4bbd028adc23",
            "id": 128,
            "name": "RegulatoryNotification",
            "nameLocation": "1733:22:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "notifier",
                  "nameLocation": "1772:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1756:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1756:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "subject",
                  "nameLocation": "1798:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1782:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1782:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 124,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "action",
                  "nameLocation": "1814:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1807:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1807:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1830:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1822:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1755:85:5"
            },
            "src": "1727:114:5"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "1899:273:5",
              "statements": [
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135,
                      "name": "governmentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1958:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 136,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1978:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1982:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1978:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1958:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1958:30:5"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 140,
                        "name": "userRoles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1998:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                          "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 143,
                      "indexExpression": {
                        "expression": {
                          "id": 141,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2008:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2012:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2008:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1998:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 144,
                        "name": "UserRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "2022:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                          "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2031:10:5",
                      "memberName": "GOVERNMENT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "2022:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "src": "1998:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserRole_$34",
                      "typeString": "enum GreenHydrogenCredit.UserRole"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1998:43:5"
                },
                {
                  "expression": {
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 148,
                        "name": "userRoleNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "2051:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 151,
                      "indexExpression": {
                        "expression": {
                          "id": 149,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2065:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2069:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2065:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2051:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "676f7665726e6d656e74",
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2079:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_bb49e51cf68658f42d899c25f243f290ed423f90c2b23f51933440939de284b9",
                        "typeString": "literal_string \"government\""
                      },
                      "value": "government"
                    },
                    "src": "2051:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2051:40:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 156,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2119:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2123:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2119:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 158,
                          "name": "UserRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2131:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                            "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2140:10:5",
                        "memberName": "GOVERNMENT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "2131:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        }
                      },
                      {
                        "hexValue": "676f7665726e6d656e74",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2152:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb49e51cf68658f42d899c25f243f290ed423f90c2b23f51933440939de284b9",
                          "typeString": "literal_string \"government\""
                        },
                        "value": "government"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb49e51cf68658f42d899c25f243f290ed423f90c2b23f51933440939de284b9",
                          "typeString": "literal_string \"government\""
                        }
                      ],
                      "id": 155,
                      "name": "RoleAssigned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "2106:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_UserRole_$34_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,enum GreenHydrogenCredit.UserRole,string memory)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2106:59:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "EmitStatement",
                  "src": "2101:64:5"
                }
              ]
            },
            "id": 164,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "477265656e20487964726f67656e20437265646974",
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1867:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_fccdaea7906b9c185bdecb41558866c5403ab61787d2f3db3cf2c0a4e50e70f9",
                      "typeString": "literal_string \"Green Hydrogen Credit\""
                    },
                    "value": "Green Hydrogen Credit"
                  },
                  {
                    "hexValue": "474843",
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1892:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7b163b01bd7c7164b58667f97ccd5f2d9eec241085efaf8553efc34224ff1326",
                      "typeString": "literal_string \"GHC\""
                    },
                    "value": "GHC"
                  }
                ],
                "id": 133,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 130,
                  "name": "ERC20",
                  "nameLocations": [
                    "1861:5:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1756,
                  "src": "1861:5:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1861:37:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1858:2:5"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1899:0:5"
            },
            "scope": 1056,
            "src": "1847:325:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "2251:159:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 167,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2269:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2273:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2269:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 169,
                            "name": "governmentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "2283:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2269:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_UserRole_$34",
                            "typeString": "enum GreenHydrogenCredit.UserRole"
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 171,
                              "name": "userRoles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "2304:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                                "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                              }
                            },
                            "id": 174,
                            "indexExpression": {
                              "expression": {
                                "id": 172,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2314:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2318:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2314:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2304:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_UserRole_$34",
                              "typeString": "enum GreenHydrogenCredit.UserRole"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 175,
                              "name": "UserRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "2329:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                                "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2338:10:5",
                            "memberName": "GOVERNMENT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "2329:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_UserRole_$34",
                              "typeString": "enum GreenHydrogenCredit.UserRole"
                            }
                          },
                          "src": "2304:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2269:79:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920676f7665726e6d656e742063616e20706572666f726d207468697320616374696f6e",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2350:41:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa3aaa09abfdf53a4b929defa94af1ea5679e2bb2b465b028b07ba3dac50da9a",
                          "typeString": "literal_string \"Only government can perform this action\""
                        },
                        "value": "Only government can perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa3aaa09abfdf53a4b929defa94af1ea5679e2bb2b465b028b07ba3dac50da9a",
                          "typeString": "literal_string \"Only government can perform this action\""
                        }
                      ],
                      "id": 166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2261:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2261:131:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "2261:131:5"
                },
                {
                  "id": 182,
                  "nodeType": "PlaceholderStatement",
                  "src": "2402:1:5"
                }
              ]
            },
            "id": 184,
            "name": "onlyGovernment",
            "nameLocation": "2234:14:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2248:2:5"
            },
            "src": "2225:185:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "2449:170:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 187,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2467:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2471:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2467:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 189,
                            "name": "pollutionBodyAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "2481:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2467:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_UserRole_$34",
                            "typeString": "enum GreenHydrogenCredit.UserRole"
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 191,
                              "name": "userRoles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "2505:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                                "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                              }
                            },
                            "id": 194,
                            "indexExpression": {
                              "expression": {
                                "id": 192,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2515:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2519:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2515:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2505:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_UserRole_$34",
                              "typeString": "enum GreenHydrogenCredit.UserRole"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 195,
                              "name": "UserRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "2530:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                                "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                              }
                            },
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2539:14:5",
                            "memberName": "POLLUTION_BODY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32,
                            "src": "2530:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_UserRole_$34",
                              "typeString": "enum GreenHydrogenCredit.UserRole"
                            }
                          },
                          "src": "2505:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2467:86:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920706f6c6c7574696f6e20626f64792063616e20706572666f726d207468697320616374696f6e",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2555:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b6472edcb34b8a7c7a4c57c0cca1508f06b7fb548ec100ee56cd7958cadcdef",
                          "typeString": "literal_string \"Only pollution body can perform this action\""
                        },
                        "value": "Only pollution body can perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b6472edcb34b8a7c7a4c57c0cca1508f06b7fb548ec100ee56cd7958cadcdef",
                          "typeString": "literal_string \"Only pollution body can perform this action\""
                        }
                      ],
                      "id": 186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2459:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2459:142:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "2459:142:5"
                },
                {
                  "id": 202,
                  "nodeType": "PlaceholderStatement",
                  "src": "2611:1:5"
                }
              ]
            },
            "id": 204,
            "name": "onlyPollutionBody",
            "nameLocation": "2429:17:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2446:2:5"
            },
            "src": "2420:199:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "2662:207:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_UserRole_$34",
                              "typeString": "enum GreenHydrogenCredit.UserRole"
                            },
                            "id": 213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 207,
                                "name": "userRoles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "2680:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                                  "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                                }
                              },
                              "id": 210,
                              "indexExpression": {
                                "expression": {
                                  "id": 208,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2690:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2694:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2690:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2680:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_UserRole_$34",
                                "typeString": "enum GreenHydrogenCredit.UserRole"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 211,
                                "name": "UserRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "2705:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                                  "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                                }
                              },
                              "id": 212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2714:8:5",
                              "memberName": "PRODUCER",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 29,
                              "src": "2705:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_UserRole_$34",
                                "typeString": "enum GreenHydrogenCredit.UserRole"
                              }
                            },
                            "src": "2680:42:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 214,
                                "name": "producers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39,
                                "src": "2726:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$16_storage_$",
                                  "typeString": "mapping(address => struct GreenHydrogenCredit.Producer storage ref)"
                                }
                              },
                              "id": 217,
                              "indexExpression": {
                                "expression": {
                                  "id": 215,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2736:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2740:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2736:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2726:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Producer_$16_storage",
                                "typeString": "struct GreenHydrogenCredit.Producer storage ref"
                              }
                            },
                            "id": 218,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2748:9:5",
                            "memberName": "certified",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "2726:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2680:77:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 220,
                              "name": "producers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "2761:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$16_storage_$",
                                "typeString": "mapping(address => struct GreenHydrogenCredit.Producer storage ref)"
                              }
                            },
                            "id": 223,
                            "indexExpression": {
                              "expression": {
                                "id": 221,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2771:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2775:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2771:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2761:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Producer_$16_storage",
                              "typeString": "struct GreenHydrogenCredit.Producer storage ref"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2783:8:5",
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "2761:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2680:111:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920636572746966696564206163746976652070726f6475636572732063616e20706572666f726d207468697320616374696f6e",
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2793:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1dd7262cb3b0fff9dcf8f5cdf71d965f9125049a236f5390eccc8704d00ed312",
                          "typeString": "literal_string \"Only certified active producers can perform this action\""
                        },
                        "value": "Only certified active producers can perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1dd7262cb3b0fff9dcf8f5cdf71d965f9125049a236f5390eccc8704d00ed312",
                          "typeString": "literal_string \"Only certified active producers can perform this action\""
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2672:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2672:179:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "2672:179:5"
                },
                {
                  "id": 229,
                  "nodeType": "PlaceholderStatement",
                  "src": "2861:1:5"
                }
              ]
            },
            "id": 231,
            "name": "onlyCertifiedProducer",
            "nameLocation": "2638:21:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2659:2:5"
            },
            "src": "2629:240:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "2902:120:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 234,
                            "name": "userRoles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "2920:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                              "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                            }
                          },
                          "id": 237,
                          "indexExpression": {
                            "expression": {
                              "id": 235,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2930:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2934:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2930:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2920:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserRole_$34",
                            "typeString": "enum GreenHydrogenCredit.UserRole"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 238,
                            "name": "UserRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2945:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                              "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2954:7:5",
                          "memberName": "FACTORY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "2945:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserRole_$34",
                            "typeString": "enum GreenHydrogenCredit.UserRole"
                          }
                        },
                        "src": "2920:41:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920666163746f726965732063616e20706572666f726d207468697320616374696f6e",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2963:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f19455c675c60da0d5b67890d742ee2531692020b545c1a2bf7efc7758b91b",
                          "typeString": "literal_string \"Only factories can perform this action\""
                        },
                        "value": "Only factories can perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f19455c675c60da0d5b67890d742ee2531692020b545c1a2bf7efc7758b91b",
                          "typeString": "literal_string \"Only factories can perform this action\""
                        }
                      ],
                      "id": 233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2912:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2912:92:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2912:92:5"
                },
                {
                  "id": 244,
                  "nodeType": "PlaceholderStatement",
                  "src": "3014:1:5"
                }
              ]
            },
            "id": 246,
            "name": "onlyFactory",
            "nameLocation": "2888:11:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2899:2:5"
            },
            "src": "2879:143:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "3068:76:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3086:18:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 251,
                            "name": "isFrozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "3087:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 253,
                          "indexExpression": {
                            "id": 252,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "3096:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3087:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e742069732066726f7a656e",
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3106:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa6035f7734045ef47709c6dcf4f54cd8586483a8a28727b39433bff7d8df094",
                          "typeString": "literal_string \"Account is frozen\""
                        },
                        "value": "Account is frozen"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa6035f7734045ef47709c6dcf4f54cd8586483a8a28727b39433bff7d8df094",
                          "typeString": "literal_string \"Account is frozen\""
                        }
                      ],
                      "id": 250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3078:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3078:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "3078:48:5"
                },
                {
                  "id": 258,
                  "nodeType": "PlaceholderStatement",
                  "src": "3136:1:5"
                }
              ]
            },
            "id": 260,
            "name": "notFrozen",
            "nameLocation": "3041:9:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3059:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "3051:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3051:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3050:17:5"
            },
            "src": "3032:112:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 291,
              "nodeType": "Block",
              "src": "3259:228:5",
              "statements": [
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 267,
                      "name": "governmentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "3269:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 268,
                      "name": "_government",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 262,
                      "src": "3289:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3269:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "3269:31:5"
                },
                {
                  "expression": {
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 271,
                        "name": "userRoles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "3310:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                          "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 273,
                      "indexExpression": {
                        "id": 272,
                        "name": "_government",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "3320:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3310:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 274,
                        "name": "UserRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "3335:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                          "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3344:10:5",
                      "memberName": "GOVERNMENT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "3335:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "src": "3310:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserRole_$34",
                      "typeString": "enum GreenHydrogenCredit.UserRole"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "3310:44:5"
                },
                {
                  "expression": {
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 278,
                        "name": "userRoleNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "3364:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 280,
                      "indexExpression": {
                        "id": 279,
                        "name": "_government",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "3378:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3364:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "676f7665726e6d656e74",
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3393:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_bb49e51cf68658f42d899c25f243f290ed423f90c2b23f51933440939de284b9",
                        "typeString": "literal_string \"government\""
                      },
                      "value": "government"
                    },
                    "src": "3364:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "3364:41:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 285,
                        "name": "_government",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "3433:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 286,
                          "name": "UserRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "3446:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                            "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                          }
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3455:10:5",
                        "memberName": "GOVERNMENT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "3446:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        }
                      },
                      {
                        "hexValue": "676f7665726e6d656e74",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3467:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb49e51cf68658f42d899c25f243f290ed423f90c2b23f51933440939de284b9",
                          "typeString": "literal_string \"government\""
                        },
                        "value": "government"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb49e51cf68658f42d899c25f243f290ed423f90c2b23f51933440939de284b9",
                          "typeString": "literal_string \"government\""
                        }
                      ],
                      "id": 284,
                      "name": "RoleAssigned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "3420:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_UserRole_$34_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,enum GreenHydrogenCredit.UserRole,string memory)"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3420:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "EmitStatement",
                  "src": "3415:65:5"
                }
              ]
            },
            "functionSelector": "6a137219",
            "id": 292,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 265,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 264,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3249:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1088,
                  "src": "3249:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3249:9:5"
              }
            ],
            "name": "setGovernmentAddress",
            "nameLocation": "3200:20:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "_government",
                  "nameLocation": "3229:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "3221:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3221:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3220:21:5"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3259:0:5"
            },
            "scope": 1056,
            "src": "3191:296:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "3576:259:5",
              "statements": [
                {
                  "expression": {
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 299,
                      "name": "pollutionBodyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "3586:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 300,
                      "name": "_pollutionBody",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "3609:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3586:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "3586:37:5"
                },
                {
                  "expression": {
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 303,
                        "name": "userRoles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "3633:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                          "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 305,
                      "indexExpression": {
                        "id": 304,
                        "name": "_pollutionBody",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "3643:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3633:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 306,
                        "name": "UserRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "3661:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                          "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3670:14:5",
                      "memberName": "POLLUTION_BODY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "3661:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "src": "3633:51:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserRole_$34",
                      "typeString": "enum GreenHydrogenCredit.UserRole"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "3633:51:5"
                },
                {
                  "expression": {
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 310,
                        "name": "userRoleNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "3694:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 312,
                      "indexExpression": {
                        "id": 311,
                        "name": "_pollutionBody",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "3708:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3694:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "706f6c6c7574696f6e5f626f6479",
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3726:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_b1046f210fcce3495c8eb162f6e2b5593d0e9bd295d55e6f752bab88b01f83c0",
                        "typeString": "literal_string \"pollution_body\""
                      },
                      "value": "pollution_body"
                    },
                    "src": "3694:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "3694:48:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 317,
                        "name": "_pollutionBody",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "3770:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 318,
                          "name": "UserRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "3786:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                            "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3795:14:5",
                        "memberName": "POLLUTION_BODY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "3786:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        }
                      },
                      {
                        "hexValue": "706f6c6c7574696f6e5f626f6479",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3811:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1046f210fcce3495c8eb162f6e2b5593d0e9bd295d55e6f752bab88b01f83c0",
                          "typeString": "literal_string \"pollution_body\""
                        },
                        "value": "pollution_body"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1046f210fcce3495c8eb162f6e2b5593d0e9bd295d55e6f752bab88b01f83c0",
                          "typeString": "literal_string \"pollution_body\""
                        }
                      ],
                      "id": 316,
                      "name": "RoleAssigned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "3757:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_UserRole_$34_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,enum GreenHydrogenCredit.UserRole,string memory)"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3757:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "EmitStatement",
                  "src": "3752:76:5"
                }
              ]
            },
            "functionSelector": "f2715845",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 297,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 296,
                  "name": "onlyGovernment",
                  "nameLocations": [
                    "3561:14:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 184,
                  "src": "3561:14:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3561:14:5"
              }
            ],
            "name": "setPollutionBodyAddress",
            "nameLocation": "3506:23:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "_pollutionBody",
                  "nameLocation": "3538:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "3530:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3530:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3529:24:5"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3576:0:5"
            },
            "scope": 1056,
            "src": "3497:338:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "3940:128:5",
              "statements": [
                {
                  "expression": {
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 336,
                        "name": "userRoles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "3950:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                          "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 338,
                      "indexExpression": {
                        "id": 337,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "3960:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3950:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 339,
                      "name": "role",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 329,
                      "src": "3968:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "src": "3950:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserRole_$34",
                      "typeString": "enum GreenHydrogenCredit.UserRole"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "3950:22:5"
                },
                {
                  "expression": {
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 342,
                        "name": "userRoleNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "3982:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 344,
                      "indexExpression": {
                        "id": 343,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "3996:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3982:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 345,
                      "name": "roleName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "4004:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3982:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "3982:30:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 349,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "4040:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 350,
                        "name": "role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "4046:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        }
                      },
                      {
                        "id": 351,
                        "name": "roleName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "4052:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 348,
                      "name": "RoleAssigned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "4027:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_UserRole_$34_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,enum GreenHydrogenCredit.UserRole,string memory)"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4027:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "EmitStatement",
                  "src": "4022:39:5"
                }
              ]
            },
            "functionSelector": "6dafee6d",
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 334,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 333,
                  "name": "onlyGovernment",
                  "nameLocations": [
                    "3925:14:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 184,
                  "src": "3925:14:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3925:14:5"
              }
            ],
            "name": "assignRole",
            "nameLocation": "3854:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3873:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "3865:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3865:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "3888:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "3879:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_UserRole_$34",
                    "typeString": "enum GreenHydrogenCredit.UserRole"
                  },
                  "typeName": {
                    "id": 328,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 327,
                      "name": "UserRole",
                      "nameLocations": [
                        "3879:8:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34,
                      "src": "3879:8:5"
                    },
                    "referencedDeclaration": 34,
                    "src": "3879:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserRole_$34",
                      "typeString": "enum GreenHydrogenCredit.UserRole"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "roleName",
                  "nameLocation": "3908:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "3894:22:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3894:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3864:53:5"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3940:0:5"
            },
            "scope": 1056,
            "src": "3845:223:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "4159:379:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 365,
                            "name": "userRoles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "4177:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                              "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                            }
                          },
                          "id": 367,
                          "indexExpression": {
                            "id": 366,
                            "name": "producer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "4187:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4177:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserRole_$34",
                            "typeString": "enum GreenHydrogenCredit.UserRole"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 368,
                            "name": "UserRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "4200:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                              "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                            }
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4209:8:5",
                          "memberName": "PRODUCER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "4200:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserRole_$34",
                            "typeString": "enum GreenHydrogenCredit.UserRole"
                          }
                        },
                        "src": "4177:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206d75737420626520726567697374657265642061732070726f6475636572",
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4219:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16ba6a8b86fe40fdf95a1d68949ac5c368c5320afdedc9af86b53536cd6a285a",
                          "typeString": "literal_string \"Address must be registered as producer\""
                        },
                        "value": "Address must be registered as producer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16ba6a8b86fe40fdf95a1d68949ac5c368c5320afdedc9af86b53536cd6a285a",
                          "typeString": "literal_string \"Address must be registered as producer\""
                        }
                      ],
                      "id": 364,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4169:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4169:91:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "4169:91:5"
                },
                {
                  "expression": {
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 374,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "4270:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$16_storage_$",
                            "typeString": "mapping(address => struct GreenHydrogenCredit.Producer storage ref)"
                          }
                        },
                        "id": 376,
                        "indexExpression": {
                          "id": 375,
                          "name": "producer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "4280:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4270:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$16_storage",
                          "typeString": "struct GreenHydrogenCredit.Producer storage ref"
                        }
                      },
                      "id": 377,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4290:9:5",
                      "memberName": "certified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "4270:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 378,
                      "name": "certified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "4302:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4270:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "4270:41:5"
                },
                {
                  "expression": {
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 381,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "4321:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$16_storage_$",
                            "typeString": "mapping(address => struct GreenHydrogenCredit.Producer storage ref)"
                          }
                        },
                        "id": 383,
                        "indexExpression": {
                          "id": 382,
                          "name": "producer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "4331:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4321:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$16_storage",
                          "typeString": "struct GreenHydrogenCredit.Producer storage ref"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4341:8:5",
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "4321:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 385,
                      "name": "certified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "4352:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4321:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "4321:40:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 389,
                        "name": "producer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "4394:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 390,
                        "name": "certified",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "4404:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 388,
                      "name": "ProducerCertified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "4376:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4376:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "EmitStatement",
                  "src": "4371:43:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 394,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4452:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4456:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4452:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 396,
                        "name": "producer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "4464:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "id": 397,
                          "name": "certified",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "4474:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "hexValue": "4445434552544946494544",
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4500:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_91c96d387860d4826c0fc8908fc46de7618e8f955f42974ce2c881e4ae26d6e0",
                            "typeString": "literal_string \"DECERTIFIED\""
                          },
                          "value": "DECERTIFIED"
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "4474:39:5",
                        "trueExpression": {
                          "hexValue": "434552544946494544",
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4486:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fab98eb79ec08c7f1a4bbf76d31a3353b95c9983fd24ee67b508d0d089c8c880",
                            "typeString": "literal_string \"CERTIFIED\""
                          },
                          "value": "CERTIFIED"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 401,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4515:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4521:9:5",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4515:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 393,
                      "name": "RegulatoryNotification",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "4429:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,string memory,uint256)"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4429:102:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "EmitStatement",
                  "src": "4424:107:5"
                }
              ]
            },
            "functionSelector": "45ea865c",
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 362,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 361,
                  "name": "onlyGovernment",
                  "nameLocations": [
                    "4144:14:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 184,
                  "src": "4144:14:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4144:14:5"
              }
            ],
            "name": "certifyProducer",
            "nameLocation": "4087:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "producer",
                  "nameLocation": "4111:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4103:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4103:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 359,
                  "mutability": "mutable",
                  "name": "certified",
                  "nameLocation": "4126:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4121:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4121:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4102:34:5"
            },
            "returnParameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4159:0:5"
            },
            "scope": 1056,
            "src": "4078:460:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 438,
              "nodeType": "Block",
              "src": "4623:186:5",
              "statements": [
                {
                  "expression": {
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 415,
                        "name": "isFrozen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4633:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 417,
                      "indexExpression": {
                        "id": 416,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "4642:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4633:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 418,
                      "name": "frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "4650:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4633:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "4633:23:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 422,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "4685:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 423,
                        "name": "frozen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "4691:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 421,
                      "name": "AccountFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "4671:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4671:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 425,
                  "nodeType": "EmitStatement",
                  "src": "4666:32:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 427,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4736:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4740:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4736:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 429,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "4748:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "id": 430,
                          "name": "frozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "4754:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "hexValue": "554e46524f5a454e",
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4774:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d807242d95db116e2d563fbe51746f0ad64911ea8d07be62dc6771da0d01b75c",
                            "typeString": "literal_string \"UNFROZEN\""
                          },
                          "value": "UNFROZEN"
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "4754:30:5",
                        "trueExpression": {
                          "hexValue": "46524f5a454e",
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4763:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7c78561e9c3b6dc2802172fb2041fc3504da930f63dfaf87b57359e924c17eb9",
                            "typeString": "literal_string \"FROZEN\""
                          },
                          "value": "FROZEN"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 434,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4786:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4792:9:5",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4786:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 426,
                      "name": "RegulatoryNotification",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "4713:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,string memory,uint256)"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4713:89:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 437,
                  "nodeType": "EmitStatement",
                  "src": "4708:94:5"
                }
              ]
            },
            "functionSelector": "cbe5404f",
            "id": 439,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 413,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 412,
                  "name": "onlyGovernment",
                  "nameLocations": [
                    "4608:14:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 184,
                  "src": "4608:14:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4608:14:5"
              }
            ],
            "name": "setAccountFrozen",
            "nameLocation": "4557:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4582:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "4574:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4574:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 410,
                  "mutability": "mutable",
                  "name": "frozen",
                  "nameLocation": "4593:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "4588:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4588:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4573:27:5"
            },
            "returnParameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4623:0:5"
            },
            "scope": 1056,
            "src": "4548:261:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 488,
              "nodeType": "Block",
              "src": "4886:443:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 443,
                            "name": "userRoles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "4904:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                              "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                            }
                          },
                          "id": 446,
                          "indexExpression": {
                            "expression": {
                              "id": 444,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4914:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4918:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4914:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4904:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserRole_$34",
                            "typeString": "enum GreenHydrogenCredit.UserRole"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 447,
                            "name": "UserRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "4929:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                              "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4938:4:5",
                          "memberName": "NONE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "4929:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserRole_$34",
                            "typeString": "enum GreenHydrogenCredit.UserRole"
                          }
                        },
                        "src": "4904:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c726561647920686173206120726f6c652061737369676e6564",
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4944:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ae522a9d8144df814591beb9f1bc2e5ede30c88a6be6b405c61df0bf5bec8da",
                          "typeString": "literal_string \"User already has a role assigned\""
                        },
                        "value": "User already has a role assigned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ae522a9d8144df814591beb9f1bc2e5ede30c88a6be6b405c61df0bf5bec8da",
                          "typeString": "literal_string \"User already has a role assigned\""
                        }
                      ],
                      "id": 442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4896:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4896:83:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "4896:83:5"
                },
                {
                  "expression": {
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 453,
                        "name": "userRoles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "4989:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                          "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 456,
                      "indexExpression": {
                        "expression": {
                          "id": 454,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4999:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5003:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4999:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4989:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 457,
                        "name": "UserRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "5013:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                          "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5022:8:5",
                      "memberName": "PRODUCER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "5013:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "src": "4989:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserRole_$34",
                      "typeString": "enum GreenHydrogenCredit.UserRole"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "4989:41:5"
                },
                {
                  "expression": {
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 461,
                        "name": "userRoleNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "5040:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 464,
                      "indexExpression": {
                        "expression": {
                          "id": 462,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5054:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5058:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5054:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5040:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "70726f6475636572",
                      "id": 465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5068:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_e8a771116431fd497933c982e9f1e2baea13d28ed5c5faf7e60dd163b2619256",
                        "typeString": "literal_string \"producer\""
                      },
                      "value": "producer"
                    },
                    "src": "5040:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "5040:38:5"
                },
                {
                  "expression": {
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 468,
                        "name": "producers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "5088:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$16_storage_$",
                          "typeString": "mapping(address => struct GreenHydrogenCredit.Producer storage ref)"
                        }
                      },
                      "id": 471,
                      "indexExpression": {
                        "expression": {
                          "id": 469,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5098:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5102:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5098:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5088:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Producer_$16_storage",
                        "typeString": "struct GreenHydrogenCredit.Producer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "66616c7365",
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5146:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5178:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5211:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5236:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 472,
                        "name": "Producer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "5112:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Producer_$16_storage_ptr_$",
                          "typeString": "type(struct GreenHydrogenCredit.Producer storage pointer)"
                        }
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5135:9:5",
                        "5165:11:5",
                        "5193:16:5",
                        "5226:8:5"
                      ],
                      "names": [
                        "certified",
                        "totalIssued",
                        "lastIssuanceTime",
                        "isActive"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5112:140:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Producer_$16_memory_ptr",
                        "typeString": "struct GreenHydrogenCredit.Producer memory"
                      }
                    },
                    "src": "5088:164:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Producer_$16_storage",
                      "typeString": "struct GreenHydrogenCredit.Producer storage ref"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "5088:164:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 481,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5280:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5284:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5280:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 483,
                          "name": "UserRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "5292:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                            "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                          }
                        },
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5301:8:5",
                        "memberName": "PRODUCER",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29,
                        "src": "5292:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        }
                      },
                      {
                        "hexValue": "70726f6475636572",
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5311:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8a771116431fd497933c982e9f1e2baea13d28ed5c5faf7e60dd163b2619256",
                          "typeString": "literal_string \"producer\""
                        },
                        "value": "producer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8a771116431fd497933c982e9f1e2baea13d28ed5c5faf7e60dd163b2619256",
                          "typeString": "literal_string \"producer\""
                        }
                      ],
                      "id": 480,
                      "name": "RoleAssigned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "5267:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_UserRole_$34_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,enum GreenHydrogenCredit.UserRole,string memory)"
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5267:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 487,
                  "nodeType": "EmitStatement",
                  "src": "5262:60:5"
                }
              ]
            },
            "functionSelector": "12c78ffa",
            "id": 489,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsProducer",
            "nameLocation": "4858:18:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4876:2:5"
            },
            "returnParameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4886:0:5"
            },
            "scope": 1056,
            "src": "4849:480:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "5428:694:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 501,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "5446:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5455:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5446:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5458:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5438:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5438:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "5438:52:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5515:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5519:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5515:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 510,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "5527:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 507,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1573,
                      "src": "5509:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5509:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "5509:25:5"
                },
                {
                  "expression": {
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 513,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "5544:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$16_storage_$",
                            "typeString": "mapping(address => struct GreenHydrogenCredit.Producer storage ref)"
                          }
                        },
                        "id": 516,
                        "indexExpression": {
                          "expression": {
                            "id": 514,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5554:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5558:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5554:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5544:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$16_storage",
                          "typeString": "struct GreenHydrogenCredit.Producer storage ref"
                        }
                      },
                      "id": 517,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5566:11:5",
                      "memberName": "totalIssued",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "5544:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 518,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "5581:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5544:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "5544:43:5"
                },
                {
                  "expression": {
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 521,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "5597:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$16_storage_$",
                            "typeString": "mapping(address => struct GreenHydrogenCredit.Producer storage ref)"
                          }
                        },
                        "id": 524,
                        "indexExpression": {
                          "expression": {
                            "id": 522,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5607:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5611:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5607:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5597:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$16_storage",
                          "typeString": "struct GreenHydrogenCredit.Producer storage ref"
                        }
                      },
                      "id": 525,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5619:16:5",
                      "memberName": "lastIssuanceTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "5597:38:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 526,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5638:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5644:9:5",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5638:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5597:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "5597:56:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 531,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5690:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5694:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5690:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 533,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "5702:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 534,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5710:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5716:9:5",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5710:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 530,
                      "name": "CreditIssued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "5677:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5677:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "EmitStatement",
                  "src": "5672:54:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 538,
                      "name": "governmentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "5797:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5826:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5818:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 539,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5818:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5818:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5797:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 554,
                  "nodeType": "IfStatement",
                  "src": "5793:154:5",
                  "trueBody": {
                    "id": 553,
                    "nodeType": "Block",
                    "src": "5830:117:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 545,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5872:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5876:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5872:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 547,
                              "name": "governmentAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "5884:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "4352454449545f495353554544",
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5903:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30bdbb6b22a8effab2f7d1e224da2ed54ba405258e3e2ea4cb12946c78fc9fe1",
                                "typeString": "literal_string \"CREDIT_ISSUED\""
                              },
                              "value": "CREDIT_ISSUED"
                            },
                            {
                              "expression": {
                                "id": 549,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5920:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5926:9:5",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5920:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_30bdbb6b22a8effab2f7d1e224da2ed54ba405258e3e2ea4cb12946c78fc9fe1",
                                "typeString": "literal_string \"CREDIT_ISSUED\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 544,
                            "name": "RegulatoryNotification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "5849:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,string memory,uint256)"
                            }
                          },
                          "id": 551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5849:87:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 552,
                        "nodeType": "EmitStatement",
                        "src": "5844:92:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 555,
                      "name": "pollutionBodyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "5960:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5992:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5984:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 556,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5984:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5984:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5960:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 571,
                  "nodeType": "IfStatement",
                  "src": "5956:160:5",
                  "trueBody": {
                    "id": 570,
                    "nodeType": "Block",
                    "src": "5996:120:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 562,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6038:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6042:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6038:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 564,
                              "name": "pollutionBodyAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "6050:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "4352454449545f495353554544",
                              "id": 565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6072:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30bdbb6b22a8effab2f7d1e224da2ed54ba405258e3e2ea4cb12946c78fc9fe1",
                                "typeString": "literal_string \"CREDIT_ISSUED\""
                              },
                              "value": "CREDIT_ISSUED"
                            },
                            {
                              "expression": {
                                "id": 566,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "6089:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6095:9:5",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "6089:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_30bdbb6b22a8effab2f7d1e224da2ed54ba405258e3e2ea4cb12946c78fc9fe1",
                                "typeString": "literal_string \"CREDIT_ISSUED\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 561,
                            "name": "RegulatoryNotification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "6015:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,string memory,uint256)"
                            }
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6015:90:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 569,
                        "nodeType": "EmitStatement",
                        "src": "6010:95:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "ecab818c",
            "id": 573,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 494,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 493,
                  "name": "onlyCertifiedProducer",
                  "nameLocations": [
                    "5384:21:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 231,
                  "src": "5384:21:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "5384:21:5"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 496,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5416:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5420:6:5",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5416:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 498,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 495,
                  "name": "notFrozen",
                  "nameLocations": [
                    "5406:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 260,
                  "src": "5406:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "5406:21:5"
              }
            ],
            "name": "issueCredits",
            "nameLocation": "5348:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5369:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "5361:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5361:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5360:16:5"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5428:0:5"
            },
            "scope": 1056,
            "src": "5339:783:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 623,
              "nodeType": "Block",
              "src": "6201:460:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        },
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 577,
                            "name": "userRoles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "6219:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                              "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                            }
                          },
                          "id": 580,
                          "indexExpression": {
                            "expression": {
                              "id": 578,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6229:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6233:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6229:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6219:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserRole_$34",
                            "typeString": "enum GreenHydrogenCredit.UserRole"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 581,
                            "name": "UserRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "6244:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                              "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                            }
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6253:4:5",
                          "memberName": "NONE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "6244:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserRole_$34",
                            "typeString": "enum GreenHydrogenCredit.UserRole"
                          }
                        },
                        "src": "6219:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c726561647920686173206120726f6c652061737369676e6564",
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6259:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ae522a9d8144df814591beb9f1bc2e5ede30c88a6be6b405c61df0bf5bec8da",
                          "typeString": "literal_string \"User already has a role assigned\""
                        },
                        "value": "User already has a role assigned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ae522a9d8144df814591beb9f1bc2e5ede30c88a6be6b405c61df0bf5bec8da",
                          "typeString": "literal_string \"User already has a role assigned\""
                        }
                      ],
                      "id": 576,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6211:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6211:83:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 586,
                  "nodeType": "ExpressionStatement",
                  "src": "6211:83:5"
                },
                {
                  "expression": {
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 587,
                        "name": "userRoles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "6304:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                          "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 590,
                      "indexExpression": {
                        "expression": {
                          "id": 588,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6314:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6318:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6314:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6304:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 591,
                        "name": "UserRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "6328:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                          "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6337:7:5",
                      "memberName": "FACTORY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "6328:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "src": "6304:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserRole_$34",
                      "typeString": "enum GreenHydrogenCredit.UserRole"
                    }
                  },
                  "id": 594,
                  "nodeType": "ExpressionStatement",
                  "src": "6304:40:5"
                },
                {
                  "expression": {
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 595,
                        "name": "userRoleNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "6354:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 598,
                      "indexExpression": {
                        "expression": {
                          "id": 596,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6368:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6372:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6368:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6354:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "666163746f7279",
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6382:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_e366a98476020cb9ff8cc566d0cdeac414e546d2e7ede445f4e7032a4272c771",
                        "typeString": "literal_string \"factory\""
                      },
                      "value": "factory"
                    },
                    "src": "6354:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "6354:37:5"
                },
                {
                  "expression": {
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 602,
                        "name": "factories",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "6401:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                          "typeString": "mapping(address => struct GreenHydrogenCredit.Factory storage ref)"
                        }
                      },
                      "id": 605,
                      "indexExpression": {
                        "expression": {
                          "id": 603,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6411:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6415:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6411:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6401:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Factory_$27_storage",
                        "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6454:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6479:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6516:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6541:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6574:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 606,
                        "name": "Factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "6425:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Factory_$27_storage_ptr_$",
                          "typeString": "type(struct GreenHydrogenCredit.Factory storage pointer)"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "6447:5:5",
                        "6469:8:5",
                        "6498:16:5",
                        "6531:8:5",
                        "6560:12:5"
                      ],
                      "names": [
                        "quota",
                        "hasQuota",
                        "creditsPurchased",
                        "quotaMet",
                        "quotaSetTime"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6425:161:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Factory_$27_memory_ptr",
                        "typeString": "struct GreenHydrogenCredit.Factory memory"
                      }
                    },
                    "src": "6401:185:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Factory_$27_storage",
                      "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "6401:185:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 616,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6614:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6618:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6614:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 618,
                          "name": "UserRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "6626:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                            "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                          }
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6635:7:5",
                        "memberName": "FACTORY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "6626:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        }
                      },
                      {
                        "hexValue": "666163746f7279",
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6644:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e366a98476020cb9ff8cc566d0cdeac414e546d2e7ede445f4e7032a4272c771",
                          "typeString": "literal_string \"factory\""
                        },
                        "value": "factory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e366a98476020cb9ff8cc566d0cdeac414e546d2e7ede445f4e7032a4272c771",
                          "typeString": "literal_string \"factory\""
                        }
                      ],
                      "id": 615,
                      "name": "RoleAssigned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "6601:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_UserRole_$34_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,enum GreenHydrogenCredit.UserRole,string memory)"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6601:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 622,
                  "nodeType": "EmitStatement",
                  "src": "6596:58:5"
                }
              ]
            },
            "functionSelector": "497522a0",
            "id": 624,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsFactory",
            "nameLocation": "6174:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6191:2:5"
            },
            "returnParameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6201:0:5"
            },
            "scope": 1056,
            "src": "6165:496:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 679,
              "nodeType": "Block",
              "src": "6723:328:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 632,
                          "name": "quota",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 626,
                          "src": "6741:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6749:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6741:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "51756f7461206d7573742062652067726561746572207468616e2030",
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6752:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2cd1220afc297678adda5a82a4a6c69c31f9e09f36a4c067140c94c2441da77c",
                          "typeString": "literal_string \"Quota must be greater than 0\""
                        },
                        "value": "Quota must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2cd1220afc297678adda5a82a4a6c69c31f9e09f36a4c067140c94c2441da77c",
                          "typeString": "literal_string \"Quota must be greater than 0\""
                        }
                      ],
                      "id": 631,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6733:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6733:50:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "6733:50:5"
                },
                {
                  "expression": {
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 638,
                          "name": "factories",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "6793:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                            "typeString": "mapping(address => struct GreenHydrogenCredit.Factory storage ref)"
                          }
                        },
                        "id": 641,
                        "indexExpression": {
                          "expression": {
                            "id": 639,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6803:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6807:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6803:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6793:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Factory_$27_storage",
                          "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                        }
                      },
                      "id": 642,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6815:5:5",
                      "memberName": "quota",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "6793:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 643,
                      "name": "quota",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "6823:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6793:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "6793:35:5"
                },
                {
                  "expression": {
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 646,
                          "name": "factories",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "6838:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                            "typeString": "mapping(address => struct GreenHydrogenCredit.Factory storage ref)"
                          }
                        },
                        "id": 649,
                        "indexExpression": {
                          "expression": {
                            "id": 647,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6848:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6852:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6848:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6838:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Factory_$27_storage",
                          "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6860:8:5",
                      "memberName": "hasQuota",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "6838:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6871:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6838:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "6838:37:5"
                },
                {
                  "expression": {
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 654,
                          "name": "factories",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "6885:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                            "typeString": "mapping(address => struct GreenHydrogenCredit.Factory storage ref)"
                          }
                        },
                        "id": 657,
                        "indexExpression": {
                          "expression": {
                            "id": 655,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6895:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6899:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6895:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6885:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Factory_$27_storage",
                          "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6907:12:5",
                      "memberName": "quotaSetTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "6885:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 659,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6922:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6928:9:5",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6922:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6885:52:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 662,
                  "nodeType": "ExpressionStatement",
                  "src": "6885:52:5"
                },
                {
                  "expression": {
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 663,
                          "name": "factories",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "6947:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                            "typeString": "mapping(address => struct GreenHydrogenCredit.Factory storage ref)"
                          }
                        },
                        "id": 666,
                        "indexExpression": {
                          "expression": {
                            "id": 664,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6957:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6961:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6957:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6947:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Factory_$27_storage",
                          "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                        }
                      },
                      "id": 667,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6969:8:5",
                      "memberName": "quotaMet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "6947:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6980:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6947:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 670,
                  "nodeType": "ExpressionStatement",
                  "src": "6947:38:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 672,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7009:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7013:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7009:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 674,
                        "name": "quota",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "7021:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 675,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7028:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7034:9:5",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7028:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 671,
                      "name": "QuotaSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "7000:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7000:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 678,
                  "nodeType": "EmitStatement",
                  "src": "6995:49:5"
                }
              ]
            },
            "functionSelector": "a257db8e",
            "id": 680,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 629,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 628,
                  "name": "onlyFactory",
                  "nameLocations": [
                    "6711:11:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 246,
                  "src": "6711:11:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "6711:11:5"
              }
            ],
            "name": "setQuota",
            "nameLocation": "6680:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "quota",
                  "nameLocation": "6697:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "6689:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6689:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6688:15:5"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6723:0:5"
            },
            "scope": 1056,
            "src": "6671:380:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 843,
              "nodeType": "Block",
              "src": "7188:1638:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 697,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 684,
                          "src": "7206:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7215:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7206:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7218:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7198:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7198:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "7198:52:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 705,
                              "name": "seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "7278:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 704,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1268,
                            "src": "7268:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7268:17:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 707,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 684,
                          "src": "7289:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7268:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c6c65722068617320696e73756666696369656e742063726564697473",
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7297:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2bd46dfbfc542d2270134d3548b56775021b691e5fabec7873702aeb0257ea8",
                          "typeString": "literal_string \"Seller has insufficient credits\""
                        },
                        "value": "Seller has insufficient credits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2bd46dfbfc542d2270134d3548b56775021b691e5fabec7873702aeb0257ea8",
                          "typeString": "literal_string \"Seller has insufficient credits\""
                        }
                      ],
                      "id": 703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7260:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7260:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "7260:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 713,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "7409:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 714,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7417:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7421:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7417:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 716,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "7429:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 712,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "7399:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7399:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "7399:37:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_UserRole_$34",
                      "typeString": "enum GreenHydrogenCredit.UserRole"
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 719,
                        "name": "userRoles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "7525:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                          "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 722,
                      "indexExpression": {
                        "expression": {
                          "id": 720,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7535:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7539:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7535:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7525:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 723,
                        "name": "UserRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "7550:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                          "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7559:7:5",
                      "memberName": "FACTORY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "7550:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "src": "7525:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 798,
                  "nodeType": "IfStatement",
                  "src": "7521:801:5",
                  "trueBody": {
                    "id": 797,
                    "nodeType": "Block",
                    "src": "7568:754:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 726,
                                "name": "factories",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "7582:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                                  "typeString": "mapping(address => struct GreenHydrogenCredit.Factory storage ref)"
                                }
                              },
                              "id": 729,
                              "indexExpression": {
                                "expression": {
                                  "id": 727,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7592:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7596:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7592:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7582:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Factory_$27_storage",
                                "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                              }
                            },
                            "id": 730,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7604:16:5",
                            "memberName": "creditsPurchased",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22,
                            "src": "7582:38:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 731,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 684,
                            "src": "7624:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7582:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 733,
                        "nodeType": "ExpressionStatement",
                        "src": "7582:48:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 734,
                                  "name": "factories",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "7698:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                                    "typeString": "mapping(address => struct GreenHydrogenCredit.Factory storage ref)"
                                  }
                                },
                                "id": 737,
                                "indexExpression": {
                                  "expression": {
                                    "id": 735,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7708:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 736,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7712:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "7708:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7698:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Factory_$27_storage",
                                  "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                                }
                              },
                              "id": 738,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7720:8:5",
                              "memberName": "hasQuota",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20,
                              "src": "7698:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 739,
                                    "name": "factories",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "7749:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                                      "typeString": "mapping(address => struct GreenHydrogenCredit.Factory storage ref)"
                                    }
                                  },
                                  "id": 742,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 740,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7759:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 741,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7763:6:5",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7759:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7749:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Factory_$27_storage",
                                    "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                                  }
                                },
                                "id": 743,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7771:16:5",
                                "memberName": "creditsPurchased",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 22,
                                "src": "7749:38:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 744,
                                    "name": "factories",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "7791:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                                      "typeString": "mapping(address => struct GreenHydrogenCredit.Factory storage ref)"
                                    }
                                  },
                                  "id": 747,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 745,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7801:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 746,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7805:6:5",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7801:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7791:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Factory_$27_storage",
                                    "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                                  }
                                },
                                "id": 748,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7813:5:5",
                                "memberName": "quota",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 18,
                                "src": "7791:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7749:69:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7698:120:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "7839:31:5",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 751,
                                  "name": "factories",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "7840:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                                    "typeString": "mapping(address => struct GreenHydrogenCredit.Factory storage ref)"
                                  }
                                },
                                "id": 754,
                                "indexExpression": {
                                  "expression": {
                                    "id": 752,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7850:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 753,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7854:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "7850:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7840:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Factory_$27_storage",
                                  "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                                }
                              },
                              "id": 755,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7862:8:5",
                              "memberName": "quotaMet",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24,
                              "src": "7840:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7698:172:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 796,
                        "nodeType": "IfStatement",
                        "src": "7694:618:5",
                        "trueBody": {
                          "id": 795,
                          "nodeType": "Block",
                          "src": "7872:440:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 758,
                                      "name": "factories",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "7890:9:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                                        "typeString": "mapping(address => struct GreenHydrogenCredit.Factory storage ref)"
                                      }
                                    },
                                    "id": 761,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 759,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "7900:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 760,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7904:6:5",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "7900:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7890:21:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Factory_$27_storage",
                                      "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                                    }
                                  },
                                  "id": 762,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7912:8:5",
                                  "memberName": "quotaMet",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 24,
                                  "src": "7890:30:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7923:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "7890:37:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 765,
                              "nodeType": "ExpressionStatement",
                              "src": "7890:37:5"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 767,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7959:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 768,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7963:6:5",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7959:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 769,
                                        "name": "factories",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 44,
                                        "src": "7971:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                                          "typeString": "mapping(address => struct GreenHydrogenCredit.Factory storage ref)"
                                        }
                                      },
                                      "id": 772,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 770,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "7981:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 771,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7985:6:5",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "7981:10:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7971:21:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Factory_$27_storage",
                                        "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                                      }
                                    },
                                    "id": 773,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7993:16:5",
                                    "memberName": "creditsPurchased",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 22,
                                    "src": "7971:38:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 774,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "8011:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 775,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8017:9:5",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "8011:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 766,
                                  "name": "QuotaMet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "7950:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7950:77:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 777,
                              "nodeType": "EmitStatement",
                              "src": "7945:82:5"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 778,
                                  "name": "pollutionBodyAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61,
                                  "src": "8130:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 781,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8162:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 780,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8154:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 779,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8154:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8154:10:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "8130:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 794,
                              "nodeType": "IfStatement",
                              "src": "8126:172:5",
                              "trueBody": {
                                "id": 793,
                                "nodeType": "Block",
                                "src": "8166:132:5",
                                "statements": [
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 785,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "8216:3:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 786,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "8220:6:5",
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "8216:10:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 787,
                                          "name": "pollutionBodyAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 61,
                                          "src": "8228:20:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "hexValue": "51554f54415f4d4554",
                                          "id": 788,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8250:11:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_82f80f98866afb5c8bfa6553fece942bfd96060ddd90ab44e49c0b51dd660e08",
                                            "typeString": "literal_string \"QUOTA_MET\""
                                          },
                                          "value": "QUOTA_MET"
                                        },
                                        {
                                          "expression": {
                                            "id": 789,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "8263:5:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 790,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "8269:9:5",
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "8263:15:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_82f80f98866afb5c8bfa6553fece942bfd96060ddd90ab44e49c0b51dd660e08",
                                            "typeString": "literal_string \"QUOTA_MET\""
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 784,
                                        "name": "RegulatoryNotification",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 128,
                                        "src": "8193:22:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,address,string memory,uint256)"
                                        }
                                      },
                                      "id": 791,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8193:86:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 792,
                                    "nodeType": "EmitStatement",
                                    "src": "8188:91:5"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 800,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8361:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8365:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8361:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 802,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "8373:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 803,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "8381:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 804,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "8389:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 805,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8396:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8402:9:5",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8396:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 799,
                      "name": "CreditPurchased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "8345:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8345:67:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 808,
                  "nodeType": "EmitStatement",
                  "src": "8340:72:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 809,
                      "name": "governmentAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "8495:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8524:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8516:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 810,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8516:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8516:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8495:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 825,
                  "nodeType": "IfStatement",
                  "src": "8491:157:5",
                  "trueBody": {
                    "id": 824,
                    "nodeType": "Block",
                    "src": "8528:120:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 816,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8570:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8574:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8570:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 818,
                              "name": "governmentAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "8582:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "4352454449545f505552434841534544",
                              "id": 819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8601:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3011dcd121cdebb69cceab1ae6be33bf693a0694cf6a30e1ae0bd213464efada",
                                "typeString": "literal_string \"CREDIT_PURCHASED\""
                              },
                              "value": "CREDIT_PURCHASED"
                            },
                            {
                              "expression": {
                                "id": 820,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8621:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8627:9:5",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8621:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3011dcd121cdebb69cceab1ae6be33bf693a0694cf6a30e1ae0bd213464efada",
                                "typeString": "literal_string \"CREDIT_PURCHASED\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 815,
                            "name": "RegulatoryNotification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "8547:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,string memory,uint256)"
                            }
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8547:90:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 823,
                        "nodeType": "EmitStatement",
                        "src": "8542:95:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 826,
                      "name": "pollutionBodyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "8661:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8693:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8685:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 827,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8685:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8685:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8661:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 842,
                  "nodeType": "IfStatement",
                  "src": "8657:163:5",
                  "trueBody": {
                    "id": 841,
                    "nodeType": "Block",
                    "src": "8697:123:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 833,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8739:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8743:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8739:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 835,
                              "name": "pollutionBodyAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "8751:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "4352454449545f505552434841534544",
                              "id": 836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8773:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3011dcd121cdebb69cceab1ae6be33bf693a0694cf6a30e1ae0bd213464efada",
                                "typeString": "literal_string \"CREDIT_PURCHASED\""
                              },
                              "value": "CREDIT_PURCHASED"
                            },
                            {
                              "expression": {
                                "id": 837,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8793:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8799:9:5",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8793:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3011dcd121cdebb69cceab1ae6be33bf693a0694cf6a30e1ae0bd213464efada",
                                "typeString": "literal_string \"CREDIT_PURCHASED\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 832,
                            "name": "RegulatoryNotification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "8716:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,string memory,uint256)"
                            }
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8716:93:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 840,
                        "nodeType": "EmitStatement",
                        "src": "8711:98:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "43131f97",
            "id": 844,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 689,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "7158:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7162:6:5",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7158:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 691,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 688,
                  "name": "notFrozen",
                  "nameLocations": [
                    "7148:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 260,
                  "src": "7148:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "7148:21:5"
              },
              {
                "arguments": [
                  {
                    "id": 693,
                    "name": "seller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 682,
                    "src": "7180:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 694,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 692,
                  "name": "notFrozen",
                  "nameLocations": [
                    "7170:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 260,
                  "src": "7170:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "7170:17:5"
              }
            ],
            "name": "purchaseCredits",
            "nameLocation": "7070:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "7094:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "7086:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7086:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 684,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7110:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "7102:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7102:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "7126:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "7118:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7118:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7085:47:5"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7188:0:5"
            },
            "scope": 1056,
            "src": "7061:1765:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 881,
              "nodeType": "Block",
              "src": "8905:265:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 848,
                            "name": "userRoles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "8923:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                              "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                            }
                          },
                          "id": 851,
                          "indexExpression": {
                            "expression": {
                              "id": 849,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8933:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8937:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8933:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8923:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserRole_$34",
                            "typeString": "enum GreenHydrogenCredit.UserRole"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 852,
                            "name": "UserRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "8948:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                              "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8957:4:5",
                          "memberName": "NONE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "8948:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserRole_$34",
                            "typeString": "enum GreenHydrogenCredit.UserRole"
                          }
                        },
                        "src": "8923:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c726561647920686173206120726f6c652061737369676e6564",
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8963:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ae522a9d8144df814591beb9f1bc2e5ede30c88a6be6b405c61df0bf5bec8da",
                          "typeString": "literal_string \"User already has a role assigned\""
                        },
                        "value": "User already has a role assigned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ae522a9d8144df814591beb9f1bc2e5ede30c88a6be6b405c61df0bf5bec8da",
                          "typeString": "literal_string \"User already has a role assigned\""
                        }
                      ],
                      "id": 847,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8915:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8915:83:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 857,
                  "nodeType": "ExpressionStatement",
                  "src": "8915:83:5"
                },
                {
                  "expression": {
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 858,
                        "name": "userRoles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "9008:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                          "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 861,
                      "indexExpression": {
                        "expression": {
                          "id": 859,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9018:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9022:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9018:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9008:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 862,
                        "name": "UserRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "9032:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                          "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                        }
                      },
                      "id": 863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "9041:7:5",
                      "memberName": "CITIZEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "9032:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserRole_$34",
                        "typeString": "enum GreenHydrogenCredit.UserRole"
                      }
                    },
                    "src": "9008:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserRole_$34",
                      "typeString": "enum GreenHydrogenCredit.UserRole"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "9008:40:5"
                },
                {
                  "expression": {
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 866,
                        "name": "userRoleNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "9058:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 869,
                      "indexExpression": {
                        "expression": {
                          "id": 867,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9072:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9076:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9072:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9058:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "636974697a656e",
                      "id": 870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9086:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_0fa602ceb732637ed42c58fc59d01dbec52172fd4f379bdb7b3c98ae3dac8acd",
                        "typeString": "literal_string \"citizen\""
                      },
                      "value": "citizen"
                    },
                    "src": "9058:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 872,
                  "nodeType": "ExpressionStatement",
                  "src": "9058:37:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 874,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9123:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9127:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9123:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 876,
                          "name": "UserRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "9135:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UserRole_$34_$",
                            "typeString": "type(enum GreenHydrogenCredit.UserRole)"
                          }
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9144:7:5",
                        "memberName": "CITIZEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "9135:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        }
                      },
                      {
                        "hexValue": "636974697a656e",
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9153:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fa602ceb732637ed42c58fc59d01dbec52172fd4f379bdb7b3c98ae3dac8acd",
                          "typeString": "literal_string \"citizen\""
                        },
                        "value": "citizen"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fa602ceb732637ed42c58fc59d01dbec52172fd4f379bdb7b3c98ae3dac8acd",
                          "typeString": "literal_string \"citizen\""
                        }
                      ],
                      "id": 873,
                      "name": "RoleAssigned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "9110:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_UserRole_$34_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,enum GreenHydrogenCredit.UserRole,string memory)"
                      }
                    },
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9110:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 880,
                  "nodeType": "EmitStatement",
                  "src": "9105:58:5"
                }
              ]
            },
            "functionSelector": "62e36eb8",
            "id": 882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsCitizen",
            "nameLocation": "8878:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8895:2:5"
            },
            "returnParameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8905:0:5"
            },
            "scope": 1056,
            "src": "8869:301:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 894,
              "nodeType": "Block",
              "src": "9291:43:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 890,
                      "name": "producers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "9308:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$16_storage_$",
                        "typeString": "mapping(address => struct GreenHydrogenCredit.Producer storage ref)"
                      }
                    },
                    "id": 892,
                    "indexExpression": {
                      "id": 891,
                      "name": "producer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "9318:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9308:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Producer_$16_storage",
                      "typeString": "struct GreenHydrogenCredit.Producer storage ref"
                    }
                  },
                  "functionReturnParameters": 889,
                  "id": 893,
                  "nodeType": "Return",
                  "src": "9301:26:5"
                }
              ]
            },
            "functionSelector": "c96f8145",
            "id": 895,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProducerInfo",
            "nameLocation": "9219:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "producer",
                  "nameLocation": "9243:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 895,
                  "src": "9235:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9235:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9234:18:5"
            },
            "returnParameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 895,
                  "src": "9274:15:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Producer_$16_memory_ptr",
                    "typeString": "struct GreenHydrogenCredit.Producer"
                  },
                  "typeName": {
                    "id": 887,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 886,
                      "name": "Producer",
                      "nameLocations": [
                        "9274:8:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16,
                      "src": "9274:8:5"
                    },
                    "referencedDeclaration": 16,
                    "src": "9274:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Producer_$16_storage_ptr",
                      "typeString": "struct GreenHydrogenCredit.Producer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9273:17:5"
            },
            "scope": 1056,
            "src": "9210:124:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "9422:42:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 903,
                      "name": "factories",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "9439:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Factory_$27_storage_$",
                        "typeString": "mapping(address => struct GreenHydrogenCredit.Factory storage ref)"
                      }
                    },
                    "id": 905,
                    "indexExpression": {
                      "id": 904,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "9449:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9439:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Factory_$27_storage",
                      "typeString": "struct GreenHydrogenCredit.Factory storage ref"
                    }
                  },
                  "functionReturnParameters": 902,
                  "id": 906,
                  "nodeType": "Return",
                  "src": "9432:25:5"
                }
              ]
            },
            "functionSelector": "9b724ad4",
            "id": 908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFactoryInfo",
            "nameLocation": "9353:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "9376:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "9368:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9368:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9367:17:5"
            },
            "returnParameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "9406:14:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Factory_$27_memory_ptr",
                    "typeString": "struct GreenHydrogenCredit.Factory"
                  },
                  "typeName": {
                    "id": 900,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 899,
                      "name": "Factory",
                      "nameLocations": [
                        "9406:7:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27,
                      "src": "9406:7:5"
                    },
                    "referencedDeclaration": 27,
                    "src": "9406:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Factory_$27_storage_ptr",
                      "typeString": "struct GreenHydrogenCredit.Factory"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9405:16:5"
            },
            "scope": 1056,
            "src": "9344:120:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 926,
              "nodeType": "Block",
              "src": "9555:62:5",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 918,
                          "name": "userRoles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "9573:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_UserRole_$34_$",
                            "typeString": "mapping(address => enum GreenHydrogenCredit.UserRole)"
                          }
                        },
                        "id": 920,
                        "indexExpression": {
                          "id": 919,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "9583:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9573:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UserRole_$34",
                          "typeString": "enum GreenHydrogenCredit.UserRole"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 921,
                          "name": "userRoleNames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "9590:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                            "typeString": "mapping(address => string storage ref)"
                          }
                        },
                        "id": 923,
                        "indexExpression": {
                          "id": 922,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "9604:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9590:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 924,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9572:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_UserRole_$34_$_t_string_storage_$",
                      "typeString": "tuple(enum GreenHydrogenCredit.UserRole,string storage ref)"
                    }
                  },
                  "functionReturnParameters": 917,
                  "id": 925,
                  "nodeType": "Return",
                  "src": "9565:45:5"
                }
              ]
            },
            "functionSelector": "27820851",
            "id": 927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserRole",
            "nameLocation": "9483:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 910,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9503:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "9495:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9495:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9494:14:5"
            },
            "returnParameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "9530:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_UserRole_$34",
                    "typeString": "enum GreenHydrogenCredit.UserRole"
                  },
                  "typeName": {
                    "id": 913,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 912,
                      "name": "UserRole",
                      "nameLocations": [
                        "9530:8:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34,
                      "src": "9530:8:5"
                    },
                    "referencedDeclaration": 34,
                    "src": "9530:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserRole_$34",
                      "typeString": "enum GreenHydrogenCredit.UserRole"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "9540:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9540:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9529:25:5"
            },
            "scope": 1056,
            "src": "9474:143:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 938,
              "nodeType": "Block",
              "src": "9696:41:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 934,
                      "name": "isFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "9713:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 936,
                    "indexExpression": {
                      "id": 935,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 929,
                      "src": "9722:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9713:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 933,
                  "id": 937,
                  "nodeType": "Return",
                  "src": "9706:24:5"
                }
              ]
            },
            "functionSelector": "e816d97f",
            "id": 939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAccountFrozen",
            "nameLocation": "9636:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9660:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "9652:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9652:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9651:17:5"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "9690:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9690:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9689:6:5"
            },
            "scope": 1056,
            "src": "9627:110:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1744
            ],
            "body": {
              "id": 973,
              "nodeType": "Block",
              "src": "9876:200:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9894:15:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 950,
                            "name": "isFrozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "9895:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 952,
                          "indexExpression": {
                            "id": 951,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 941,
                            "src": "9904:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9895:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2073656e646572206163636f756e742069732066726f7a656e",
                        "id": 954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9911:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8be011fd289a9ab1d7699f7f877c41eebd9b69ff7dfe3ca5b628b3909e8b0448",
                          "typeString": "literal_string \"ERC20: sender account is frozen\""
                        },
                        "value": "ERC20: sender account is frozen"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8be011fd289a9ab1d7699f7f877c41eebd9b69ff7dfe3ca5b628b3909e8b0448",
                          "typeString": "literal_string \"ERC20: sender account is frozen\""
                        }
                      ],
                      "id": 949,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9886:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9886:59:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 956,
                  "nodeType": "ExpressionStatement",
                  "src": "9886:59:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9963:13:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 958,
                            "name": "isFrozen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "9964:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 960,
                          "indexExpression": {
                            "id": 959,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 943,
                            "src": "9973:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9964:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20726563697069656e74206163636f756e742069732066726f7a656e",
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9978:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4d062806a8725a07746621e3070976b549d9fff1ad72aa8a6f05be75ff3233c",
                          "typeString": "literal_string \"ERC20: recipient account is frozen\""
                        },
                        "value": "ERC20: recipient account is frozen"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4d062806a8725a07746621e3070976b549d9fff1ad72aa8a6f05be75ff3233c",
                          "typeString": "literal_string \"ERC20: recipient account is frozen\""
                        }
                      ],
                      "id": 957,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9955:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9955:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "9955:60:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 968,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 941,
                        "src": "10052:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 969,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "10058:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 970,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "10062:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 965,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10025:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GreenHydrogenCredit_$1056_$",
                          "typeString": "type(contract super GreenHydrogenCredit)"
                        }
                      },
                      "id": 967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10031:20:5",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1744,
                      "src": "10025:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10025:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 972,
                  "nodeType": "ExpressionStatement",
                  "src": "10025:44:5"
                }
              ]
            },
            "id": 974,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "9795:20:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 947,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9867:8:5"
            },
            "parameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 941,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9824:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "9816:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9816:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9838:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "9830:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9830:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 945,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9850:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "9842:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9842:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9815:42:5"
            },
            "returnParameters": {
              "id": 948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9876:0:5"
            },
            "scope": 1056,
            "src": "9786:290:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1293
            ],
            "body": {
              "id": 1013,
              "nodeType": "Block",
              "src": "10267:213:5",
              "statements": [
                {
                  "assignments": [
                    992
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 992,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "10282:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1013,
                      "src": "10277:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 991,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10277:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 998,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 995,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 976,
                        "src": "10306:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 996,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 978,
                        "src": "10310:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 993,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10291:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GreenHydrogenCredit_$1056_$",
                          "typeString": "type(contract super GreenHydrogenCredit)"
                        }
                      },
                      "id": 994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10297:8:5",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1293,
                      "src": "10291:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10291:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10277:40:5"
                },
                {
                  "condition": {
                    "id": 999,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 992,
                    "src": "10331:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1010,
                  "nodeType": "IfStatement",
                  "src": "10327:124:5",
                  "trueBody": {
                    "id": 1009,
                    "nodeType": "Block",
                    "src": "10339:112:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1001,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10381:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10385:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10381:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1003,
                              "name": "governmentAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "10393:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "5452414e53464552",
                              "id": 1004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10412:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9143236d81225394f3bd65b44e6e29fdf4d7ba0773d9bb3f5cc15eb80ba37777",
                                "typeString": "literal_string \"TRANSFER\""
                              },
                              "value": "TRANSFER"
                            },
                            {
                              "expression": {
                                "id": 1005,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10424:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10430:9:5",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "10424:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9143236d81225394f3bd65b44e6e29fdf4d7ba0773d9bb3f5cc15eb80ba37777",
                                "typeString": "literal_string \"TRANSFER\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1000,
                            "name": "RegulatoryNotification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "10358:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,string memory,uint256)"
                            }
                          },
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10358:82:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1008,
                        "nodeType": "EmitStatement",
                        "src": "10353:87:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1011,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 992,
                    "src": "10467:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 990,
                  "id": 1012,
                  "nodeType": "Return",
                  "src": "10460:13:5"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 1014,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 982,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "10226:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10230:6:5",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "10226:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 984,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 981,
                  "name": "notFrozen",
                  "nameLocations": [
                    "10216:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 260,
                  "src": "10216:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "10216:21:5"
              },
              {
                "arguments": [
                  {
                    "id": 986,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 976,
                    "src": "10248:2:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 987,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 985,
                  "name": "notFrozen",
                  "nameLocations": [
                    "10238:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 260,
                  "src": "10238:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "10238:13:5"
              }
            ],
            "name": "transfer",
            "nameLocation": "10163:8:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 980,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10207:8:5"
            },
            "parameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10180:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1014,
                  "src": "10172:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10172:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 978,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10192:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1014,
                  "src": "10184:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10184:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10171:28:5"
            },
            "returnParameters": {
              "id": 990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 989,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1014,
                  "src": "10261:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 988,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10261:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10260:6:5"
            },
            "scope": 1056,
            "src": "10154:326:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1369
            ],
            "body": {
              "id": 1054,
              "nodeType": "Block",
              "src": "10615:217:5",
              "statements": [
                {
                  "assignments": [
                    1033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1033,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "10630:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1054,
                      "src": "10625:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1032,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10625:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1040,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1036,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "10658:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1037,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1018,
                        "src": "10664:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1038,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "10668:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1034,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10639:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GreenHydrogenCredit_$1056_$",
                          "typeString": "type(contract super GreenHydrogenCredit)"
                        }
                      },
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10645:12:5",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1369,
                      "src": "10639:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10639:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10625:50:5"
                },
                {
                  "condition": {
                    "id": 1041,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1033,
                    "src": "10689:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1051,
                  "nodeType": "IfStatement",
                  "src": "10685:118:5",
                  "trueBody": {
                    "id": 1050,
                    "nodeType": "Block",
                    "src": "10697:106:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1043,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1016,
                              "src": "10739:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1044,
                              "name": "governmentAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "10745:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "5452414e53464552",
                              "id": 1045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10764:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9143236d81225394f3bd65b44e6e29fdf4d7ba0773d9bb3f5cc15eb80ba37777",
                                "typeString": "literal_string \"TRANSFER\""
                              },
                              "value": "TRANSFER"
                            },
                            {
                              "expression": {
                                "id": 1046,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10776:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10782:9:5",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "10776:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9143236d81225394f3bd65b44e6e29fdf4d7ba0773d9bb3f5cc15eb80ba37777",
                                "typeString": "literal_string \"TRANSFER\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1042,
                            "name": "RegulatoryNotification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "10716:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,string memory,uint256)"
                            }
                          },
                          "id": 1048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10716:76:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1049,
                        "nodeType": "EmitStatement",
                        "src": "10711:81:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1052,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1033,
                    "src": "10819:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1031,
                  "id": 1053,
                  "nodeType": "Return",
                  "src": "10812:13:5"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 1055,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1024,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1016,
                    "src": "10580:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1025,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1023,
                  "name": "notFrozen",
                  "nameLocations": [
                    "10570:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 260,
                  "src": "10570:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "10570:15:5"
              },
              {
                "arguments": [
                  {
                    "id": 1027,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1018,
                    "src": "10596:2:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1028,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1026,
                  "name": "notFrozen",
                  "nameLocations": [
                    "10586:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 260,
                  "src": "10586:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "10586:13:5"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "10499:12:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1022,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10561:8:5"
            },
            "parameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1016,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10520:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1055,
                  "src": "10512:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10512:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1018,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10534:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1055,
                  "src": "10526:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10526:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1020,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10546:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1055,
                  "src": "10538:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10538:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10511:42:5"
            },
            "returnParameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1030,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1055,
                  "src": "10609:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1029,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10609:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10608:6:5"
            },
            "scope": 1056,
            "src": "10490:342:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1057,
        "src": "168:10666:5",
        "usedErrors": [],
        "usedEvents": [
          67,
          75,
          87,
          93,
          101,
          109,
          118,
          128,
          1070,
          1790,
          1799
        ]
      }
    ],
    "src": "32:10802:5"
  },
  "bytecode": "",
  "bytecodeSha1": "4168c97f6b5a0d8b368b5115941bc4a957c01f7e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.30+commit.73712a01"
  },
  "contractName": "GreenHydrogenCredit",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "147": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "146": [
            2169,
            2191,
            true
          ]
        }
      },
      "1": {
        "ERC20._approve": {
          "138": [
            10635,
            10654,
            true
          ],
          "139": [
            10713,
            10734,
            true
          ]
        },
        "ERC20._mint": {
          "143": [
            8650,
            8671,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "144": [
            11351,
            11388,
            false
          ],
          "145": [
            11412,
            11438,
            true
          ]
        },
        "ERC20._transfer": {
          "140": [
            7599,
            7617,
            true
          ],
          "141": [
            7677,
            7693,
            true
          ],
          "142": [
            7848,
            7869,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "137": [
            6809,
            6844,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {
        "GreenHydrogenCredit._beforeTokenTransfer": {
          "135": [
            9894,
            9909,
            true
          ],
          "136": [
            9963,
            9976,
            true
          ]
        },
        "GreenHydrogenCredit.certifyProducer": {
          "119": [
            4177,
            4217,
            true
          ],
          "120": [
            4474,
            4483,
            true
          ]
        },
        "GreenHydrogenCredit.issueCredits": {
          "127": [
            2680,
            2722,
            false
          ],
          "128": [
            2726,
            2757,
            false
          ],
          "129": [
            2761,
            2791,
            true
          ],
          "130": [
            5446,
            5456,
            true
          ],
          "131": [
            5797,
            5828,
            false
          ],
          "132": [
            5960,
            5994,
            false
          ]
        },
        "GreenHydrogenCredit.purchaseCredits": {
          "110": [
            7206,
            7216,
            true
          ],
          "111": [
            7268,
            7295,
            true
          ],
          "112": [
            7525,
            7566,
            false
          ],
          "113": [
            7698,
            7728,
            false
          ],
          "114": [
            7749,
            7818,
            false
          ],
          "115": [
            7840,
            7870,
            false
          ],
          "116": [
            8130,
            8164,
            false
          ],
          "117": [
            8495,
            8526,
            false
          ],
          "118": [
            8661,
            8695,
            false
          ]
        },
        "GreenHydrogenCredit.registerAsCitizen": {
          "122": [
            8923,
            8961,
            true
          ]
        },
        "GreenHydrogenCredit.registerAsFactory": {
          "121": [
            6219,
            6257,
            true
          ]
        },
        "GreenHydrogenCredit.registerAsProducer": {
          "108": [
            4904,
            4942,
            true
          ]
        },
        "GreenHydrogenCredit.setAccountFrozen": {
          "126": [
            4754,
            4760,
            true
          ]
        },
        "GreenHydrogenCredit.setPollutionBodyAddress": {
          "133": [
            2269,
            2300,
            true
          ],
          "134": [
            2304,
            2348,
            true
          ]
        },
        "GreenHydrogenCredit.setQuota": {
          "123": [
            2920,
            2961,
            true
          ],
          "124": [
            6741,
            6750,
            true
          ]
        },
        "GreenHydrogenCredit.transfer": {
          "125": [
            10331,
            10337,
            false
          ]
        },
        "GreenHydrogenCredit.transferFrom": {
          "109": [
            10689,
            10695,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "95": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "96": [
            2541,
            2558
          ],
          "97": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "3": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "50": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "79": [
            2161,
            2234
          ],
          "80": [
            2244,
            2272
          ]
        }
      },
      "1": {
        "ERC20._approve": {
          "81": [
            10627,
            10695
          ],
          "82": [
            10705,
            10773
          ],
          "83": [
            10784,
            10820
          ],
          "84": [
            10830,
            10867
          ]
        },
        "ERC20._mint": {
          "99": [
            8642,
            8707
          ],
          "100": [
            8718,
            8767
          ],
          "101": [
            8778,
            8800
          ],
          "102": [
            8946,
            8974
          ],
          "103": [
            8994,
            9036
          ]
        },
        "ERC20._spendAllowance": {
          "104": [
            11404,
            11472
          ],
          "105": [
            11514,
            11565
          ]
        },
        "ERC20._transfer": {
          "87": [
            7591,
            7659
          ],
          "88": [
            7669,
            7733
          ],
          "89": [
            7744,
            7782
          ],
          "90": [
            7840,
            7912
          ],
          "91": [
            7946,
            7984
          ],
          "92": [
            8161,
            8184
          ],
          "93": [
            8205,
            8236
          ],
          "94": [
            8247,
            8284
          ]
        },
        "ERC20.allowance": {
          "67": [
            4082,
            4116
          ]
        },
        "ERC20.approve": {
          "8": [
            4568,
            4600
          ],
          "9": [
            4610,
            4621
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3499,
            3524
          ]
        },
        "ERC20.decimals": {
          "1": [
            3166,
            3175
          ]
        },
        "ERC20.decreaseAllowance": {
          "59": [
            6801,
            6886
          ],
          "60": [
            6920,
            6980
          ],
          "61": [
            7001,
            7012
          ]
        },
        "ERC20.increaseAllowance": {
          "18": [
            6013,
            6077
          ]
        },
        "ERC20.name": {
          "6": [
            2233,
            2245
          ]
        },
        "ERC20.symbol": {
          "51": [
            2446,
            2460
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3322,
            3341
          ]
        },
        "ERC20.transfer": {
          "98": [
            3860,
            3888
          ]
        },
        "ERC20.transferFrom": {
          "85": [
            5373,
            5411
          ],
          "86": [
            5421,
            5448
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "5": {
        "GreenHydrogenCredit._beforeTokenTransfer": {
          "106": [
            9886,
            9945
          ],
          "107": [
            9955,
            10015
          ]
        },
        "GreenHydrogenCredit.assignRole": {
          "47": [
            3950,
            3972
          ],
          "48": [
            3982,
            4012
          ],
          "49": [
            4022,
            4061
          ]
        },
        "GreenHydrogenCredit.certifyProducer": {
          "29": [
            4169,
            4260
          ],
          "30": [
            4270,
            4311
          ],
          "31": [
            4321,
            4361
          ],
          "32": [
            4371,
            4414
          ],
          "33": [
            4424,
            4531
          ]
        },
        "GreenHydrogenCredit.getFactoryInfo": {
          "52": [
            9432,
            9457
          ]
        },
        "GreenHydrogenCredit.getProducerInfo": {
          "4": [
            9301,
            9327
          ]
        },
        "GreenHydrogenCredit.getUserRole": {
          "17": [
            9565,
            9610
          ]
        },
        "GreenHydrogenCredit.isAccountFrozen": {
          "5": [
            9706,
            9730
          ]
        },
        "GreenHydrogenCredit.issueCredits": {
          "68": [
            5438,
            5490
          ],
          "69": [
            5509,
            5534
          ],
          "70": [
            5544,
            5587
          ],
          "71": [
            5597,
            5653
          ],
          "72": [
            5672,
            5726
          ],
          "73": [
            5844,
            5936
          ],
          "74": [
            6010,
            6105
          ]
        },
        "GreenHydrogenCredit.purchaseCredits": {
          "19": [
            7198,
            7250
          ],
          "20": [
            7260,
            7331
          ],
          "21": [
            7399,
            7436
          ],
          "22": [
            7582,
            7630
          ],
          "23": [
            7890,
            7927
          ],
          "24": [
            7945,
            8027
          ],
          "25": [
            8188,
            8279
          ],
          "26": [
            8340,
            8412
          ],
          "27": [
            8542,
            8637
          ],
          "28": [
            8711,
            8809
          ]
        },
        "GreenHydrogenCredit.registerAsCitizen": {
          "39": [
            8915,
            8998
          ],
          "40": [
            9008,
            9048
          ],
          "41": [
            9058,
            9095
          ],
          "42": [
            9105,
            9163
          ]
        },
        "GreenHydrogenCredit.registerAsFactory": {
          "34": [
            6211,
            6294
          ],
          "35": [
            6304,
            6344
          ],
          "36": [
            6354,
            6391
          ],
          "37": [
            6401,
            6586
          ],
          "38": [
            6596,
            6654
          ]
        },
        "GreenHydrogenCredit.registerAsProducer": {
          "10": [
            4896,
            4979
          ],
          "11": [
            4989,
            5030
          ],
          "12": [
            5040,
            5078
          ],
          "13": [
            5088,
            5252
          ],
          "14": [
            5262,
            5322
          ]
        },
        "GreenHydrogenCredit.setAccountFrozen": {
          "64": [
            4633,
            4656
          ],
          "65": [
            4666,
            4698
          ],
          "66": [
            4708,
            4802
          ]
        },
        "GreenHydrogenCredit.setGovernmentAddress": {
          "43": [
            3269,
            3300
          ],
          "44": [
            3310,
            3354
          ],
          "45": [
            3364,
            3405
          ],
          "46": [
            3415,
            3480
          ]
        },
        "GreenHydrogenCredit.setPollutionBodyAddress": {
          "75": [
            3586,
            3623
          ],
          "76": [
            3633,
            3684
          ],
          "77": [
            3694,
            3742
          ],
          "78": [
            3752,
            3828
          ]
        },
        "GreenHydrogenCredit.setQuota": {
          "53": [
            6733,
            6783
          ],
          "54": [
            6793,
            6828
          ],
          "55": [
            6838,
            6875
          ],
          "56": [
            6885,
            6937
          ],
          "57": [
            6947,
            6985
          ],
          "58": [
            6995,
            7044
          ]
        },
        "GreenHydrogenCredit.transfer": {
          "62": [
            10353,
            10440
          ],
          "63": [
            10460,
            10473
          ]
        },
        "GreenHydrogenCredit.transferFrom": {
          "15": [
            10711,
            10792
          ],
          "16": [
            10812,
            10825
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "168:10666:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;-1:-1:-1;4431:197:1;;;;;:::i;:::-;;:::i;:::-;;;1292:14:6;;1285:22;1267:41;;1255:2;1240:18;4431:197:1;1127:187:6;4849:480:5;;;;;;;;;;;;;:::i;:::-;;3242:106:1;;;;;;;;;;-1:-1:-1;3329:12:1;;3242:106;;;1465:25:6;;;1453:2;1438:18;3242:106:1;1319:177:6;10490:342:5;;;;;;;;;;-1:-1:-1;10490:342:5;;;;;:::i;:::-;;:::i;718:45::-;;;;;;;;;;-1:-1:-1;718:45:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2315:14:6;;2308:22;2290:41;;2362:2;2347:18;;2340:34;;;;2390:18;;;2383:34;2460:14;2453:22;2448:2;2433:18;;2426:50;2277:3;2262:19;718:45:5;2071:411:6;9474:143:5;;;;;;;;;;-1:-1:-1;9474:143:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3091:91:1:-;;;;;;;;;;-1:-1:-1;3091:91:1;;3173:2;3325:36:6;;3313:2;3298:18;3091:91:1;3183:184:6;5871:234:1;;;;;;;;;;-1:-1:-1;5871:234:1;;;;;:::i;:::-;;:::i;7061:1765:5:-;;;;;;:::i;:::-;;:::i;4078:460::-;;;;;;;;;;-1:-1:-1;4078:460:5;;;;;:::i;:::-;;:::i;6165:496::-;;;;;;;;;;;;;:::i;8869:301::-;;;;;;;;;;;;;:::i;3191:296::-;;;;;;;;;;-1:-1:-1;3191:296:5;;;;;:::i;:::-;;:::i;3845:223::-;;;;;;;;;;-1:-1:-1;3845:223:5;;;;;:::i;:::-;;:::i;3406:125:1:-;;;;;;;;;;-1:-1:-1;3406:125:1;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:1;3480:7;3506:18;;;;;;;;;;;;3406:125;1831:101:0;;;;;;;;;;;;;:::i;865:45:5:-;;;;;;;;;;-1:-1:-1;865:45:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;1201:85:0:-;;;;;;;;;;-1:-1:-1;1273:6:0;;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;5833:32:6;;;5815:51;;5803:2;5788:18;1201:85:0;5669:203:6;916:47:5;;;;;;;;;;-1:-1:-1;916:47:5;;;;;:::i;:::-;;:::i;2365:102:1:-;;;;;;;;;;;;;:::i;9344:120:5:-;;;;;;;;;;-1:-1:-1;9344:120:5;;;;;:::i;:::-;;:::i;:::-;;;;;;6015:4:6;6057:3;6046:9;6042:19;6034:27;;6094:6;6088:13;6077:9;6070:32;6172:4;6164:6;6160:17;6154:24;6147:32;6140:40;6133:4;6122:9;6118:20;6111:70;6237:4;6229:6;6225:17;6219:24;6212:4;6201:9;6197:20;6190:54;6314:4;6306:6;6302:17;6296:24;6289:32;6282:40;6275:4;6264:9;6260:20;6253:70;6379:4;6371:6;6367:17;6361:24;6354:4;6343:9;6339:20;6332:54;5877:515;;;;;6671:380:5;;;;;;;;;;-1:-1:-1;6671:380:5;;;;;:::i;:::-;;:::i;6592:427:1:-;;;;;;;;;;-1:-1:-1;6592:427:1;;;;;:::i;:::-;;:::i;10154:326:5:-;;;;;;;;;;-1:-1:-1;10154:326:5;;;;;:::i;:::-;;:::i;9210:124::-;;;;;;;;;;-1:-1:-1;9210:124:5;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9308:19:5;;;;;:9;:19;;;;;;;;;9301:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9210:124;;;;;;;6855:13:6;;6848:21;6841:29;6823:48;;6927:4;6915:17;;;6909:24;6887:20;;;6880:54;6990:4;6978:17;;;6972:24;6950:20;;;6943:54;7067:4;7055:17;;;7049:24;7042:32;7035:40;7013:20;;;7006:70;;;;6810:3;6795:19;;6628:454;4548:261:5;;;;;;;;;;-1:-1:-1;4548:261:5;;;;;:::i;:::-;;:::i;1017:32::-;;;;;;;;;;-1:-1:-1;1017:32:5;;;;-1:-1:-1;;;;;1017:32:5;;;3974:149:1;;;;;;;;;;-1:-1:-1;3974:149:1;;;;;:::i;:::-;;:::i;819:40:5:-;;;;;;;;;;-1:-1:-1;819:40:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;9627:110;;;;;;;;;;-1:-1:-1;9627:110:5;;;;;:::i;:::-;-1:-1:-1;;;;;9713:17:5;9690:4;9713:17;;;:8;:17;;;;;;;;;9627:110;5339:783;;;;;;;;;;-1:-1:-1;5339:783:5;;;;;:::i;:::-;;:::i;1055:35::-;;;;;;;;;;-1:-1:-1;1055:35:5;;;;-1:-1:-1;;;;;1055:35:5;;;3497:338;;;;;;;;;;-1:-1:-1;3497:338:5;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;769:44:5:-;;;;;;;;;;-1:-1:-1;769:44:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7599:25:6;;;7667:14;;7660:22;7655:2;7640:18;;7633:50;7699:18;;;7692:34;;;;7769:14;7762:22;7757:2;7742:18;;7735:50;7816:3;7801:19;;7794:35;7586:3;7571:19;769:44:5;7352:483:6;2154:98:1;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:4;4568:32:1;719:10:4;4584:7:1;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;4849:480:5:-;4914:10;4929:13;4904:21;;;:9;:21;;;;;;;;:38;;;;;;;;:::i;:::-;;4896:83;;;;-1:-1:-1;;;4896:83:5;;;;;;;:::i;:::-;;;;;;;;;4999:10;4989:21;;;;:9;:21;;;;;;;;:41;;-1:-1:-1;;4989:41:5;5013:17;4989:41;;;5040:38;;;;;;;;;;-1:-1:-1;;;5040:38:5;;;;:25;;;:13;:25;;;;;;:38;;:25;:38;:::i;:::-;-1:-1:-1;5112:140:5;;;;;;;;-1:-1:-1;5112:140:5;;;;;;;;;;;;;;;;;;;;;;5098:10;5088:21;;;:9;:21;;;;;;;:164;;;;;;;-1:-1:-1;;5088:164:5;;;;;;;;5112:140;5088:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5267:55;;5098:10;;-1:-1:-1;;;;;;;;;;;5267:55:5;;;5112:140;5267:55;:::i;:::-;;;;;;;;4849:480::o;10490:342::-;-1:-1:-1;;;;;3087:17:5;;10609:4;3087:17;;;:8;:17;;;;;;10580:4;;3087:17;;3086:18;3078:48;;;;-1:-1:-1;;;3078:48:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;3087:17:5;::::1;;::::0;;;:8:::1;:17;::::0;;;;;10596:2;;3087:17:::1;;3086:18;3078:48;;;;-1:-1:-1::0;;;3078:48:5::1;;;;;;;:::i;:::-;10625:11:::2;10639:36;10658:4;10664:2;10668:6;10639:18;:36::i;:::-;10625:50;;10689:6;10685:118;;;10745:17;::::0;10716:76:::2;::::0;;11703:21:6;;;11760:1;11740:18;;;11733:29;-1:-1:-1;;;11793:2:6;11778:18;;11771:38;10776:15:5::2;11876:4:6::0;11861:20;;11854:36;10716:76:5;;-1:-1:-1;;;;;10745:17:5;;::::2;::::0;10716:76;::::2;::::0;-1:-1:-1;;;;;;;;;;;10716:76:5;;;;;11841:3:6;10716:76:5;;::::2;10685:118;10819:6:::0;10490:342;-1:-1:-1;;;;;;10490:342:5:o;9474:143::-;-1:-1:-1;;;;;9573:15:5;;9530:8;9573:15;;;:9;:15;;;;;;;;;9590:13;:19;;;;;9565:45;;9540:13;;9573:15;;;9590:19;;;9565:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9474:143;;;:::o;5871:234:1:-;5959:4;719:10:4;6013:64:1;719:10:4;6029:7:1;6066:10;6038:25;719:10:4;6029:7:1;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;7061:1765:5:-;7158:10;3087:17;;;;:8;:17;;;;;;;;3086:18;3078:48;;;;-1:-1:-1;;;3078:48:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;3087:17:5;::::1;;::::0;;;:8:::1;:17;::::0;;;;;7180:6;;3087:17:::1;;3086:18;3078:48;;;;-1:-1:-1::0;;;3078:48:5::1;;;;;;;:::i;:::-;7215:1:::2;7206:6;:10;7198:52;;;::::0;-1:-1:-1;;;7198:52:5;;12330:2:6;7198:52:5::2;::::0;::::2;12312:21:6::0;12369:2;12349:18;;;12342:30;12408:31;12388:18;;;12381:59;12457:18;;7198:52:5::2;12128:353:6::0;7198:52:5::2;7289:6;7268:17;7278:6;-1:-1:-1::0;;;;;3506:18:1;3480:7;3506:18;;;;;;;;;;;;3406:125;7268:17:5::2;:27;;7260:71;;;::::0;-1:-1:-1;;;7260:71:5;;12688:2:6;7260:71:5::2;::::0;::::2;12670:21:6::0;12727:2;12707:18;;;12700:30;12766:33;12746:18;;;12739:61;12817:18;;7260:71:5::2;12486:355:6::0;7260:71:5::2;7399:37;7409:6;7417:10;7429:6;7399:9;:37::i;:::-;7550:16;7535:10;7525:21;::::0;;;:9:::2;:21;::::0;;;;;::::2;;:41;::::0;::::2;;;;;;:::i;:::-;::::0;7521:801:::2;;7592:10;7582:21;::::0;;;:9:::2;:21;::::0;;;;:38:::2;;:48:::0;;7624:6;;7582:21;:48:::2;::::0;7624:6;;7582:48:::2;:::i;:::-;::::0;;;-1:-1:-1;;7708:10:5::2;7698:21;::::0;;;:9:::2;:21;::::0;;;;:30:::2;;::::0;::::2;;:120:::0;::::2;;;-1:-1:-1::0;7801:10:5::2;7791:21;::::0;;;:9:::2;:21;::::0;;;;:27;;7749:38:::2;::::0;;::::2;::::0;:69:::2;;7698:120;:172;;;;-1:-1:-1::0;7850:10:5::2;7840:21;::::0;;;:9:::2;:21;::::0;;;;:30:::2;;::::0;::::2;;7839:31;7698:172;7694:618;;;7900:10;7890:21;::::0;;;:9:::2;:21;::::0;;;;;;:30:::2;::::0;::::2;:37:::0;;-1:-1:-1;;7890:37:5::2;7923:4;7890:37;::::0;;7971:38:::2;;::::0;7950:77;;::::2;::::0;::::2;::::0;8011:15:::2;::::0;13020:25:6;;;13076:2;13061:18;;13054:34;13008:2;12993:18;;12846:248;7950:77:5::2;;;;;;;;8130:20;::::0;-1:-1:-1;;;;;8130:20:5::2;:34:::0;8126:172:::2;;8228:20;::::0;8193:86:::2;::::0;;13311:21:6;;;13368:1;13348:18;;;13341:29;-1:-1:-1;;;13401:2:6;13386:18;;13379:39;8263:15:5::2;13485:4:6::0;13470:20;;13463:36;8193:86:5;;-1:-1:-1;;;;;8228:20:5;;::::2;::::0;8216:10:::2;::::0;-1:-1:-1;;;;;;;;;;;8193:86:5;;;;;13450:3:6;8193:86:5;;::::2;8126:172;8345:67;::::0;;13712:25:6;;;13768:2;13753:18;;13746:34;;;8396:15:5::2;13796:18:6::0;;;13789:34;8345:67:5;;-1:-1:-1;;;;;8345:67:5;::::2;::::0;8361:10:::2;::::0;8345:67:::2;::::0;;;;13700:2:6;8345:67:5;;::::2;8495:17;::::0;-1:-1:-1;;;;;8495:17:5::2;:31:::0;8491:157:::2;;8582:17;::::0;8547:90:::2;::::0;;14046:21:6;;;14103:2;14083:18;;;14076:30;-1:-1:-1;;;14137:2:6;14122:18;;14115:46;8621:15:5::2;14228:4:6::0;14213:20;;14206:36;8547:90:5;;-1:-1:-1;;;;;8582:17:5;;::::2;::::0;8570:10:::2;::::0;-1:-1:-1;;;;;;;;;;;8547:90:5;;;;;14193:3:6;8547:90:5;;::::2;8491:157;8661:20;::::0;-1:-1:-1;;;;;8661:20:5::2;:34:::0;8657:163:::2;;8751:20;::::0;8716:93:::2;::::0;;14046:21:6;;;14103:2;14083:18;;;14076:30;-1:-1:-1;;;14137:2:6;14122:18;;14115:46;8793:15:5::2;14228:4:6::0;14213:20;;14206:36;8716:93:5;;-1:-1:-1;;;;;8751:20:5;;::::2;::::0;8739:10:::2;::::0;-1:-1:-1;;;;;;;;;;;8716:93:5;;;;;14193:3:6;8716:93:5;;::::2;8657:163;3136:1:::1;7061:1765:::0;;;;:::o;4078:460::-;2283:17;;-1:-1:-1;;;;;2283:17:5;2269:10;:31;;:79;;-1:-1:-1;2329:19:5;2314:10;2304:21;;;;:9;:21;;;;;;;;:44;;;;;;;;:::i;:::-;;2269:79;2261:131;;;;-1:-1:-1;;;2261:131:5;;;;;;;:::i;:::-;4200:17:::1;-1:-1:-1::0;;;;;4177:19:5;::::1;;::::0;;;:9:::1;:19;::::0;;;;;::::1;;:40;::::0;::::1;;;;;;:::i;:::-;;4169:91;;;::::0;-1:-1:-1;;;4169:91:5;;14863:2:6;4169:91:5::1;::::0;::::1;14845:21:6::0;14902:2;14882:18;;;14875:30;14941:34;14921:18;;;14914:62;-1:-1:-1;;;14992:18:6;;;14985:36;15038:19;;4169:91:5::1;14661:402:6::0;4169:91:5::1;-1:-1:-1::0;;;;;4270:19:5;::::1;;::::0;;;:9:::1;:19;::::0;;;;;;;;:41;;;::::1;;-1:-1:-1::0;;4270:41:5;;::::1;::::0;::::1;::::0;;4321:28:::1;::::0;;::::1;:40:::0;;;;::::1;::::0;::::1;::::0;;4376:38;;1267:41:6;;;4376:38:5::1;::::0;1240:18:6;4376:38:5::1;;;;;;;-1:-1:-1::0;;;;;4429:102:5;::::1;4452:10;-1:-1:-1::0;;;;;;;;;;;4474:9:5;:39:::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;4474:39:5::1;;::::0;::::1;;;;;;;;;;;;;;;;-1:-1:-1::0;;;4474:39:5::1;;::::0;::::1;4515:15;4429:102;;;;;;;:::i;:::-;;;;;;;;4078:460:::0;;:::o;6165:496::-;6229:10;6244:13;6219:21;;;:9;:21;;;;;;;;:38;;;;;;;;:::i;:::-;;6211:83;;;;-1:-1:-1;;;6211:83:5;;;;;;;:::i;:::-;6314:10;6304:21;;;;:9;:21;;;;;;;;:40;;-1:-1:-1;;6304:40:5;6328:16;6304:40;;;6354:37;;;;;;;;;;-1:-1:-1;;;6354:37:5;;;;:25;;;:13;:25;;;;;;:37;;:25;:37;:::i;:::-;-1:-1:-1;6425:161:5;;;;;;;;-1:-1:-1;6425:161:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;6411:10;6401:21;;;:9;:21;;;;;;;:185;;;;;;6425:161;6401:185;;;;;;;-1:-1:-1;;6401:185:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6601:53;;6411:10;;-1:-1:-1;;;;;;;;;;;6601:53:5;;;6401:185;6601:53;:::i;8869:301::-;8933:10;8948:13;8923:21;;;:9;:21;;;;;;;;:38;;;;;;;;:::i;:::-;;8915:83;;;;-1:-1:-1;;;8915:83:5;;;;;;;:::i;:::-;9018:10;9008:21;;;;:9;:21;;;;;;;;:40;;-1:-1:-1;;9008:40:5;9032:16;9008:40;;;9058:37;;;;;;;;;;-1:-1:-1;;;9058:37:5;;;;:25;;;:13;:25;;;;;;:37;;:25;:37;:::i;:::-;;9123:10;-1:-1:-1;;;;;9110:53:5;-1:-1:-1;;;;;;;;;;;9135:16:5;9110:53;;;;;;:::i;3191:296::-;1094:13:0;:11;:13::i;:::-;3269:17:5::1;:31:::0;;-1:-1:-1;;;;;3269:31:5;::::1;-1:-1:-1::0;;;;;;3269:31:5;;::::1;::::0;::::1;::::0;;;-1:-1:-1;3310:22:5;;;:9:::1;:22;::::0;;;;;;;:44;;-1:-1:-1;;3310:44:5::1;3335:19;3310:44;::::0;;3364:41;;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;3364:41:5;;::::1;::::0;:26;;;;;;;;;;:41:::1;::::0;:26;:41:::1;:::i;:::-;;3433:11;-1:-1:-1::0;;;;;3420:60:5::1;-1:-1:-1::0;;;;;;;;;;;3446:19:5::1;3420:60;;;;;;:::i;:::-;;;;;;;;3191:296:::0;:::o;3845:223::-;2283:17;;-1:-1:-1;;;;;2283:17:5;2269:10;:31;;:79;;-1:-1:-1;2329:19:5;2314:10;2304:21;;;;:9;:21;;;;;;;;:44;;;;;;;;:::i;:::-;;2269:79;2261:131;;;;-1:-1:-1;;;2261:131:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;3950:15:5;::::1;;::::0;;;:9:::1;:15;::::0;;;;:22;;3968:4;;3950:15;-1:-1:-1;;3950:22:5::1;::::0;3968:4;3950:22:::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;;;;;;3982:19:5;::::1;;::::0;;;:13:::1;:19;::::0;;;;:30:::1;4004:8:::0;3982:19;:30:::1;:::i;:::-;;4040:4;-1:-1:-1::0;;;;;4027:34:5::1;-1:-1:-1::0;;;;;;;;;;;4046:4:5::1;4052:8;4027:34;;;;;;;:::i;:::-;;;;;;;;3845:223:::0;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;916:47:5:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2365:102:1:-;2421:13;2453:7;2446:14;;;;;:::i;9344:120:5:-;9406:14;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9406:14:5;-1:-1:-1;;;;;;9439:18:5;;;;;:9;:18;;;;;;;;;9432:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9344:120::o;6671:380::-;2945:16;2930:10;2920:21;;;;:9;:21;;;;;;;;:41;;;;;;;;:::i;:::-;;2912:92;;;;-1:-1:-1;;;2912:92:5;;16872:2:6;2912:92:5;;;16854:21:6;16911:2;16891:18;;;16884:30;16950:34;16930:18;;;16923:62;-1:-1:-1;;;17001:18:6;;;16994:36;17047:19;;2912:92:5;16670:402:6;2912:92:5;6749:1:::1;6741:5;:9;6733:50;;;::::0;-1:-1:-1;;;6733:50:5;;17279:2:6;6733:50:5::1;::::0;::::1;17261:21:6::0;17318:2;17298:18;;;17291:30;17357;17337:18;;;17330:58;17405:18;;6733:50:5::1;17077:352:6::0;6733:50:5::1;6803:10;6793:21;::::0;;;:9:::1;:21;::::0;;;;;;;;:35;;;6871:4:::1;6838:30:::0;;::::1;:37:::0;;-1:-1:-1;;6838:37:5;;::::1;::::0;;::::1;::::0;;6922:15:::1;6885:34;::::0;::::1;:52:::0;;;6947:30:::1;::::0;;::::1;:38:::0;;;;::::1;::::0;;7000:44;;13020:25:6;;;13061:18;;;13054:34;7000:44:5::1;::::0;12993:18:6;7000:44:5::1;12846:248:6::0;6592:427:1;6685:4;719:10:4;6685:4:1;6766:25;719:10:4;6783:7:1;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:1;;17636:2:6;6801:85:1;;;17618:21:6;17675:2;17655:18;;;17648:30;17714:34;17694:18;;;17687:62;-1:-1:-1;;;17765:18:6;;;17758:35;17810:19;;6801:85:1;17434:401:6;6801:85:1;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;-1:-1:-1;7008:4:1;;6592:427;-1:-1:-1;;;;6592:427:1:o;10154:326:5:-;10226:10;10261:4;3087:17;;;:8;:17;;;;;;10261:4;;10226:10;3087:17;;3086:18;3078:48;;;;-1:-1:-1;;;3078:48:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;3087:17:5;::::1;;::::0;;;:8:::1;:17;::::0;;;;;10248:2;;3087:17:::1;;3086:18;3078:48;;;;-1:-1:-1::0;;;3078:48:5::1;;;;;;;:::i;:::-;10277:11:::2;10291:26;10306:2;10310:6;10291:14;:26::i;:::-;10277:40;;10331:6;10327:124;;;10393:17;::::0;10358:82:::2;::::0;;11703:21:6;;;11760:1;11740:18;;;11733:29;-1:-1:-1;;;11793:2:6;11778:18;;11771:38;10424:15:5::2;11876:4:6::0;11861:20;;11854:36;10358:82:5;;-1:-1:-1;;;;;10393:17:5;;::::2;::::0;10381:10:::2;::::0;-1:-1:-1;;;;;;;;;;;10358:82:5;;;;;11841:3:6;10358:82:5;;::::2;10327:124;10467:6:::0;10154:326;-1:-1:-1;;;;;10154:326:5:o;4548:261::-;2283:17;;-1:-1:-1;;;;;2283:17:5;2269:10;:31;;:79;;-1:-1:-1;2329:19:5;2314:10;2304:21;;;;:9;:21;;;;;;;;:44;;;;;;;;:::i;:::-;;2269:79;2261:131;;;;-1:-1:-1;;;2261:131:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;4633:14:5;::::1;;::::0;;;:8:::1;:14;::::0;;;;;;;;:23;;-1:-1:-1;;4633:23:5::1;::::0;::::1;;::::0;;::::1;::::0;;;4671:27;;1267:41:6;;;4671:27:5::1;::::0;1240:18:6;4671:27:5::1;;;;;;;-1:-1:-1::0;;;;;4713:89:5;::::1;4736:10;-1:-1:-1::0;;;;;;;;;;;4754:6:5;:30:::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;4754:30:5::1;;::::0;::::1;;;;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;4754:30:5::1;::::0;::::1;::::0;4713:89;;::::1;::::0;4754:30;4786:15:::1;::::0;4713:89:::1;:::i;3974:149:1:-:0;-1:-1:-1;;;;;4089:18:1;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;5339:783:5:-;2705:17;2690:10;2680:21;;;;:9;:21;;;;;;;;:42;;;;;;;;:::i;:::-;;:77;;;;-1:-1:-1;2736:10:5;2726:21;;;;:9;:21;;;;;:31;;;2680:77;:111;;;;-1:-1:-1;2771:10:5;2761:21;;;;:9;:21;;;;;:30;;;;;2680:111;2672:179;;;;-1:-1:-1;;;2672:179:5;;18042:2:6;2672:179:5;;;18024:21:6;18081:2;18061:18;;;18054:30;18120:34;18100:18;;;18093:62;18191:25;18171:18;;;18164:53;18234:19;;2672:179:5;17840:419:6;2672:179:5;5416:10:::1;3087:17;::::0;;;:8:::1;:17;::::0;;;;;::::1;;3086:18;3078:48;;;;-1:-1:-1::0;;;3078:48:5::1;;;;;;;:::i;:::-;5455:1:::2;5446:6;:10;5438:52;;;::::0;-1:-1:-1;;;5438:52:5;;12330:2:6;5438:52:5::2;::::0;::::2;12312:21:6::0;12369:2;12349:18;;;12342:30;12408:31;12388:18;;;12381:59;12457:18;;5438:52:5::2;12128:353:6::0;5438:52:5::2;5509:25;5515:10;5527:6;5509:5;:25::i;:::-;5554:10;5544:21;::::0;;;:9:::2;:21;::::0;;;;:33:::2;;:43:::0;;5581:6;;5544:21;:43:::2;::::0;5581:6;;5544:43:::2;:::i;:::-;::::0;;;-1:-1:-1;;5607:10:5::2;5597:21;::::0;;;:9:::2;:21;::::0;;;;;;;;5638:15:::2;5597:38;::::0;;::::2;:56:::0;;;5677:49;;13020:25:6;;;13061:18;;;13054:34;5677:49:5::2;::::0;12993:18:6;5677:49:5::2;;;;;;;5797:17;::::0;-1:-1:-1;;;;;5797:17:5::2;:31:::0;5793:154:::2;;5884:17;::::0;5849:87:::2;::::0;;18476:21:6;;;18533:2;18513:18;;;18506:30;-1:-1:-1;;;18567:2:6;18552:18;;18545:43;5920:15:5::2;18655:4:6::0;18640:20;;18633:36;5849:87:5;;-1:-1:-1;;;;;5884:17:5;;::::2;::::0;5872:10:::2;::::0;-1:-1:-1;;;;;;;;;;;5849:87:5;;;;;18620:3:6;5849:87:5;;::::2;5793:154;5960:20;::::0;-1:-1:-1;;;;;5960:20:5::2;:34:::0;5956:160:::2;;6050:20;::::0;6015:90:::2;::::0;;18476:21:6;;;18533:2;18513:18;;;18506:30;;;;-1:-1:-1;;;18567:2:6;18552:18;;18545:43;6089:15:5::2;18655:4:6::0;18640:20;;18633:36;-1:-1:-1;;;;;6050:20:5;;::::2;::::0;6038:10:::2;::::0;-1:-1:-1;;;;;;;;;;;6015:90:5;18620:3:6;18605:19;6015:90:5::2;18264:411:6::0;5956:160:5::2;2861:1:::1;5339:783:::0;:::o;3497:338::-;2283:17;;-1:-1:-1;;;;;2283:17:5;2269:10;:31;;:79;;-1:-1:-1;2329:19:5;2314:10;2304:21;;;;:9;:21;;;;;;;;:44;;;;;;;;:::i;:::-;;2269:79;2261:131;;;;-1:-1:-1;;;2261:131:5;;;;;;;:::i;:::-;3586:20:::1;:37:::0;;-1:-1:-1;;;;;3586:37:5;::::1;-1:-1:-1::0;;;;;;3586:37:5;;::::1;::::0;::::1;::::0;;;-1:-1:-1;3633:25:5;;;:9:::1;:25;::::0;;;;;;;:51;;-1:-1:-1;;3633:51:5::1;3661:23;3633:51;::::0;;3694:48;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;3694:48:5;;::::1;::::0;:29;;;:13:::1;:29:::0;;;;;;:48:::1;::::0;:29;:48:::1;:::i;:::-;;3770:14;-1:-1:-1::0;;;;;3757:71:5::1;-1:-1:-1::0;;;;;;;;;;;3786:23:5::1;3757:71;;;;;;:::i;2081:198:0:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;19324:2:6;2161:73:0::1;::::0;::::1;19306:21:6::0;19363:2;19343:18;;;19336:30;19402:34;19382:18;;;19375:62;-1:-1:-1;;;19453:18:6;;;19446:36;19499:19;;2161:73:0::1;19122:402:6::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;10504:370:1:-;-1:-1:-1;;;;;10635:19:1;;10627:68;;;;-1:-1:-1;;;10627:68:1;;19731:2:6;10627:68:1;;;19713:21:6;19770:2;19750:18;;;19743:30;19809:34;19789:18;;;19782:62;-1:-1:-1;;;19860:18:6;;;19853:34;19904:19;;10627:68:1;19529:400:6;10627:68:1;-1:-1:-1;;;;;10713:21:1;;10705:68;;;;-1:-1:-1;;;10705:68:1;;20136:2:6;10705:68:1;;;20118:21:6;20175:2;20155:18;;;20148:30;20214:34;20194:18;;;20187:62;-1:-1:-1;;;20265:18:6;;;20258:32;20307:19;;10705:68:1;19934:398:6;10705:68:1;-1:-1:-1;;;;;10784:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1465:25:6;;;10835:32:1;;1438:18:6;10835:32:1;;;;;;;10504:370;;;:::o;5190:286::-;5317:4;719:10:4;5373:38:1;5389:4;719:10:4;5404:6:1;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;7473:818;-1:-1:-1;;;;;7599:18:1;;7591:68;;;;-1:-1:-1;;;7591:68:1;;20539:2:6;7591:68:1;;;20521:21:6;20578:2;20558:18;;;20551:30;20617:34;20597:18;;;20590:62;-1:-1:-1;;;20668:18:6;;;20661:35;20713:19;;7591:68:1;20337:401:6;7591:68:1;-1:-1:-1;;;;;7677:16:1;;7669:64;;;;-1:-1:-1;;;7669:64:1;;20945:2:6;7669:64:1;;;20927:21:6;20984:2;20964:18;;;20957:30;21023:34;21003:18;;;20996:62;-1:-1:-1;;;21074:18:6;;;21067:33;21117:19;;7669:64:1;20743:399:6;7669:64:1;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;-1:-1:-1;;;;;7815:15:1;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:1;;21349:2:6;7840:72:1;;;21331:21:6;21388:2;21368:18;;;21361:30;21427:34;21407:18;;;21400:62;-1:-1:-1;;;21478:18:6;;;21471:36;21524:19;;7840:72:1;21147:402:6;7840:72:1;-1:-1:-1;;;;;7946:15:1;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1465:25:6;;;8161:13:1;;8210:26;;1438:18:6;8210:26:1;;;;;;;8247:37;7581:710;7473:818;;;:::o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;21756:2:6;1414:68:0;;;21738:21:6;;;21775:18;;;21768:30;21834:34;21814:18;;;21807:62;21886:18;;1414:68:0;21554:356:6;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;3727:189:1:-;3806:4;719:10:4;3860:28:1;719:10:4;3877:2:1;3881:6;3860:9;:28::i;8567:535::-;-1:-1:-1;;;;;8650:21:1;;8642:65;;;;-1:-1:-1;;;8642:65:1;;22117:2:6;8642:65:1;;;22099:21:6;22156:2;22136:18;;;22129:30;22195:33;22175:18;;;22168:61;22246:18;;8642:65:1;21915:355:6;8642:65:1;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1465:25:6;;;8999:37:1;;1438:18:6;8999:37:1;;;;;;;2861:1:5::1;5339:783:::0;:::o;11155:441:1:-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:1;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:1;;22477:2:6;11404:68:1;;;22459:21:6;22516:2;22496:18;;;22489:30;22555:31;22535:18;;;22528:59;22604:18;;11404:68:1;22275:353:6;11404:68:1;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;9786:290:5:-;-1:-1:-1;;;;;9895:14:5;;;;;;:8;:14;;;;;;;;9894:15;9886:59;;;;-1:-1:-1;;;9886:59:5;;22835:2:6;9886:59:5;;;22817:21:6;22874:2;22854:18;;;22847:30;22913:33;22893:18;;;22886:61;22964:18;;9886:59:5;22633:355:6;9886:59:5;-1:-1:-1;;;;;9964:12:5;;;;;;:8;:12;;;;;;;;9963:13;9955:60;;;;-1:-1:-1;;;9955:60:5;;23195:2:6;9955:60:5;;;23177:21:6;23234:2;23214:18;;;23207:30;23273:34;23253:18;;;23246:62;-1:-1:-1;;;23324:18:6;;;23317:32;23366:19;;9955:60:5;22993:398:6;9955:60:5;9786:290;;;:::o;14:400:6:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:139;170:6;167:1;164:13;156:139;;;278:4;263:13;;;259:24;;253:31;233:11;;;229:22;;222:63;185:12;156:139;;;160:3;340:1;333:4;324:6;319:3;315:16;311:27;304:38;403:4;396:2;392:7;387:2;379:6;375:15;371:29;366:3;362:39;358:50;351:57;;;14:400;;;;:::o;419:220::-;568:2;557:9;550:21;531:4;588:45;629:2;618:9;614:18;606:6;588:45;:::i;:::-;580:53;419:220;-1:-1:-1;;;419:220:6:o;644:173::-;712:20;;-1:-1:-1;;;;;761:31:6;;751:42;;741:70;;807:1;804;797:12;741:70;644:173;;;:::o;822:300::-;890:6;898;951:2;939:9;930:7;926:23;922:32;919:52;;;967:1;964;957:12;919:52;990:29;1009:9;990:29;:::i;:::-;980:39;1088:2;1073:18;;;;1060:32;;-1:-1:-1;;;822:300:6:o;1501:374::-;1578:6;1586;1594;1647:2;1635:9;1626:7;1622:23;1618:32;1615:52;;;1663:1;1660;1653:12;1615:52;1686:29;1705:9;1686:29;:::i;:::-;1676:39;;1734:38;1768:2;1757:9;1753:18;1734:38;:::i;:::-;1501:374;;1724:48;;-1:-1:-1;;;1841:2:6;1826:18;;;;1813:32;;1501:374::o;1880:186::-;1939:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:52;;;2008:1;2005;1998:12;1960:52;2031:29;2050:9;2031:29;:::i;2487:127::-;2548:10;2543:3;2539:20;2536:1;2529:31;2579:4;2576:1;2569:15;2603:4;2600:1;2593:15;2619:236;2699:1;2692:5;2689:12;2679:143;;2744:10;2739:3;2735:20;2732:1;2725:31;2779:4;2776:1;2769:15;2807:4;2804:1;2797:15;2679:143;2831:18;;2619:236::o;2860:318::-;3028:43;3061:9;3053:6;3028:43;:::i;:::-;3107:2;3102;3091:9;3087:18;3080:30;3009:4;3127:45;3168:2;3157:9;3153:18;3145:6;3127:45;:::i;:::-;3119:53;2860:318;-1:-1:-1;;;;2860:318:6:o;3372:420::-;3449:6;3457;3465;3518:2;3506:9;3497:7;3493:23;3489:32;3486:52;;;3534:1;3531;3524:12;3486:52;3557:29;3576:9;3557:29;:::i;:::-;3547:39;3655:2;3640:18;;3627:32;;-1:-1:-1;3756:2:6;3741:18;;;3728:32;;3372:420;-1:-1:-1;;;3372:420:6:o;3797:347::-;3862:6;3870;3923:2;3911:9;3902:7;3898:23;3894:32;3891:52;;;3939:1;3936;3929:12;3891:52;3962:29;3981:9;3962:29;:::i;:::-;3952:39;;4041:2;4030:9;4026:18;4013:32;4088:5;4081:13;4074:21;4067:5;4064:32;4054:60;;4110:1;4107;4100:12;4054:60;4133:5;4123:15;;;3797:347;;;;;:::o;4149:127::-;4210:10;4205:3;4201:20;4198:1;4191:31;4241:4;4238:1;4231:15;4265:4;4262:1;4255:15;4281:1174;4379:6;4387;4395;4448:2;4436:9;4427:7;4423:23;4419:32;4416:52;;;4464:1;4461;4454:12;4416:52;4487:29;4506:9;4487:29;:::i;:::-;4477:39;;4566:2;4555:9;4551:18;4538:32;4599:1;4592:5;4589:12;4579:40;;4615:1;4612;4605:12;4579:40;4638:5;-1:-1:-1;4694:2:6;4679:18;;4666:32;4721:18;4710:30;;4707:50;;;4753:1;4750;4743:12;4707:50;4776:22;;4829:4;4821:13;;4817:27;-1:-1:-1;4807:55:6;;4858:1;4855;4848:12;4807:55;4898:2;4885:16;4924:18;4916:6;4913:30;4910:56;;;4946:18;;:::i;:::-;4995:2;4989:9;5087:2;5049:17;;-1:-1:-1;;5045:31:6;;;5078:2;5041:40;5037:54;5025:67;;5122:18;5107:34;;5143:22;;;5104:62;5101:88;;;5169:18;;:::i;:::-;5205:2;5198:22;5229;;;5270:15;;;5287:2;5266:24;5263:37;-1:-1:-1;5260:57:6;;;5313:1;5310;5303:12;5260:57;5369:6;5364:2;5360;5356:11;5351:2;5343:6;5339:15;5326:50;5422:1;5417:2;5408:6;5400;5396:19;5392:28;5385:39;5443:6;5433:16;;;;;4281:1174;;;;;:::o;5460:204::-;5603:2;5588:18;;5615:43;5592:9;5640:6;5615:43;:::i;6397:226::-;6456:6;6509:2;6497:9;6488:7;6484:23;6480:32;6477:52;;;6525:1;6522;6515:12;6477:52;-1:-1:-1;6570:23:6;;6397:226;-1:-1:-1;6397:226:6:o;7087:260::-;7155:6;7163;7216:2;7204:9;7195:7;7191:23;7187:32;7184:52;;;7232:1;7229;7222:12;7184:52;7255:29;7274:9;7255:29;:::i;:::-;7245:39;;7303:38;7337:2;7326:9;7322:18;7303:38;:::i;:::-;7293:48;;7087:260;;;;;:::o;7840:380::-;7919:1;7915:12;;;;7962;;;7983:61;;8037:4;8029:6;8025:17;8015:27;;7983:61;8090:2;8082:6;8079:14;8059:18;8056:38;8053:161;;8136:10;8131:3;8127:20;8124:1;8117:31;8171:4;8168:1;8161:15;8199:4;8196:1;8189:15;8053:161;;7840:380;;;:::o;8225:356::-;8427:2;8409:21;;;8446:18;;;8439:30;8505:34;8500:2;8485:18;;8478:62;8572:2;8557:18;;8225:356::o;8712:518::-;8814:2;8809:3;8806:11;8803:421;;;8850:5;8847:1;8840:16;8894:4;8891:1;8881:18;8964:2;8952:10;8948:19;8945:1;8941:27;8935:4;8931:38;9000:4;8988:10;8985:20;8982:47;;;-1:-1:-1;9023:4:6;8982:47;9078:2;9073:3;9069:12;9066:1;9062:20;9056:4;9052:31;9042:41;;9133:81;9151:2;9144:5;9141:13;9133:81;;;9210:1;9196:16;;9177:1;9166:13;9133:81;;9406:1299;9532:3;9526:10;9559:18;9551:6;9548:30;9545:56;;;9581:18;;:::i;:::-;9610:97;9700:6;9660:38;9692:4;9686:11;9660:38;:::i;:::-;9654:4;9610:97;:::i;:::-;9756:4;9787:2;9776:14;;9804:1;9799:649;;;;10492:1;10509:6;10506:89;;;-1:-1:-1;10561:19:6;;;10555:26;10506:89;-1:-1:-1;;9363:1:6;9359:11;;;9355:24;9351:29;9341:40;9387:1;9383:11;;;9338:57;10608:81;;9769:930;;9799:649;8659:1;8652:14;;;8696:4;8683:18;;-1:-1:-1;;9835:20:6;;;9953:222;9967:7;9964:1;9961:14;9953:222;;;10049:19;;;10043:26;10028:42;;10156:4;10141:20;;;;10109:1;10097:14;;;;9983:12;9953:222;;;9957:3;10203:6;10194:7;10191:19;10188:201;;;10264:19;;;10258:26;-1:-1:-1;;10347:1:6;10343:14;;;10359:3;10339:24;10335:37;10331:42;10316:58;10301:74;;10188:201;-1:-1:-1;;;;10435:1:6;10419:14;;;10415:22;10402:36;;-1:-1:-1;9406:1299:6:o;10710:430::-;10931:43;10964:9;10956:6;10931:43;:::i;:::-;11010:2;11005;10990:18;;10983:30;;;11049:1;11029:18;;;11022:29;-1:-1:-1;;;11082:2:6;11067:18;;11060:38;11130:3;11115:19;;10710:430;-1:-1:-1;10710:430:6:o;11145:341::-;11347:2;11329:21;;;11386:2;11366:18;;;11359:30;-1:-1:-1;;;11420:2:6;11405:18;;11398:47;11477:2;11462:18;;11145:341::o;11901:222::-;11966:9;;;11987:10;;;11984:133;;;12039:10;12034:3;12030:20;12027:1;12020:31;12074:4;12071:1;12064:15;12102:4;12099:1;12092:15;14253:403;14455:2;14437:21;;;14494:2;14474:18;;;14467:30;14533:34;14528:2;14513:18;;14506:62;-1:-1:-1;;;14599:2:6;14584:18;;14577:37;14646:3;14631:19;;14253:403::o;15068:291::-;15245:2;15234:9;15227:21;15208:4;15265:45;15306:2;15295:9;15291:18;15283:6;15265:45;:::i;:::-;15257:53;;15346:6;15341:2;15330:9;15326:18;15319:34;15068:291;;;;;:::o;15364:429::-;15585:43;15618:9;15610:6;15585:43;:::i;:::-;15664:2;15659;15644:18;;15637:30;;;15703:1;15683:18;;;15676:29;-1:-1:-1;;;15736:2:6;15721:18;;15714:37;15783:3;15768:19;;15364:429;-1:-1:-1;15364:429:6:o;15798:::-;16019:43;16052:9;16044:6;16019:43;:::i;:::-;16098:2;16093;16078:18;;16071:30;;;16137:1;16117:18;;;16110:29;-1:-1:-1;;;16170:2:6;16155:18;;16148:37;16217:3;16202:19;;15798:429;-1:-1:-1;15798:429:6:o;16232:433::-;16453:43;16486:9;16478:6;16453:43;:::i;:::-;16532:2;16527;16512:18;;16505:30;;;16571:2;16551:18;;;16544:30;-1:-1:-1;;;16605:2:6;16590:18;;16583:40;16655:3;16640:19;;16232:433;-1:-1:-1;16232:433:6:o;18680:437::-;18901:43;18934:9;18926:6;18901:43;:::i;:::-;18980:2;18975;18960:18;;18953:30;;;19019:2;18999:18;;;18992:30;-1:-1:-1;;;19053:2:6;19038:18;;19031:44;19107:3;19092:19;;18680:437;-1:-1:-1;18680:437:6:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    168,
    10834
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xD570AB34 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xECAB818C GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xECAB818C EQ PUSH2 0x781 JUMPI DUP1 PUSH4 0xEF806F5E EQ PUSH2 0x7A1 JUMPI DUP1 PUSH4 0xF2715845 EQ PUSH2 0x7C1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7E1 JUMPI DUP1 PUSH4 0xFAB52689 EQ PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD570AB34 EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6F8 JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x718 JUMPI DUP1 PUSH4 0xE816D97F EQ PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA257DB8E GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA257DB8E EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0xC96F8145 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xCBE5404F EQ PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0x911798E9 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x9B724AD4 EQ PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x43131F97 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x6A137219 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x6A137219 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x6DAFEE6D EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x74D5E100 EQ PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x43131F97 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x45EA865C EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x497522A0 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x62E36EB8 EQ PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x26324EFF EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x27820851 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x12C78FFA EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x286 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x24BC JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x926 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x24E6 JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0xFF SWAP3 DUP4 AND SWAP4 SWAP2 SWAP3 AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP3 SWAP2 SWAP1 PUSH2 0x2576 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x24BC JUMP JUMPDEST PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x284 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x259E JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x25D1 JUMP JUMPDEST PUSH2 0xFE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x11BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x12DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x1395 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x2623 JUMP JUMPDEST PUSH2 0x143E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x1529 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B2 PUSH2 0x49D CALLDATASIZE PUSH1 0x4 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x2703 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x50C CALLDATASIZE PUSH1 0x4 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x153D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x15D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x546 PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x5A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2711 JUMP JUMPDEST PUSH2 0x167E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x5C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x24BC JUMP JUMPDEST PUSH2 0x17BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x5E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x24BC JUMP JUMPDEST PUSH2 0x1843 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x681 PUSH2 0x607 CALLDATASIZE PUSH1 0x4 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 DUP2 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x6D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x25D1 JUMP JUMPDEST PUSH2 0x191F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x4D9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x713 CALLDATASIZE PUSH1 0x4 PUSH2 0x272A JUMP JUMPDEST PUSH2 0x1A41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x733 CALLDATASIZE PUSH1 0x4 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x763 CALLDATASIZE PUSH1 0x4 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x79C CALLDATASIZE PUSH1 0x4 PUSH2 0x2711 JUMP JUMPDEST PUSH2 0x1A6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x4D9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x7DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x1D10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0x7FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x1E02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x850 PUSH2 0x81C CALLDATASIZE PUSH1 0x4 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH1 0xFF SWAP3 DUP4 AND SWAP4 SWAP2 SWAP3 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x236 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x889 SWAP1 PUSH2 0x275D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B5 SWAP1 PUSH2 0x275D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x902 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x902 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x91A DUP2 DUP6 DUP6 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x94A JUMPI PUSH2 0x94A PUSH2 0x253E JUMP JUMPDEST EQ PUSH2 0x970 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2797 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x383937B23AB1B2B9 PUSH1 0xC1 SHL DUP2 DUP5 ADD MSTORE SWAP4 DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 PUSH2 0x9BD SWAP1 DUP3 PUSH2 0x2813 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP5 DUP2 MSTORE CALLER DUP1 DUP7 MSTORE PUSH1 0x6 SWAP1 SWAP5 MSTORE SWAP4 DUP7 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SLOAD SWAP1 ISZERO ISZERO PUSH1 0xFF NOT SWAP2 DUP3 AND OR DUP7 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP7 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x2 DUP7 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP2 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2904 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2904 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD3 DUP8 DUP8 DUP8 PUSH2 0x1F9F JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xB2D JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x8 DUP2 DUP4 ADD MSTORE PUSH8 0x2A2920A729A322A9 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP11 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xA SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 PUSH1 0xFF AND SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0xB6F SWAP1 PUSH2 0x275D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB9B SWAP1 PUSH2 0x275D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBE8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBBD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBE8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBCB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x91A DUP2 DUP6 DUP6 PUSH2 0xC0B DUP4 DUP4 PUSH2 0x1A41 JUMP JUMPDEST PUSH2 0xC15 SWAP2 SWAP1 PUSH2 0x292F JUMP JUMPDEST PUSH2 0x1E7B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2904 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2904 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x967 JUMP JUMPDEST DUP4 PUSH2 0xCF5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C65722068617320696E73756666696369656E74206372656469747300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x967 JUMP JUMPDEST PUSH2 0xD4E DUP6 CALLER DUP7 PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xD74 JUMPI PUSH2 0xD74 PUSH2 0x253E JUMP JUMPDEST SUB PUSH2 0xEC2 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xD9B SWAP1 DUP5 SWAP1 PUSH2 0x292F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xDD7 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xDF6 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xEC2 JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 ADD SLOAD SWAP1 MLOAD PUSH32 0x97457CC13035EE82650B6C285CB0FCB524F2FED19793D4CAB249480B193EC0B SWAP2 PUSH2 0xE57 SWAP2 TIMESTAMP SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xEC2 JUMPI PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x9 DUP2 DUP4 ADD MSTORE PUSH9 0x145553D51057D35155 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0xA80E182FC2735B1564190719686030BEC3E14399A5F804181FF5054D1C57BDD1 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xF78 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x10 DUP2 DUP4 ADD MSTORE PUSH16 0x10D49151125517D4155490D21054D151 PUSH1 0x82 SHL PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xFE2 JUMPI PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x10 DUP2 DUP4 ADD MSTORE PUSH16 0x10D49151125517D4155490D21054D151 PUSH1 0x82 SHL PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1025 JUMPI POP PUSH1 0x3 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1023 JUMPI PUSH2 0x1023 PUSH2 0x253E JUMP JUMPDEST EQ JUMPDEST PUSH2 0x1041 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2950 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1070 JUMPI PUSH2 0x1070 PUSH2 0x253E JUMP JUMPDEST EQ PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206D7573742062652072656769737465726564206173207072 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x37B23AB1B2B9 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x967 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x3 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xF8D2D47F1A3527C24D2E241F4634C1FEE251076C49FAE9B5530A36E77E0BD9D9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x111150D154951251925151 PUSH1 0xAA SHL DUP2 MSTORE POP PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x10D154951251925151 PUSH1 0xBA SHL DUP2 MSTORE POP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x11AF SWAP3 SWAP2 SWAP1 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x11DF JUMPI PUSH2 0x11DF PUSH2 0x253E JUMP JUMPDEST EQ PUSH2 0x11FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2797 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x666163746F7279 PUSH1 0xC8 SHL DUP2 DUP5 ADD MSTORE SWAP4 DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 PUSH2 0x1248 SWAP1 DUP3 PUSH2 0x2813 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP5 DUP2 MSTORE PUSH1 0x80 DUP7 ADD DUP6 DUP2 MSTORE CALLER DUP1 DUP8 MSTORE PUSH1 0x7 SWAP1 SWAP6 MSTORE SWAP5 DUP8 SWAP1 KECCAK256 SWAP6 MLOAD DUP7 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP7 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x2 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH1 0x3 DUP7 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 MLOAD SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x29B9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1303 JUMPI PUSH2 0x1303 PUSH2 0x253E JUMP JUMPDEST EQ PUSH2 0x1320 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2797 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x5 OR SWAP1 SSTORE DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x31B4BA34BD32B7 PUSH1 0xC9 SHL DUP2 DUP5 ADD MSTORE SWAP4 DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 PUSH2 0x136C SWAP1 DUP3 PUSH2 0x2813 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x5 PUSH1 0x40 MLOAD PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x29EA JUMP JUMPDEST PUSH2 0x139D PUSH2 0x2165 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xA DUP1 DUP3 MSTORE PUSH10 0x19DBDD995C9B9B595B9D PUSH1 0xB2 SHL DUP3 DUP6 ADD MSTORE SWAP5 DUP5 MSTORE SWAP4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 PUSH2 0x140A SWAP1 DUP3 PUSH2 0x2813 JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x3 PUSH1 0x40 MLOAD PUSH2 0x1433 SWAP2 SWAP1 PUSH2 0x2A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x147A JUMPI POP PUSH1 0x3 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1478 JUMPI PUSH2 0x1478 PUSH2 0x253E JUMP JUMPDEST EQ JUMPDEST PUSH2 0x1496 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2950 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x14CB JUMPI PUSH2 0x14CB PUSH2 0x253E JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x14F2 DUP3 DUP3 PUSH2 0x2813 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x151C SWAP3 SWAP2 SWAP1 PUSH2 0x2576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x1531 PUSH2 0x2165 JUMP JUMPDEST PUSH2 0x153B PUSH1 0x0 PUSH2 0x21BF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1556 SWAP1 PUSH2 0x275D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1582 SWAP1 PUSH2 0x275D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x889 SWAP1 PUSH2 0x275D JUMP JUMPDEST PUSH2 0x161C PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x16A4 JUMPI PUSH2 0x16A4 PUSH2 0x253E JUMP JUMPDEST EQ PUSH2 0x1700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920666163746F726965732063616E20706572666F726D207468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x30B1BA34B7B7 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x967 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1750 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x51756F7461206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x967 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP3 OR SWAP1 SSTORE TIMESTAMP PUSH1 0x4 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE DUP3 MLOAD DUP6 DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH32 0x76555ACD4D6A60C38AF93F6AFADF981892E0CA4C57C35B1B117A8FF4ED30C7BD SWAP2 ADD PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x17CB DUP3 DUP7 PUSH2 0x1A41 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x182B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x967 JUMP JUMPDEST PUSH2 0x1838 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1E7B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1876 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2904 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x18B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2904 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BD DUP7 DUP7 PUSH2 0x2211 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1916 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x8 DUP2 DUP4 ADD MSTORE PUSH8 0x2A2920A729A322A9 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x195B JUMPI POP PUSH1 0x3 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1959 JUMPI PUSH2 0x1959 PUSH2 0x253E JUMP JUMPDEST EQ JUMPDEST PUSH2 0x1977 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2950 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA33E6B076D391E96626483B30E365719F79F1D6594AFF6587649FFD6C82ED7FA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x1A17 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x2AA7232927AD22A7 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x232927AD22A7 PUSH1 0xD1 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x11AF SWAP2 SWAP1 TIMESTAMP SWAP1 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1A92 JUMPI PUSH2 0x1A92 PUSH2 0x253E JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1AAE JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x1ACC JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1B3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920636572746966696564206163746976652070726F64756365727320 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63616E20706572666F726D207468697320616374696F6E000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x967 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1B6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2904 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1BBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x967 JUMP JUMPDEST PUSH2 0x1BC8 CALLER DUP4 PUSH2 0x221F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1BEA SWAP1 DUP5 SWAP1 PUSH2 0x292F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE DUP3 MLOAD DUP7 DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH32 0xF8CDDF2EAF16AF6F7A9735A8BED50968CABCEF91B322EECBDE3805D8D8377DA4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1CA6 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0xD DUP2 DUP4 ADD MSTORE PUSH13 0x10D49151125517D254D4D55151 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1D0C JUMPI PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0xD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH13 0x10D49151125517D254D4D55151 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x80 ADD PUSH2 0x11AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1D4C JUMPI POP PUSH1 0x3 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1D4A JUMPI PUSH2 0x1D4A PUSH2 0x253E JUMP JUMPDEST EQ JUMPDEST PUSH2 0x1D68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP1 PUSH2 0x2950 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 OR SWAP1 SSTORE DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x706F6C6C7574696F6E5F626F6479 PUSH1 0x90 SHL DUP2 DUP5 ADD MSTORE SWAP4 DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 PUSH2 0x1DD9 SWAP1 DUP3 PUSH2 0x2813 JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD PUSH2 0x1433 SWAP2 SWAP1 PUSH2 0x2A4F JUMP JUMPDEST PUSH2 0x1E0A PUSH2 0x2165 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1E6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x967 JUMP JUMPDEST PUSH2 0x1E78 DUP2 PUSH2 0x21BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1EDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x967 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x967 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x1FAD DUP6 DUP3 DUP6 PUSH2 0x22EA JUMP JUMPDEST PUSH2 0x1838 DUP6 DUP6 DUP6 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2018 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x967 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x207A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x967 JUMP JUMPDEST PUSH2 0x2085 DUP4 DUP4 DUP4 PUSH2 0x235E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x20FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x967 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x153B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x967 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x91A DUP2 DUP6 DUP6 PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2275 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x967 JUMP JUMPDEST PUSH2 0x2281 PUSH1 0x0 DUP4 DUP4 PUSH2 0x235E JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2293 SWAP2 SWAP1 PUSH2 0x292F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F6 DUP5 DUP5 PUSH2 0x1A41 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x215F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x967 JUMP JUMPDEST PUSH2 0x215F DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x23C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2073656E646572206163636F756E742069732066726F7A656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x967 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x243B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20726563697069656E74206163636F756E742069732066726F7A PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B7 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x967 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2466 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x244A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2499 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2440 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x24B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24D8 DUP4 PUSH2 0x24A0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2504 DUP5 PUSH2 0x24A0 JUMP JUMPDEST SWAP3 POP PUSH2 0x2512 PUSH1 0x20 DUP6 ADD PUSH2 0x24A0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2499 DUP3 PUSH2 0x24A0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 DUP2 LT PUSH2 0x2572 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x2580 DUP2 DUP5 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2596 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2440 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25BC DUP5 PUSH2 0x24A0 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25ED DUP4 PUSH2 0x24A0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2641 DUP5 PUSH2 0x24A0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x6 DUP2 LT PUSH2 0x2655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x2682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x269C JUMPI PUSH2 0x269C PUSH2 0x260D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x26CB JUMPI PUSH2 0x26CB PUSH2 0x260D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP9 LT ISZERO PUSH2 0x26E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x920 DUP3 DUP5 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x273D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2746 DUP4 PUSH2 0x24A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2754 PUSH1 0x20 DUP5 ADD PUSH2 0x24A0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2771 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2791 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x5573657220616C726561647920686173206120726F6C652061737369676E6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x243B JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27F3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x27FF JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x282D JUMPI PUSH2 0x282D PUSH2 0x260D JUMP JUMPDEST PUSH2 0x2841 DUP2 PUSH2 0x283B DUP5 SLOAD PUSH2 0x275D JUMP JUMPDEST DUP5 PUSH2 0x27CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2875 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x285D JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28A5 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2885 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x28C3 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x28DC DUP2 DUP4 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x383937B23AB1B2B9 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x20B1B1B7BAB73A1034B990333937BD32B7 PUSH1 0x79 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x920 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920676F7665726E6D656E742063616E20706572666F726D2074686973 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x1030B1BA34B7B7 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x29AA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x29C3 DUP2 DUP4 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x666163746F7279 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29F4 DUP2 DUP4 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x31B4BA34BD32B7 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A25 DUP2 DUP4 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x19DBDD995C9B9B595B9D PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A59 DUP2 DUP4 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x706F6C6C7574696F6E5F626F6479 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP2 SWAP1 POP JUMP INVALID PUSH16 0x9E8382EFFC1F2659A04B480FC00E03E9 0xEA PUSH17 0x4A05C90D74DB22A5FB12EE46AFEB586938 CALLDATASIZE 0x4E 0xC0 TIMESTAMP DELEGATECALL LOG1 SSTORE DUP6 0x2F GASPRICE 0xC3 MOD 0xB4 0xF6 SHL PUSH11 0x36FF84C1330E4BBD028ADC 0x23 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 DIFFICULTY PUSH1 0xB6 ADDMOD DUP14 DUP4 TSTORE EXTCODECOPY JUMP DUP13 0xCA PUSH30 0x8E96B5D88B4248AF827D65B6950F9D399F601A64736F6C634300081E0033 ",
  "pcMap": {
    "0": {
      "offset": [
        168,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "LT",
      "path": "5"
    },
    "9": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20F"
    },
    "12": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "SHR",
      "path": "5"
    },
    "19": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "25": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "GT",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "29": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "30": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "31": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD570AB34"
    },
    "36": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "GT",
      "path": "5"
    },
    "37": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA0"
    },
    "40": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "41": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "42": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xECAB818C"
    },
    "47": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "GT",
      "path": "5"
    },
    "48": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6F"
    },
    "51": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "52": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "53": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xECAB818C"
    },
    "58": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "59": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x781"
    },
    "62": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "63": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "64": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xEF806F5E"
    },
    "69": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "70": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7A1"
    },
    "73": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "74": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "75": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2715845"
    },
    "80": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "81": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C1"
    },
    "84": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "85": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "86": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "92": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7E1"
    },
    "95": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "96": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "97": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFAB52689"
    },
    "102": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "103": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x801"
    },
    "106": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "107": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "110": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "111": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD570AB34"
    },
    "118": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "119": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6D8"
    },
    "122": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "123": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "124": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDD62ED3E"
    },
    "129": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "130": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6F8"
    },
    "133": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "134": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "135": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE5839836"
    },
    "140": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "141": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x718"
    },
    "144": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "145": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "146": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE816D97F"
    },
    "151": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "152": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x748"
    },
    "155": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "156": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "160": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "161": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "162": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA257DB8E"
    },
    "167": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "GT",
      "path": "5"
    },
    "168": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "172": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "173": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA257DB8E"
    },
    "178": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "179": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x58C"
    },
    "182": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "183": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "184": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA457C2D7"
    },
    "189": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "190": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5AC"
    },
    "193": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "194": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "195": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA9059CBB"
    },
    "200": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "201": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5CC"
    },
    "204": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "205": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "206": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC96F8145"
    },
    "211": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "212": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5EC"
    },
    "215": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "216": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "217": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xCBE5404F"
    },
    "222": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "223": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6B8"
    },
    "226": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "227": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "229": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "230": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "231": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "232": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "233": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "238": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "239": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4BF"
    },
    "242": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "243": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "244": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x911798E9"
    },
    "249": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "250": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4F1"
    },
    "253": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "254": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "255": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95D89B41"
    },
    "260": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "261": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x511"
    },
    "264": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "265": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "266": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9B724AD4"
    },
    "271": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "272": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x526"
    },
    "275": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "276": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "278": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "279": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "280": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "281": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "282": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x43131F97"
    },
    "287": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "GT",
      "path": "5"
    },
    "288": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19B"
    },
    "291": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "292": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "293": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6A137219"
    },
    "298": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "GT",
      "path": "5"
    },
    "299": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16A"
    },
    "302": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "303": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "304": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6A137219"
    },
    "309": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "310": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F7"
    },
    "313": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "314": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "315": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6DAFEE6D"
    },
    "320": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "321": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x417"
    },
    "324": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "325": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "326": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "331": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "332": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x437"
    },
    "335": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "336": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "337": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "342": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "343": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46D"
    },
    "346": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "347": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "348": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x74D5E100"
    },
    "353": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "354": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x482"
    },
    "357": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "358": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "360": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "361": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "362": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "363": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "364": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x43131F97"
    },
    "369": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "370": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39A"
    },
    "373": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "374": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "375": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x45EA865C"
    },
    "380": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "381": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AD"
    },
    "384": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "385": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "386": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x497522A0"
    },
    "391": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "392": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3CD"
    },
    "395": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "396": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "397": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x62E36EB8"
    },
    "402": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "403": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3E2"
    },
    "406": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "407": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "409": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "410": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "411": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "412": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "413": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "418": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "GT",
      "path": "5"
    },
    "419": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E2"
    },
    "422": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "423": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "424": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "429": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "430": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A5"
    },
    "433": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "434": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "435": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x26324EFF"
    },
    "440": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "441": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C5"
    },
    "444": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "445": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "446": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x27820851"
    },
    "451": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "452": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x330"
    },
    "455": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "456": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "457": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x313CE567"
    },
    "462": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "463": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35E"
    },
    "466": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "467": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "468": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x39509351"
    },
    "473": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "474": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37A"
    },
    "477": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "478": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "480": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "481": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "482": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "483": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "484": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6FDDE03"
    },
    "489": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "490": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x214"
    },
    "493": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "494": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "495": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95EA7B3"
    },
    "500": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "501": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23F"
    },
    "504": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "505": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "506": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x12C78FFA"
    },
    "511": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "512": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26F"
    },
    "515": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "516": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "517": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x18160DDD"
    },
    "522": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "EQ",
      "path": "5"
    },
    "523": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x286"
    },
    "526": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "527": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "528": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "530": {
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "DUP1",
      "path": "5"
    },
    "531": {
      "first_revert": true,
      "fn": null,
      "offset": [
        168,
        10834
      ],
      "op": "REVERT",
      "path": "5"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "DUP1",
      "path": "1"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x220"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "DUP1",
      "path": "1"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "REVERT",
      "path": "1"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "POP",
      "path": "1"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x229"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x87A"
    },
    "552": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMP",
      "path": "1"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "556": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x236"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2486"
    },
    "565": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMP",
      "path": "1"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "DUP1",
      "path": "1"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SUB",
      "path": "1"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "RETURN",
      "path": "1"
    },
    "575": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "576": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "577": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "DUP1",
      "path": "1"
    },
    "578": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "579": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24B"
    },
    "582": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "583": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "585": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "DUP1",
      "path": "1"
    },
    "586": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "REVERT",
      "path": "1"
    },
    "587": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "588": {
      "op": "POP"
    },
    "589": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25F"
    },
    "592": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25A"
    },
    "595": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "596": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "598": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24BC"
    },
    "601": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMP",
      "path": "1"
    },
    "602": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x90C"
    },
    "606": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMP",
      "path": "1"
    },
    "607": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "608": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "610": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "611": {
      "op": "SWAP1"
    },
    "612": {
      "op": "ISZERO"
    },
    "613": {
      "op": "ISZERO"
    },
    "614": {
      "op": "DUP2"
    },
    "615": {
      "op": "MSTORE"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "618": {
      "op": "ADD"
    },
    "619": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x236"
    },
    "622": {
      "op": "JUMP"
    },
    "623": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "624": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "625": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "DUP1",
      "path": "5"
    },
    "626": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "627": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27B"
    },
    "630": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "631": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "633": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "DUP1",
      "path": "5"
    },
    "634": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "REVERT",
      "path": "5"
    },
    "635": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "636": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "POP",
      "path": "5"
    },
    "637": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "640": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x926"
    },
    "643": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "jump": "i",
      "offset": [
        4849,
        5329
      ],
      "op": "JUMP",
      "path": "5"
    },
    "644": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "645": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "STOP",
      "path": "5"
    },
    "646": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "647": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "648": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "DUP1",
      "path": "1"
    },
    "649": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "650": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x292"
    },
    "653": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "654": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "656": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "DUP1",
      "path": "1"
    },
    "657": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "REVERT",
      "path": "1"
    },
    "658": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "659": {
      "op": "POP"
    },
    "660": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3329,
        3341
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x2"
    },
    "662": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3329,
        3341
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "663": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "664": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "666": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "667": {
      "op": "SWAP1"
    },
    "668": {
      "op": "DUP2"
    },
    "669": {
      "op": "MSTORE"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "672": {
      "op": "ADD"
    },
    "673": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x236"
    },
    "676": {
      "op": "JUMP"
    },
    "677": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "678": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "679": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "680": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "681": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B1"
    },
    "684": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "685": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "687": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "688": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "REVERT",
      "path": "5"
    },
    "689": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "690": {
      "op": "POP"
    },
    "691": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25F"
    },
    "694": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C0"
    },
    "697": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "698": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "700": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24E6"
    },
    "703": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "jump": "i",
      "offset": [
        10490,
        10832
      ],
      "op": "JUMP",
      "path": "5"
    },
    "704": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "705": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA50"
    },
    "708": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "jump": "i",
      "offset": [
        10490,
        10832
      ],
      "op": "JUMP",
      "path": "5"
    },
    "709": {
      "offset": [
        718,
        763
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "710": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "711": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "DUP1",
      "path": "5"
    },
    "712": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "713": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D1"
    },
    "716": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "717": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "719": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "DUP1",
      "path": "5"
    },
    "720": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "REVERT",
      "path": "5"
    },
    "721": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "722": {
      "op": "POP"
    },
    "723": {
      "offset": [
        718,
        763
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30C"
    },
    "726": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E0"
    },
    "729": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "730": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "732": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2523"
    },
    "735": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "jump": "i",
      "offset": [
        718,
        763
      ],
      "op": "JUMP",
      "path": "5"
    },
    "736": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "737": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "739": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "741": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "742": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "744": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "745": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "DUP2",
      "path": "5"
    },
    "746": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "747": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "749": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "750": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "751": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "DUP1",
      "path": "5"
    },
    "752": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "753": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "755": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "DUP3",
      "path": "5"
    },
    "756": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "ADD",
      "path": "5"
    },
    "757": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "758": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "760": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "DUP4",
      "path": "5"
    },
    "761": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "ADD",
      "path": "5"
    },
    "762": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "763": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "765": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "766": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "767": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "ADD",
      "path": "5"
    },
    "768": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "769": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "771": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "772": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "DUP4",
      "path": "5"
    },
    "773": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "AND",
      "path": "5"
    },
    "774": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "775": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "776": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "777": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "AND",
      "path": "5"
    },
    "778": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "DUP5",
      "path": "5"
    },
    "779": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "JUMP",
      "path": "5"
    },
    "780": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "781": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "783": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "DUP1",
      "path": "5"
    },
    "784": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        718,
        763
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "785": {
      "op": "SWAP5"
    },
    "786": {
      "op": "ISZERO"
    },
    "787": {
      "op": "ISZERO"
    },
    "788": {
      "op": "DUP6"
    },
    "789": {
      "op": "MSTORE"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "792": {
      "op": "DUP6"
    },
    "793": {
      "op": "ADD"
    },
    "794": {
      "op": "SWAP4"
    },
    "795": {
      "op": "SWAP1"
    },
    "796": {
      "op": "SWAP4"
    },
    "797": {
      "op": "MSTORE"
    },
    "798": {
      "op": "SWAP2"
    },
    "799": {
      "op": "DUP4"
    },
    "800": {
      "op": "ADD"
    },
    "801": {
      "op": "MSTORE"
    },
    "802": {
      "op": "ISZERO"
    },
    "803": {
      "op": "ISZERO"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "806": {
      "op": "DUP3"
    },
    "807": {
      "op": "ADD"
    },
    "808": {
      "op": "MSTORE"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "811": {
      "op": "ADD"
    },
    "812": {
      "offset": [
        718,
        763
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x236"
    },
    "815": {
      "op": "JUMP"
    },
    "816": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "817": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "818": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "819": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "820": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33C"
    },
    "823": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "824": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "826": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "827": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "REVERT",
      "path": "5"
    },
    "828": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "829": {
      "op": "POP"
    },
    "830": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x350"
    },
    "833": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34B"
    },
    "836": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "837": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "839": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2523"
    },
    "842": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "jump": "i",
      "offset": [
        9474,
        9617
      ],
      "op": "JUMP",
      "path": "5"
    },
    "843": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "844": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB37"
    },
    "847": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "jump": "i",
      "offset": [
        9474,
        9617
      ],
      "op": "JUMP",
      "path": "5"
    },
    "848": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "849": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "851": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "852": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x236"
    },
    "855": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "856": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "857": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "858": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2576"
    },
    "861": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "jump": "i",
      "offset": [
        9474,
        9617
      ],
      "op": "JUMP",
      "path": "5"
    },
    "862": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "863": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "864": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "865": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "866": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36A"
    },
    "869": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "870": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "872": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "873": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "REVERT",
      "path": "1"
    },
    "874": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "875": {
      "op": "POP"
    },
    "876": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "878": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "879": {
      "fn": "ERC20.decimals",
      "offset": [
        3173,
        3175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x12"
    },
    "881": {
      "op": "DUP2"
    },
    "882": {
      "op": "MSTORE"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "885": {
      "op": "ADD"
    },
    "886": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x236"
    },
    "889": {
      "op": "JUMP"
    },
    "890": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "891": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "892": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "DUP1",
      "path": "1"
    },
    "893": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "894": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x386"
    },
    "897": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "898": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "900": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "DUP1",
      "path": "1"
    },
    "901": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "REVERT",
      "path": "1"
    },
    "902": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "903": {
      "op": "POP"
    },
    "904": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25F"
    },
    "907": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x395"
    },
    "910": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "911": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "913": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24BC"
    },
    "916": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMP",
      "path": "1"
    },
    "917": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "918": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF8"
    },
    "921": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMP",
      "path": "1"
    },
    "922": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7061,
        8826
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "923": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7061,
        8826
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "926": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7061,
        8826
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A8"
    },
    "929": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7061,
        8826
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "930": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7061,
        8826
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "932": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7061,
        8826
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x259E"
    },
    "935": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "jump": "i",
      "offset": [
        7061,
        8826
      ],
      "op": "JUMP",
      "path": "5"
    },
    "936": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7061,
        8826
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "937": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7061,
        8826
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC1A"
    },
    "940": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "jump": "i",
      "offset": [
        7061,
        8826
      ],
      "op": "JUMP",
      "path": "5"
    },
    "941": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "942": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "943": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "DUP1",
      "path": "5"
    },
    "944": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "945": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B9"
    },
    "948": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "949": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "951": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "DUP1",
      "path": "5"
    },
    "952": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "REVERT",
      "path": "5"
    },
    "953": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "954": {
      "op": "POP"
    },
    "955": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "958": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C8"
    },
    "961": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "962": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "964": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25D1"
    },
    "967": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "jump": "i",
      "offset": [
        4078,
        4538
      ],
      "op": "JUMP",
      "path": "5"
    },
    "968": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "969": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFE9"
    },
    "972": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "jump": "i",
      "offset": [
        4078,
        4538
      ],
      "op": "JUMP",
      "path": "5"
    },
    "973": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "974": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "975": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "DUP1",
      "path": "5"
    },
    "976": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "977": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D9"
    },
    "980": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "981": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "983": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "DUP1",
      "path": "5"
    },
    "984": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "REVERT",
      "path": "5"
    },
    "985": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "986": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "POP",
      "path": "5"
    },
    "987": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "990": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11BB"
    },
    "993": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "jump": "i",
      "offset": [
        6165,
        6661
      ],
      "op": "JUMP",
      "path": "5"
    },
    "994": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "995": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "996": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "DUP1",
      "path": "5"
    },
    "997": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "998": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3EE"
    },
    "1001": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1002": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1004": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1005": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1006": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1007": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "POP",
      "path": "5"
    },
    "1008": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "1011": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12DF"
    },
    "1014": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "jump": "i",
      "offset": [
        8869,
        9170
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1015": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1016": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1017": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1018": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1019": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x403"
    },
    "1022": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1023": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1025": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1026": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1027": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1028": {
      "op": "POP"
    },
    "1029": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "1032": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x412"
    },
    "1035": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1036": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1038": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2523"
    },
    "1041": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "jump": "i",
      "offset": [
        3191,
        3487
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1042": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1043": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1395"
    },
    "1046": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "jump": "i",
      "offset": [
        3191,
        3487
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1047": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1048": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1049": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1050": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1051": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x423"
    },
    "1054": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1055": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1057": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1058": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1059": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1060": {
      "op": "POP"
    },
    "1061": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "1064": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x432"
    },
    "1067": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1068": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1070": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2623"
    },
    "1073": {
      "fn": "GreenHydrogenCredit.assignRole",
      "jump": "i",
      "offset": [
        3845,
        4068
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1074": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1075": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x143E"
    },
    "1078": {
      "fn": "GreenHydrogenCredit.assignRole",
      "jump": "i",
      "offset": [
        3845,
        4068
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1079": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1080": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1081": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1082": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1083": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x443"
    },
    "1086": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1087": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1089": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1090": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1091": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1092": {
      "op": "POP"
    },
    "1093": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x297"
    },
    "1096": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x452"
    },
    "1099": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1100": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1102": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2523"
    },
    "1105": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1106": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1113": {
      "op": "SHL"
    },
    "1114": {
      "op": "SUB"
    },
    "1115": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "AND",
      "path": "1",
      "statement": 2
    },
    "1116": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3480,
        3487
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1118": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1119": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1120": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1121": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1123": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1124": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1125": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1126": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1128": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1129": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1130": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1131": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1132": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1133": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1134": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1135": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1136": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1137": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x479"
    },
    "1140": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1141": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1143": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1144": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1145": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1146": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "POP",
      "path": "0"
    },
    "1147": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "1150": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1529"
    },
    "1153": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1154": {
      "offset": [
        865,
        910
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1155": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1156": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1157": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1158": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x48E"
    },
    "1161": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1162": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1164": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1165": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1166": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1167": {
      "op": "POP"
    },
    "1168": {
      "offset": [
        865,
        910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B2"
    },
    "1171": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x49D"
    },
    "1174": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1175": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1177": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2523"
    },
    "1180": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        865,
        910
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1181": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1182": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "1184": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1186": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1187": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1189": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1190": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1191": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1192": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1194": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1195": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1196": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1197": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1199": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "AND",
      "path": "5"
    },
    "1200": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1201": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1202": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1203": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1205": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1206": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x236"
    },
    "1209": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1210": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1211": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        865,
        910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2703"
    },
    "1214": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        865,
        910
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1215": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1216": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1217": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1218": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1219": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CB"
    },
    "1222": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1223": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1225": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1226": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1227": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1228": {
      "op": "POP"
    },
    "1229": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x5"
    },
    "1231": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1238": {
      "op": "SHL"
    },
    "1239": {
      "op": "SUB"
    },
    "1240": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1241": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1242": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1244": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1251": {
      "op": "SHL"
    },
    "1252": {
      "op": "SUB"
    },
    "1253": {
      "op": "SWAP1"
    },
    "1254": {
      "op": "SWAP2"
    },
    "1255": {
      "op": "AND"
    },
    "1256": {
      "op": "DUP2"
    },
    "1257": {
      "op": "MSTORE"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1260": {
      "op": "ADD"
    },
    "1261": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x236"
    },
    "1264": {
      "op": "JUMP"
    },
    "1265": {
      "offset": [
        916,
        963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1266": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1267": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1268": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1269": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4FD"
    },
    "1272": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1273": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1275": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1276": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1277": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1278": {
      "op": "POP"
    },
    "1279": {
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x229"
    },
    "1282": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x50C"
    },
    "1285": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1286": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1288": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2523"
    },
    "1291": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        916,
        963
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1292": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1293": {
      "fn": "Ownable.owner",
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x153D"
    },
    "1296": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        916,
        963
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1297": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1298": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1299": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1300": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1301": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x51D"
    },
    "1304": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1305": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1307": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1308": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1309": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1310": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "POP",
      "path": "1"
    },
    "1311": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x229"
    },
    "1314": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15D7"
    },
    "1317": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2365,
        2467
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1318": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1319": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1320": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1321": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1322": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x532"
    },
    "1325": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1326": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1328": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1329": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1330": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x546"
    },
    "1335": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x541"
    },
    "1338": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1339": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1341": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2523"
    },
    "1344": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "jump": "i",
      "offset": [
        9344,
        9464
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1345": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1346": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15E6"
    },
    "1349": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "jump": "i",
      "offset": [
        9344,
        9464
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1350": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1351": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1353": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1354": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x236"
    },
    "1357": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1358": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1363": {
      "op": "DUP3"
    },
    "1364": {
      "op": "ADD"
    },
    "1365": {
      "op": "SWAP1"
    },
    "1366": {
      "op": "POP"
    },
    "1367": {
      "op": "DUP3"
    },
    "1368": {
      "op": "MLOAD"
    },
    "1369": {
      "op": "DUP3"
    },
    "1370": {
      "op": "MSTORE"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1373": {
      "op": "DUP4"
    },
    "1374": {
      "op": "ADD"
    },
    "1375": {
      "op": "MLOAD"
    },
    "1376": {
      "op": "ISZERO"
    },
    "1377": {
      "op": "ISZERO"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1380": {
      "op": "DUP4"
    },
    "1381": {
      "op": "ADD"
    },
    "1382": {
      "op": "MSTORE"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1385": {
      "op": "DUP4"
    },
    "1386": {
      "op": "ADD"
    },
    "1387": {
      "op": "MLOAD"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1390": {
      "op": "DUP4"
    },
    "1391": {
      "op": "ADD"
    },
    "1392": {
      "op": "MSTORE"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1395": {
      "op": "DUP4"
    },
    "1396": {
      "op": "ADD"
    },
    "1397": {
      "op": "MLOAD"
    },
    "1398": {
      "op": "ISZERO"
    },
    "1399": {
      "op": "ISZERO"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1402": {
      "op": "DUP4"
    },
    "1403": {
      "op": "ADD"
    },
    "1404": {
      "op": "MSTORE"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1407": {
      "op": "DUP4"
    },
    "1408": {
      "op": "ADD"
    },
    "1409": {
      "op": "MLOAD"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1412": {
      "op": "DUP4"
    },
    "1413": {
      "op": "ADD"
    },
    "1414": {
      "op": "MSTORE"
    },
    "1415": {
      "op": "SWAP3"
    },
    "1416": {
      "op": "SWAP2"
    },
    "1417": {
      "op": "POP"
    },
    "1418": {
      "op": "POP"
    },
    "1419": {
      "op": "JUMP"
    },
    "1420": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1421": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1422": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1423": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1424": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x598"
    },
    "1427": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1428": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1430": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1431": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1432": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1433": {
      "op": "POP"
    },
    "1434": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "1437": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5A7"
    },
    "1440": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1441": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1443": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2711"
    },
    "1446": {
      "fn": "GreenHydrogenCredit.setQuota",
      "jump": "i",
      "offset": [
        6671,
        7051
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1447": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1448": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x167E"
    },
    "1451": {
      "fn": "GreenHydrogenCredit.setQuota",
      "jump": "i",
      "offset": [
        6671,
        7051
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1452": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1453": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1454": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1455": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1456": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B8"
    },
    "1459": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1460": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1462": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1463": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1464": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1465": {
      "op": "POP"
    },
    "1466": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25F"
    },
    "1469": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C7"
    },
    "1472": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1473": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1475": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24BC"
    },
    "1478": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1479": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1480": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17BD"
    },
    "1483": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1484": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1485": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1486": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1487": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1488": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5D8"
    },
    "1491": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1492": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1494": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1495": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1496": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1497": {
      "op": "POP"
    },
    "1498": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25F"
    },
    "1501": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E7"
    },
    "1504": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1505": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1507": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24BC"
    },
    "1510": {
      "fn": "GreenHydrogenCredit.transfer",
      "jump": "i",
      "offset": [
        10154,
        10480
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1511": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1512": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1843"
    },
    "1515": {
      "fn": "GreenHydrogenCredit.transfer",
      "jump": "i",
      "offset": [
        10154,
        10480
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1516": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1517": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1518": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1519": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1520": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5F8"
    },
    "1523": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1524": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1526": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1527": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1528": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1529": {
      "op": "POP"
    },
    "1530": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x681"
    },
    "1533": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x607"
    },
    "1536": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1537": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1539": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2523"
    },
    "1542": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "jump": "i",
      "offset": [
        9210,
        9334
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1543": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1546": {
      "op": "DUP1"
    },
    "1547": {
      "op": "MLOAD"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1550": {
      "op": "DUP2"
    },
    "1551": {
      "op": "ADD"
    },
    "1552": {
      "op": "DUP3"
    },
    "1553": {
      "op": "MSTORE"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1556": {
      "op": "DUP1"
    },
    "1557": {
      "op": "DUP3"
    },
    "1558": {
      "op": "MSTORE"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1561": {
      "op": "DUP3"
    },
    "1562": {
      "op": "ADD"
    },
    "1563": {
      "op": "DUP2"
    },
    "1564": {
      "op": "SWAP1"
    },
    "1565": {
      "op": "MSTORE"
    },
    "1566": {
      "op": "SWAP2"
    },
    "1567": {
      "op": "DUP2"
    },
    "1568": {
      "op": "ADD"
    },
    "1569": {
      "op": "DUP3"
    },
    "1570": {
      "op": "SWAP1"
    },
    "1571": {
      "op": "MSTORE"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1574": {
      "op": "DUP2"
    },
    "1575": {
      "op": "ADD"
    },
    "1576": {
      "op": "SWAP2"
    },
    "1577": {
      "op": "SWAP1"
    },
    "1578": {
      "op": "SWAP2"
    },
    "1579": {
      "op": "MSTORE"
    },
    "1580": {
      "op": "POP"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1587": {
      "op": "SHL"
    },
    "1588": {
      "op": "SUB"
    },
    "1589": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "AND",
      "path": "5",
      "statement": 4
    },
    "1590": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1592": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1593": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1594": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1595": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9317
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "1597": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1599": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1600": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1601": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1602": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1604": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1605": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1606": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1607": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9308,
        9327
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1608": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1609": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1610": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "1612": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1613": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "ADD",
      "path": "5"
    },
    "1614": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1615": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1616": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1617": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1618": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1620": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1621": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1622": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "AND",
      "path": "5"
    },
    "1623": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1624": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1625": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1626": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1627": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1629": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1630": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "ADD",
      "path": "5"
    },
    "1631": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1632": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1633": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1634": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "ADD",
      "path": "5"
    },
    "1635": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1636": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1637": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1638": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1639": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1641": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1642": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "ADD",
      "path": "5"
    },
    "1643": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1644": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1645": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1646": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "ADD",
      "path": "5"
    },
    "1647": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1648": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1649": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1650": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1651": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1653": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "ADD",
      "path": "5"
    },
    "1654": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1655": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "AND",
      "path": "5"
    },
    "1656": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1657": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1658": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1660": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1661": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "ADD",
      "path": "5"
    },
    "1662": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1663": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9301,
        9327
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1664": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1665": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1666": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1668": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1669": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x236"
    },
    "1672": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1673": {
      "fn": "GreenHydrogenCredit.getProducerInfo",
      "offset": [
        9210,
        9334
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1674": {
      "op": "DUP2"
    },
    "1675": {
      "op": "MLOAD"
    },
    "1676": {
      "op": "ISZERO"
    },
    "1677": {
      "op": "ISZERO"
    },
    "1678": {
      "op": "DUP2"
    },
    "1679": {
      "op": "MSTORE"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1682": {
      "op": "DUP1"
    },
    "1683": {
      "op": "DUP4"
    },
    "1684": {
      "op": "ADD"
    },
    "1685": {
      "op": "MLOAD"
    },
    "1686": {
      "op": "SWAP1"
    },
    "1687": {
      "op": "DUP3"
    },
    "1688": {
      "op": "ADD"
    },
    "1689": {
      "op": "MSTORE"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1692": {
      "op": "DUP1"
    },
    "1693": {
      "op": "DUP4"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "op": "MLOAD"
    },
    "1696": {
      "op": "SWAP1"
    },
    "1697": {
      "op": "DUP3"
    },
    "1698": {
      "op": "ADD"
    },
    "1699": {
      "op": "MSTORE"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1702": {
      "op": "SWAP2"
    },
    "1703": {
      "op": "DUP3"
    },
    "1704": {
      "op": "ADD"
    },
    "1705": {
      "op": "MLOAD"
    },
    "1706": {
      "op": "ISZERO"
    },
    "1707": {
      "op": "ISZERO"
    },
    "1708": {
      "op": "SWAP2"
    },
    "1709": {
      "op": "DUP2"
    },
    "1710": {
      "op": "ADD"
    },
    "1711": {
      "op": "SWAP2"
    },
    "1712": {
      "op": "SWAP1"
    },
    "1713": {
      "op": "SWAP2"
    },
    "1714": {
      "op": "MSTORE"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1717": {
      "op": "ADD"
    },
    "1718": {
      "op": "SWAP1"
    },
    "1719": {
      "op": "JUMP"
    },
    "1720": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1721": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1722": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1723": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1724": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6C4"
    },
    "1727": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1728": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1730": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1731": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1732": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1733": {
      "op": "POP"
    },
    "1734": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "1737": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6D3"
    },
    "1740": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1741": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1743": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25D1"
    },
    "1746": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "jump": "i",
      "offset": [
        4548,
        4809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1747": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1748": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x191F"
    },
    "1751": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "jump": "i",
      "offset": [
        4548,
        4809
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1752": {
      "offset": [
        1017,
        1049
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1753": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1754": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1755": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1756": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "1759": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1760": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1762": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1763": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1764": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1765": {
      "op": "POP"
    },
    "1766": {
      "offset": [
        1017,
        1049
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xB"
    },
    "1768": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1769": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4D9"
    },
    "1772": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1779": {
      "op": "SHL"
    },
    "1780": {
      "op": "SUB"
    },
    "1781": {
      "offset": [
        1017,
        1049
      ],
      "op": "AND",
      "path": "5"
    },
    "1782": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1783": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        1017,
        1049
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1784": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1785": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1786": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1787": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1788": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x704"
    },
    "1791": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1792": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1794": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1795": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1796": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1797": {
      "op": "POP"
    },
    "1798": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x297"
    },
    "1801": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x713"
    },
    "1804": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1805": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1807": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x272A"
    },
    "1810": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1811": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1812": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A41"
    },
    "1815": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1816": {
      "offset": [
        819,
        859
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1817": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1818": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1819": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1820": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x724"
    },
    "1823": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1824": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1826": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1827": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1828": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1829": {
      "op": "POP"
    },
    "1830": {
      "offset": [
        819,
        859
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25F"
    },
    "1833": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x733"
    },
    "1836": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1837": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1839": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2523"
    },
    "1842": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        819,
        859
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1843": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1844": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "1846": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1848": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1849": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1851": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1852": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1853": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1854": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1856": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1857": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1858": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1859": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1861": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "AND",
      "path": "5"
    },
    "1862": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1863": {
      "fn": "ERC20.allowance",
      "offset": [
        819,
        859
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1864": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1865": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1866": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1867": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1868": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x754"
    },
    "1871": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1872": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1874": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1875": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1876": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1877": {
      "op": "POP"
    },
    "1878": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25F"
    },
    "1881": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x763"
    },
    "1884": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1885": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1887": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2523"
    },
    "1890": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "jump": "i",
      "offset": [
        9627,
        9737
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1891": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1898": {
      "op": "SHL"
    },
    "1899": {
      "op": "SUB"
    },
    "1900": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9730
      ],
      "op": "AND",
      "path": "5",
      "statement": 5
    },
    "1901": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9690,
        9694
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1903": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9730
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1904": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9730
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1905": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9730
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1906": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "1908": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1910": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9730
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1911": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1913": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9730
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1914": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9730
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1915": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9730
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1916": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1918": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9730
      ],
      "op": "AND",
      "path": "5"
    },
    "1919": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9713,
        9730
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1920": {
      "fn": "GreenHydrogenCredit.isAccountFrozen",
      "offset": [
        9627,
        9737
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1921": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1922": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1923": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1924": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1925": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x78D"
    },
    "1928": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1929": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1931": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1932": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1933": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1934": {
      "op": "POP"
    },
    "1935": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "1938": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x79C"
    },
    "1941": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1942": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1944": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2711"
    },
    "1947": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "jump": "i",
      "offset": [
        5339,
        6122
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1948": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1949": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A6C"
    },
    "1952": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "jump": "i",
      "offset": [
        5339,
        6122
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1953": {
      "offset": [
        1055,
        1090
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1954": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1955": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1956": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1957": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7AD"
    },
    "1960": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1961": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1963": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1964": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1965": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1966": {
      "op": "POP"
    },
    "1967": {
      "offset": [
        1055,
        1090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xC"
    },
    "1969": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1970": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4D9"
    },
    "1973": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1980": {
      "op": "SHL"
    },
    "1981": {
      "op": "SUB"
    },
    "1982": {
      "offset": [
        1055,
        1090
      ],
      "op": "AND",
      "path": "5"
    },
    "1983": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1984": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        1055,
        1090
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1985": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1986": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1987": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1988": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1989": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7CD"
    },
    "1992": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1993": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1995": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1996": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1997": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1998": {
      "op": "POP"
    },
    "1999": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "2002": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7DC"
    },
    "2005": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2006": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2008": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2523"
    },
    "2011": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "jump": "i",
      "offset": [
        3497,
        3835
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2012": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2013": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D10"
    },
    "2016": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "jump": "i",
      "offset": [
        3497,
        3835
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2017": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2018": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2019": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2020": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2021": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7ED"
    },
    "2024": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2025": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2027": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2028": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2029": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "2034": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FC"
    },
    "2037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2038": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2040": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2523"
    },
    "2043": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2044": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E02"
    },
    "2048": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2049": {
      "offset": [
        769,
        813
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2052": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2053": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x80D"
    },
    "2056": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2057": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2059": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2060": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2061": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2062": {
      "op": "POP"
    },
    "2063": {
      "offset": [
        769,
        813
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x850"
    },
    "2066": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x81C"
    },
    "2069": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2070": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2072": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2523"
    },
    "2075": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        769,
        813
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2076": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "2079": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2081": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2082": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2084": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2085": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2086": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2087": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2089": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2090": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2091": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2092": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2093": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2095": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2096": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "ADD",
      "path": "5"
    },
    "2097": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2098": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2100": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2101": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "ADD",
      "path": "5"
    },
    "2102": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2103": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2105": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2106": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "ADD",
      "path": "5"
    },
    "2107": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2108": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2110": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2111": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2112": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "ADD",
      "path": "5"
    },
    "2113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2114": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2115": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2116": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2119": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2120": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "AND",
      "path": "5"
    },
    "2121": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2122": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "AND",
      "path": "5"
    },
    "2125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2126": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2127": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2128": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2129": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2131": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2132": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        769,
        813
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2133": {
      "op": "SWAP6"
    },
    "2134": {
      "op": "DUP7"
    },
    "2135": {
      "op": "MSTORE"
    },
    "2136": {
      "op": "SWAP4"
    },
    "2137": {
      "op": "ISZERO"
    },
    "2138": {
      "op": "ISZERO"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2141": {
      "op": "DUP7"
    },
    "2142": {
      "op": "ADD"
    },
    "2143": {
      "op": "MSTORE"
    },
    "2144": {
      "op": "SWAP3"
    },
    "2145": {
      "op": "DUP5"
    },
    "2146": {
      "op": "ADD"
    },
    "2147": {
      "op": "SWAP2"
    },
    "2148": {
      "op": "SWAP1"
    },
    "2149": {
      "op": "SWAP2"
    },
    "2150": {
      "op": "MSTORE"
    },
    "2151": {
      "op": "ISZERO"
    },
    "2152": {
      "op": "ISZERO"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2155": {
      "op": "DUP4"
    },
    "2156": {
      "op": "ADD"
    },
    "2157": {
      "op": "MSTORE"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2160": {
      "op": "DUP3"
    },
    "2161": {
      "op": "ADD"
    },
    "2162": {
      "op": "MSTORE"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2165": {
      "op": "ADD"
    },
    "2166": {
      "offset": [
        769,
        813
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x236"
    },
    "2169": {
      "op": "JUMP"
    },
    "2170": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2171": {
      "fn": "ERC20.name",
      "offset": [
        2208,
        2221
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2173": {
      "fn": "ERC20.name",
      "offset": [
        2240,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x3"
    },
    "2175": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2176": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2177": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x889"
    },
    "2180": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2181": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x275D"
    },
    "2184": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2185": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2186": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2187": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2189": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "1"
    },
    "2190": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2192": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2193": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2194": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DIV",
      "path": "1"
    },
    "2195": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MUL",
      "path": "1"
    },
    "2196": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2198": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "1"
    },
    "2199": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2201": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2202": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2203": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2204": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "1"
    },
    "2205": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2207": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2208": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2209": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2210": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2211": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2212": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2213": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2214": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2215": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2217": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "1"
    },
    "2218": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2219": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2220": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2221": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8B5"
    },
    "2224": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2225": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x275D"
    },
    "2228": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2229": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2230": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2231": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2232": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x902"
    },
    "2235": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2236": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2237": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2239": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "LT",
      "path": "1"
    },
    "2240": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D7"
    },
    "2243": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2244": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2247": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2248": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2249": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2250": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DIV",
      "path": "1"
    },
    "2251": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MUL",
      "path": "1"
    },
    "2252": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2253": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2254": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2255": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2257": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "1"
    },
    "2258": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2259": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x902"
    },
    "2262": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2263": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2264": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2265": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "1"
    },
    "2266": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2267": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2268": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2270": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2271": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2273": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2275": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2276": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2277": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2278": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2279": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2280": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2281": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2282": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2283": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2285": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "1"
    },
    "2286": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2287": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2289": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "1"
    },
    "2290": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2291": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2292": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "GT",
      "path": "1"
    },
    "2293": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E5"
    },
    "2296": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2297": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2298": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2299": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SUB",
      "path": "1"
    },
    "2300": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2302": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "AND",
      "path": "1"
    },
    "2303": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2304": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "1"
    },
    "2305": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2306": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2307": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "1"
    },
    "2308": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "1"
    },
    "2309": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "1"
    },
    "2310": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "1"
    },
    "2311": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "1"
    },
    "2312": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2313": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "1"
    },
    "2314": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2315": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2316": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2317": {
      "fn": "ERC20.approve",
      "offset": [
        4514,
        4518
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2319": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 7
    },
    "2320": {
      "fn": "ERC20.approve",
      "offset": [
        4568,
        4600
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 8,
      "value": "0x91A"
    },
    "2323": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2324": {
      "fn": "ERC20.approve",
      "offset": [
        4584,
        4591
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2325": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4599
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2326": {
      "fn": "ERC20.approve",
      "offset": [
        4568,
        4576
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E7B"
    },
    "2329": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4568,
        4600
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2330": {
      "fn": "ERC20.approve",
      "offset": [
        4568,
        4600
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2331": {
      "fn": "ERC20.approve",
      "offset": [
        4617,
        4621
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x1"
    },
    "2333": {
      "fn": "ERC20.approve",
      "offset": [
        4610,
        4621
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2334": {
      "fn": "ERC20.approve",
      "offset": [
        4610,
        4621
      ],
      "op": "POP",
      "path": "1"
    },
    "2335": {
      "fn": "ERC20.approve",
      "offset": [
        4610,
        4621
      ],
      "op": "POP",
      "path": "1"
    },
    "2336": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2337": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2338": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2339": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "POP",
      "path": "1"
    },
    "2340": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "POP",
      "path": "1"
    },
    "2341": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2342": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4849,
        5329
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2343": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4914,
        4924
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 10
    },
    "2344": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4929,
        4942
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2346": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4925
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2347": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4925
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2348": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4925
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2349": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4913
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "2351": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4925
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2353": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4925
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2354": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4925
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2356": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4925
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2357": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4925
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2358": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4925
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2359": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4925
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2361": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4925
      ],
      "op": "AND",
      "path": "5"
    },
    "2362": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4942
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2364": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4942
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2365": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4942
      ],
      "op": "GT",
      "path": "5"
    },
    "2366": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4942
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2367": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4942
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x94A"
    },
    "2370": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4942
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2371": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4942
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x94A"
    },
    "2374": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4942
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253E"
    },
    "2377": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "jump": "i",
      "offset": [
        4904,
        4942
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2378": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4942
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2379": {
      "branch": 108,
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4904,
        4942
      ],
      "op": "EQ",
      "path": "5"
    },
    "2380": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x970"
    },
    "2383": {
      "branch": 108,
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2384": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2386": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2387": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2393": {
      "op": "SHL"
    },
    "2394": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2395": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2396": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2398": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "ADD",
      "path": "5"
    },
    "2399": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "2402": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2403": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2797"
    },
    "2406": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "jump": "i",
      "offset": [
        4896,
        4979
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2407": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2408": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2410": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2411": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2412": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2413": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "SUB",
      "path": "5"
    },
    "2414": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2415": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "2416": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4896,
        4979
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2417": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4999,
        5009
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 11
    },
    "2418": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2420": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5010
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2421": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5010
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2422": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5010
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2423": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        4998
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "2425": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2427": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5010
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2428": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5010
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2429": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5010
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2430": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2432": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5010
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2433": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5010
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2434": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5010
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2435": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5030
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2436": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5030
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2439": {
      "op": "NOT"
    },
    "2440": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5030
      ],
      "op": "AND",
      "path": "5"
    },
    "2441": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5013,
        5030
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2443": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5030
      ],
      "op": "OR",
      "path": "5"
    },
    "2444": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5030
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2445": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        4989,
        5030
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2446": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 12
    },
    "2447": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2448": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2449": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2450": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "ADD",
      "path": "5"
    },
    "2451": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2452": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2453": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2455": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2456": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2457": {
      "op": "PUSH8",
      "value": "0x383937B23AB1B2B9"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "2468": {
      "op": "SHL"
    },
    "2469": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2470": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2471": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "ADD",
      "path": "5"
    },
    "2472": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2473": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5065
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2474": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5065
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2475": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5065
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2476": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5053
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "2478": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5065
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2479": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5065
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2480": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5065
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2481": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5065
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2482": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5065
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2483": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5065
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2484": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9BD"
    },
    "2487": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2488": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5065
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2489": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2813"
    },
    "2492": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "jump": "i",
      "offset": [
        5040,
        5078
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2493": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5040,
        5078
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2494": {
      "op": "POP"
    },
    "2495": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 13,
      "value": "0x40"
    },
    "2497": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2498": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2499": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2501": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2502": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "ADD",
      "path": "5"
    },
    "2503": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2504": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2507": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2508": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2509": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2510": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2512": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2513": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2514": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "ADD",
      "path": "5"
    },
    "2515": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2516": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2517": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2518": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2519": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2520": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "ADD",
      "path": "5"
    },
    "2521": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2522": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2523": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2524": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2526": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2527": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "ADD",
      "path": "5"
    },
    "2528": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2529": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2530": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2531": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5098,
        5108
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2532": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5109
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2533": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5109
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2534": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5109
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2535": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5097
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2537": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5109
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2538": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5109
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2539": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5109
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2540": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5109
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2541": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5109
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2542": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5109
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2543": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5109
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2544": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2545": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2546": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2547": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2548": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2549": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2550": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2553": {
      "op": "NOT"
    },
    "2554": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2555": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2556": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "AND",
      "path": "5"
    },
    "2557": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "OR",
      "path": "5"
    },
    "2558": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2559": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2560": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2561": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2562": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2564": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2565": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2566": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "ADD",
      "path": "5"
    },
    "2567": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2568": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2569": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2570": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2571": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2572": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2573": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2575": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2576": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "ADD",
      "path": "5"
    },
    "2577": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2578": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2579": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2580": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2582": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2583": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2584": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "ADD",
      "path": "5"
    },
    "2585": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2586": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2587": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2588": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2589": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2590": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2591": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2592": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2593": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "AND",
      "path": "5"
    },
    "2594": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2595": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2596": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2597": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "OR",
      "path": "5"
    },
    "2598": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2599": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2600": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5088,
        5252
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2601": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 14
    },
    "2602": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2603": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5098,
        5108
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2604": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5098,
        5108
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2607": {
      "op": "DUP1"
    },
    "2608": {
      "op": "MLOAD"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2611": {
      "op": "PUSH2",
      "value": "0x2A88"
    },
    "2614": {
      "op": "DUP4"
    },
    "2615": {
      "op": "CODECOPY"
    },
    "2616": {
      "op": "DUP2"
    },
    "2617": {
      "op": "MLOAD"
    },
    "2618": {
      "op": "SWAP2"
    },
    "2619": {
      "op": "MSTORE"
    },
    "2620": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2621": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA46"
    },
    "2624": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2625": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5112,
        5252
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2626": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28D2"
    },
    "2629": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "jump": "i",
      "offset": [
        5267,
        5322
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2630": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2631": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2633": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2634": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2635": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2636": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "SUB",
      "path": "5"
    },
    "2637": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2638": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "offset": [
        5267,
        5322
      ],
      "op": "LOG2",
      "path": "5"
    },
    "2639": {
      "fn": "GreenHydrogenCredit.registerAsProducer",
      "jump": "o",
      "offset": [
        4849,
        5329
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2640": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2647": {
      "op": "SHL"
    },
    "2648": {
      "op": "SUB"
    },
    "2649": {
      "offset": [
        3087,
        3104
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2650": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "AND",
      "path": "5"
    },
    "2651": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10609,
        10613
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2653": {
      "offset": [
        3087,
        3104
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2654": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2655": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2656": {
      "offset": [
        3087,
        3095
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2658": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2660": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2661": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2663": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2664": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2665": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2666": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10580,
        10584
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2667": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10580,
        10584
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2668": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2670": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "AND",
      "path": "5"
    },
    "2671": {
      "offset": [
        3086,
        3104
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2672": {
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA8B"
    },
    "2675": {
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2676": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2678": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2679": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2685": {
      "op": "SHL"
    },
    "2686": {
      "offset": [
        3078,
        3126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2687": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2688": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2690": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "ADD",
      "path": "5"
    },
    "2691": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "2694": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2695": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2904"
    },
    "2698": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "jump": "i",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2699": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2706": {
      "op": "SHL"
    },
    "2707": {
      "op": "SUB"
    },
    "2708": {
      "offset": [
        3087,
        3104
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2709": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "AND",
      "path": "5"
    },
    "2710": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2712": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2713": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2714": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2715": {
      "offset": [
        3087,
        3095
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2717": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2719": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2720": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2722": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2723": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2724": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2725": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10596,
        10598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2726": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10596,
        10598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2727": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2729": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3087,
        3104
      ],
      "op": "AND",
      "path": "5"
    },
    "2730": {
      "offset": [
        3086,
        3104
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2731": {
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC6"
    },
    "2734": {
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2735": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2737": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2738": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2744": {
      "op": "SHL"
    },
    "2745": {
      "offset": [
        3078,
        3126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2746": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2747": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2749": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "ADD",
      "path": "5"
    },
    "2750": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "2753": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2754": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2904"
    },
    "2757": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "jump": "i",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2758": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2759": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10625,
        10636
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2761": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10639,
        10675
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAD3"
    },
    "2764": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10658,
        10662
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2765": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10664,
        10666
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2766": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10668,
        10674
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2767": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10639,
        10657
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F9F"
    },
    "2770": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "jump": "i",
      "offset": [
        10639,
        10675
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2771": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10639,
        10675
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2772": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10625,
        10675
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2773": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10625,
        10675
      ],
      "op": "POP",
      "path": "5"
    },
    "2774": {
      "branch": 109,
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10689,
        10695
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2775": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10685,
        10803
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2776": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10685,
        10803
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB2D"
    },
    "2779": {
      "branch": 109,
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10685,
        10803
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2780": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10745,
        10762
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 15,
      "value": "0xB"
    },
    "2782": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10745,
        10762
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2783": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2785": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2786": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2787": {
      "op": "DUP2"
    },
    "2788": {
      "op": "DUP2"
    },
    "2789": {
      "op": "MSTORE"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "2792": {
      "op": "DUP2"
    },
    "2793": {
      "op": "DUP4"
    },
    "2794": {
      "op": "ADD"
    },
    "2795": {
      "op": "MSTORE"
    },
    "2796": {
      "op": "PUSH8",
      "value": "0x2A2920A729A322A9"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "2807": {
      "op": "SHL"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2810": {
      "op": "DUP3"
    },
    "2811": {
      "op": "ADD"
    },
    "2812": {
      "op": "MSTORE"
    },
    "2813": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10776,
        10791
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2816": {
      "op": "DUP3"
    },
    "2817": {
      "op": "ADD"
    },
    "2818": {
      "op": "MSTORE"
    },
    "2819": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2820": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2827": {
      "op": "SHL"
    },
    "2828": {
      "op": "SUB"
    },
    "2829": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10745,
        10762
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2830": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10745,
        10762
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2831": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10745,
        10762
      ],
      "op": "AND",
      "path": "5"
    },
    "2832": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10745,
        10762
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2833": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "DUP11",
      "path": "5"
    },
    "2834": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "AND",
      "path": "5"
    },
    "2835": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2838": {
      "op": "DUP1"
    },
    "2839": {
      "op": "MLOAD"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2842": {
      "op": "PUSH2",
      "value": "0x2AA8"
    },
    "2845": {
      "op": "DUP4"
    },
    "2846": {
      "op": "CODECOPY"
    },
    "2847": {
      "op": "DUP2"
    },
    "2848": {
      "op": "MLOAD"
    },
    "2849": {
      "op": "SWAP2"
    },
    "2850": {
      "op": "MSTORE"
    },
    "2851": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2852": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2853": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2854": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2855": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "SUB",
      "path": "5"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2858": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "ADD",
      "path": "5"
    },
    "2859": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2860": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10716,
        10792
      ],
      "op": "LOG3",
      "path": "5"
    },
    "2861": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10685,
        10803
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2862": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10819,
        10825
      ],
      "op": "SWAP7",
      "path": "5",
      "statement": 16
    },
    "2863": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "offset": [
        10490,
        10832
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "2864": {
      "op": "POP"
    },
    "2865": {
      "op": "POP"
    },
    "2866": {
      "op": "POP"
    },
    "2867": {
      "op": "POP"
    },
    "2868": {
      "op": "POP"
    },
    "2869": {
      "op": "POP"
    },
    "2870": {
      "fn": "GreenHydrogenCredit.transferFrom",
      "jump": "o",
      "offset": [
        10490,
        10832
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2871": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2878": {
      "op": "SHL"
    },
    "2879": {
      "op": "SUB"
    },
    "2880": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 17
    },
    "2881": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "AND",
      "path": "5"
    },
    "2882": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9530,
        9538
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2884": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2885": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2886": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2887": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9582
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "2889": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2891": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2892": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2893": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2894": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2896": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2897": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2898": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2899": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2900": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9590,
        9603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "2902": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9590,
        9609
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2903": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9590,
        9609
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2904": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9590,
        9609
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2905": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9590,
        9609
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2906": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9590,
        9609
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2907": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2908": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2909": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9540,
        9553
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2911": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9540,
        9553
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2912": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2914": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "AND",
      "path": "5"
    },
    "2915": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9573,
        9588
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2916": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9590,
        9609
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2917": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9590,
        9609
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2918": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9590,
        9609
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2919": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB6F"
    },
    "2922": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2923": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x275D"
    },
    "2926": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "jump": "i",
      "offset": [
        9565,
        9610
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2927": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2928": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2929": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2931": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "ADD",
      "path": "5"
    },
    "2932": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2934": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2935": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2936": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DIV",
      "path": "5"
    },
    "2937": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "MUL",
      "path": "5"
    },
    "2938": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2940": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "ADD",
      "path": "5"
    },
    "2941": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2943": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2944": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2945": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2946": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "ADD",
      "path": "5"
    },
    "2947": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2949": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2950": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2951": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2952": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2953": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2954": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2955": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2956": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2957": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2959": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "ADD",
      "path": "5"
    },
    "2960": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2961": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2962": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2963": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB9B"
    },
    "2966": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2967": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x275D"
    },
    "2970": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "jump": "i",
      "offset": [
        9565,
        9610
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2971": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2972": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2973": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2974": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBE8"
    },
    "2977": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2978": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2979": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2981": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "LT",
      "path": "5"
    },
    "2982": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBBD"
    },
    "2985": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2986": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2989": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2990": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2991": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2992": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DIV",
      "path": "5"
    },
    "2993": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "MUL",
      "path": "5"
    },
    "2994": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2995": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2996": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2997": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2999": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "ADD",
      "path": "5"
    },
    "3000": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3001": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBE8"
    },
    "3004": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3005": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3006": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3007": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "ADD",
      "path": "5"
    },
    "3008": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3009": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3010": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3012": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3013": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3015": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3017": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3018": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3019": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3020": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3021": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3022": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3023": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3024": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3025": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3027": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "ADD",
      "path": "5"
    },
    "3028": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3029": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3031": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "ADD",
      "path": "5"
    },
    "3032": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3033": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3034": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "GT",
      "path": "5"
    },
    "3035": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBCB"
    },
    "3038": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3039": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3040": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3041": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SUB",
      "path": "5"
    },
    "3042": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3044": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "AND",
      "path": "5"
    },
    "3045": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3046": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "ADD",
      "path": "5"
    },
    "3047": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3048": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3049": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "POP",
      "path": "5"
    },
    "3050": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "POP",
      "path": "5"
    },
    "3051": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "POP",
      "path": "5"
    },
    "3052": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "POP",
      "path": "5"
    },
    "3053": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "POP",
      "path": "5"
    },
    "3054": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3055": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "POP",
      "path": "5"
    },
    "3056": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3057": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "POP",
      "path": "5"
    },
    "3058": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3059": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9565,
        9610
      ],
      "op": "POP",
      "path": "5"
    },
    "3060": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3061": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "POP",
      "path": "5"
    },
    "3062": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "offset": [
        9474,
        9617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3063": {
      "fn": "GreenHydrogenCredit.getUserRole",
      "jump": "o",
      "offset": [
        9474,
        9617
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3064": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3065": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5959,
        5963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3067": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3068": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6013,
        6077
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 18,
      "value": "0x91A"
    },
    "3071": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3072": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6029,
        6036
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3073": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6066,
        6076
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3074": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6063
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC0B"
    },
    "3077": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3078": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6029,
        6036
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3079": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6047
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A41"
    },
    "3082": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6063
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3083": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6063
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3084": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC15"
    },
    "3087": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3088": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3089": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x292F"
    },
    "3092": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3093": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3094": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6013,
        6021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E7B"
    },
    "3097": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6013,
        6077
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3098": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7061,
        8826
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3099": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7158,
        7168
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3100": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3102": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3103": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3104": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3105": {
      "offset": [
        3087,
        3095
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "3107": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3109": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3110": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3112": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3113": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3114": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3115": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3117": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "AND",
      "path": "5"
    },
    "3118": {
      "offset": [
        3086,
        3104
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3119": {
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC4A"
    },
    "3122": {
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3123": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3125": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3126": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3132": {
      "op": "SHL"
    },
    "3133": {
      "offset": [
        3078,
        3126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3134": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3135": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3137": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "ADD",
      "path": "5"
    },
    "3138": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "3141": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3142": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2904"
    },
    "3145": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "jump": "i",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3146": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3153": {
      "op": "SHL"
    },
    "3154": {
      "op": "SUB"
    },
    "3155": {
      "offset": [
        3087,
        3104
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3156": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "AND",
      "path": "5"
    },
    "3157": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3159": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3160": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3161": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3162": {
      "offset": [
        3087,
        3095
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "3164": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3166": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3167": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3169": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3170": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3171": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3172": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7180,
        7186
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3173": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7180,
        7186
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3174": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3176": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "AND",
      "path": "5"
    },
    "3177": {
      "offset": [
        3086,
        3104
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3178": {
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC85"
    },
    "3181": {
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3182": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3184": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3185": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3191": {
      "op": "SHL"
    },
    "3192": {
      "offset": [
        3078,
        3126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3193": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3194": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3196": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "ADD",
      "path": "5"
    },
    "3197": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "3200": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3201": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2904"
    },
    "3204": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "jump": "i",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3205": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3206": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7215,
        7216
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 19,
      "value": "0x0"
    },
    "3208": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7206,
        7212
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3209": {
      "branch": 110,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7206,
        7216
      ],
      "op": "GT",
      "path": "5"
    },
    "3210": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7198,
        7250
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCD5"
    },
    "3213": {
      "branch": 110,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7198,
        7250
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3214": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7198,
        7250
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3216": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7198,
        7250
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3217": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3223": {
      "op": "SHL"
    },
    "3224": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7198,
        7250
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3225": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7198,
        7250
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3228": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7198,
        7250
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3230": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7198,
        7250
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3231": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7198,
        7250
      ],
      "op": "ADD",
      "path": "5"
    },
    "3232": {
      "op": "MSTORE"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3237": {
      "op": "DUP3"
    },
    "3238": {
      "op": "ADD"
    },
    "3239": {
      "op": "MSTORE"
    },
    "3240": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E2030000000"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3275": {
      "op": "DUP3"
    },
    "3276": {
      "op": "ADD"
    },
    "3277": {
      "op": "MSTORE"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3280": {
      "op": "ADD"
    },
    "3281": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7198,
        7250
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "3284": {
      "op": "JUMP"
    },
    "3285": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7198,
        7250
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3286": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7289,
        7295
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 20
    },
    "3287": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7268,
        7285
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCF5"
    },
    "3290": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7278,
        7284
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3297": {
      "op": "SHL"
    },
    "3298": {
      "op": "SUB"
    },
    "3299": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "AND",
      "path": "1"
    },
    "3300": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3480,
        3487
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3302": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3303": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3304": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3305": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3307": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3308": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3309": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3312": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3313": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3315": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3316": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3317": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7268,
        7285
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3318": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7268,
        7295
      ],
      "op": "LT",
      "path": "5"
    },
    "3319": {
      "branch": 111,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7268,
        7295
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3320": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7260,
        7331
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD43"
    },
    "3323": {
      "branch": 111,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7260,
        7331
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3324": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7260,
        7331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3326": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7260,
        7331
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3327": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3333": {
      "op": "SHL"
    },
    "3334": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7260,
        7331
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3335": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7260,
        7331
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3338": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7260,
        7331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3340": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7260,
        7331
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3341": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7260,
        7331
      ],
      "op": "ADD",
      "path": "5"
    },
    "3342": {
      "op": "MSTORE"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3347": {
      "op": "DUP3"
    },
    "3348": {
      "op": "ADD"
    },
    "3349": {
      "op": "MSTORE"
    },
    "3350": {
      "op": "PUSH32",
      "value": "0x53656C6C65722068617320696E73756666696369656E74206372656469747300"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3385": {
      "op": "DUP3"
    },
    "3386": {
      "op": "ADD"
    },
    "3387": {
      "op": "MSTORE"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7260,
        7331
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "3394": {
      "op": "JUMP"
    },
    "3395": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7260,
        7331
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3396": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7399,
        7436
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 21,
      "value": "0xD4E"
    },
    "3399": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7409,
        7415
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3400": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7417,
        7427
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3401": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7429,
        7435
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3402": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7399,
        7408
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1FB4"
    },
    "3405": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "jump": "i",
      "offset": [
        7399,
        7436
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3406": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7399,
        7436
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3407": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7550,
        7566
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3409": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7535,
        7545
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3410": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7546
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3412": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7546
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3413": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7546
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3414": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7546
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3415": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7534
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "3417": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7546
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3419": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7546
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3420": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7546
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3422": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7546
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3423": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7546
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3424": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7546
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3425": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7546
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3427": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7546
      ],
      "op": "AND",
      "path": "5"
    },
    "3428": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7566
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3430": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7566
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3431": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7566
      ],
      "op": "GT",
      "path": "5"
    },
    "3432": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7566
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3433": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7566
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD74"
    },
    "3436": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7566
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3437": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7566
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD74"
    },
    "3440": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7566
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253E"
    },
    "3443": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "jump": "i",
      "offset": [
        7525,
        7566
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3444": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7566
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3445": {
      "branch": 112,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7525,
        7566
      ],
      "op": "SUB",
      "path": "5"
    },
    "3446": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7521,
        8322
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEC2"
    },
    "3449": {
      "branch": 112,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7521,
        8322
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3450": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7592,
        7602
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 22
    },
    "3451": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3453": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7603
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3454": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7603
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3455": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7603
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3456": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7591
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "3458": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3460": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7603
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3461": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3463": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7603
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3464": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7603
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3465": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7620
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3467": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7620
      ],
      "op": "ADD",
      "path": "5"
    },
    "3468": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7630
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3469": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7630
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3470": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7624,
        7630
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3471": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7624,
        7630
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3472": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7603
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3473": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7630
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD9B"
    },
    "3476": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7630
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3477": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7624,
        7630
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3478": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7624,
        7630
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3479": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7630
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x292F"
    },
    "3482": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "jump": "i",
      "offset": [
        7582,
        7630
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3483": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7630
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3484": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7630
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3485": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7630
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3486": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7582,
        7630
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3487": {
      "op": "POP"
    },
    "3488": {
      "op": "POP"
    },
    "3489": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7708,
        7718
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3490": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3492": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7719
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3493": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7719
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3494": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7719
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3495": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "3497": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3499": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7719
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3500": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3502": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7719
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3503": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7719
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3504": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7728
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3506": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7728
      ],
      "op": "ADD",
      "path": "5"
    },
    "3507": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7728
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3508": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7728
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3510": {
      "branch": 113,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7728
      ],
      "op": "AND",
      "path": "5"
    },
    "3511": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7818
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3512": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7818
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3513": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7818
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDD7"
    },
    "3516": {
      "branch": 113,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7818
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3517": {
      "op": "POP"
    },
    "3518": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7801,
        7811
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3519": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7791,
        7812
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3521": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7791,
        7812
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3522": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7791,
        7812
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3523": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7791,
        7812
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3524": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7791,
        7800
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "3526": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7791,
        7812
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3528": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7791,
        7812
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3529": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7791,
        7812
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3531": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7791,
        7812
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3532": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7791,
        7812
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3533": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7791,
        7818
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3534": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7791,
        7818
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3535": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7749,
        7787
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3537": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7749,
        7787
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3538": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7749,
        7787
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3539": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7749,
        7787
      ],
      "op": "ADD",
      "path": "5"
    },
    "3540": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7749,
        7787
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3541": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7749,
        7818
      ],
      "op": "LT",
      "path": "5"
    },
    "3542": {
      "branch": 114,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7749,
        7818
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3543": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7818
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3544": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7870
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3545": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7870
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3546": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7870
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF6"
    },
    "3549": {
      "branch": 114,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7870
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3550": {
      "op": "POP"
    },
    "3551": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7850,
        7860
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3552": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7861
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3554": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7861
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3555": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7861
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3556": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7861
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3557": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7849
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "3559": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7861
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3561": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7861
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3562": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7861
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3564": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7861
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3565": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7861
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3566": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3568": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7870
      ],
      "op": "ADD",
      "path": "5"
    },
    "3569": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7870
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3570": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3572": {
      "branch": 115,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7840,
        7870
      ],
      "op": "AND",
      "path": "5"
    },
    "3573": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7839,
        7870
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3574": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7698,
        7870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3575": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7694,
        8312
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3576": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7694,
        8312
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEC2"
    },
    "3579": {
      "branch": 115,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7694,
        8312
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3580": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7900,
        7910
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 23
    },
    "3581": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7911
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3583": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7911
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3584": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7911
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3585": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7911
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3586": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "3588": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7911
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3590": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7911
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3591": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7911
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3593": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7911
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3594": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7911
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3595": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7911
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3596": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7911
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3597": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7920
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3599": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7920
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3600": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7920
      ],
      "op": "ADD",
      "path": "5"
    },
    "3601": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7927
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3602": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7927
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3605": {
      "op": "NOT"
    },
    "3606": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7927
      ],
      "op": "AND",
      "path": "5"
    },
    "3607": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7923,
        7927
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3609": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7927
      ],
      "op": "OR",
      "path": "5"
    },
    "3610": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7927
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3611": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7890,
        7927
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3612": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7971,
        8009
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 24,
      "value": "0x2"
    },
    "3614": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7971,
        8009
      ],
      "op": "ADD",
      "path": "5"
    },
    "3615": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7971,
        8009
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3616": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3617": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3618": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x97457CC13035EE82650B6C285CB0FCB524F2FED19793D4CAB249480B193EC0B"
    },
    "3651": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3652": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE57"
    },
    "3655": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3656": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8011,
        8026
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "3657": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8011,
        8026
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3658": {
      "op": "SWAP2"
    },
    "3659": {
      "op": "DUP3"
    },
    "3660": {
      "op": "MSTORE"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3663": {
      "op": "DUP3"
    },
    "3664": {
      "op": "ADD"
    },
    "3665": {
      "op": "MSTORE"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3668": {
      "op": "ADD"
    },
    "3669": {
      "op": "SWAP1"
    },
    "3670": {
      "op": "JUMP"
    },
    "3671": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3672": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3674": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3675": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3676": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3677": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "SUB",
      "path": "5"
    },
    "3678": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3679": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7950,
        8027
      ],
      "op": "LOG2",
      "path": "5"
    },
    "3680": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8130,
        8150
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xC"
    },
    "3682": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8130,
        8150
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3689": {
      "op": "SHL"
    },
    "3690": {
      "op": "SUB"
    },
    "3691": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8130,
        8150
      ],
      "op": "AND",
      "path": "5"
    },
    "3692": {
      "branch": 116,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8130,
        8164
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3693": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8126,
        8298
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEC2"
    },
    "3696": {
      "branch": 116,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8126,
        8298
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3697": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8228,
        8248
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 25,
      "value": "0xC"
    },
    "3699": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8228,
        8248
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3700": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8193,
        8279
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3702": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8193,
        8279
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3703": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8193,
        8279
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3704": {
      "op": "DUP2"
    },
    "3705": {
      "op": "DUP2"
    },
    "3706": {
      "op": "MSTORE"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "3709": {
      "op": "DUP2"
    },
    "3710": {
      "op": "DUP4"
    },
    "3711": {
      "op": "ADD"
    },
    "3712": {
      "op": "MSTORE"
    },
    "3713": {
      "op": "PUSH9",
      "value": "0x145553D51057D35155"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "3725": {
      "op": "SHL"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3728": {
      "op": "DUP3"
    },
    "3729": {
      "op": "ADD"
    },
    "3730": {
      "op": "MSTORE"
    },
    "3731": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8263,
        8278
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3734": {
      "op": "DUP3"
    },
    "3735": {
      "op": "ADD"
    },
    "3736": {
      "op": "MSTORE"
    },
    "3737": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8193,
        8279
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3738": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8193,
        8279
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3745": {
      "op": "SHL"
    },
    "3746": {
      "op": "SUB"
    },
    "3747": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8228,
        8248
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3748": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8228,
        8248
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3749": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8228,
        8248
      ],
      "op": "AND",
      "path": "5"
    },
    "3750": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8228,
        8248
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3751": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8216,
        8226
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3752": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8216,
        8226
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3755": {
      "op": "DUP1"
    },
    "3756": {
      "op": "MLOAD"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3759": {
      "op": "PUSH2",
      "value": "0x2AA8"
    },
    "3762": {
      "op": "DUP4"
    },
    "3763": {
      "op": "CODECOPY"
    },
    "3764": {
      "op": "DUP2"
    },
    "3765": {
      "op": "MLOAD"
    },
    "3766": {
      "op": "SWAP2"
    },
    "3767": {
      "op": "MSTORE"
    },
    "3768": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8193,
        8279
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3769": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8193,
        8279
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3770": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8193,
        8279
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3771": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8193,
        8279
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3772": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8193,
        8279
      ],
      "op": "SUB",
      "path": "5"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3775": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8193,
        8279
      ],
      "op": "ADD",
      "path": "5"
    },
    "3776": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8193,
        8279
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3777": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8193,
        8279
      ],
      "op": "LOG3",
      "path": "5"
    },
    "3778": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8126,
        8298
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3779": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 26,
      "value": "0x40"
    },
    "3781": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3782": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3783": {
      "op": "DUP6"
    },
    "3784": {
      "op": "DUP2"
    },
    "3785": {
      "op": "MSTORE"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3788": {
      "op": "DUP2"
    },
    "3789": {
      "op": "ADD"
    },
    "3790": {
      "op": "DUP6"
    },
    "3791": {
      "op": "SWAP1"
    },
    "3792": {
      "op": "MSTORE"
    },
    "3793": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8396,
        8411
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "3794": {
      "op": "DUP2"
    },
    "3795": {
      "op": "DUP4"
    },
    "3796": {
      "op": "ADD"
    },
    "3797": {
      "op": "MSTORE"
    },
    "3798": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3799": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3806": {
      "op": "SHL"
    },
    "3807": {
      "op": "SUB"
    },
    "3808": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3809": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "AND",
      "path": "5"
    },
    "3810": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3811": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8361,
        8371
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3812": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8361,
        8371
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3813": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xA80E182FC2735B1564190719686030BEC3E14399A5F804181FF5054D1C57BDD1"
    },
    "3846": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3847": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3848": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3849": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "SUB",
      "path": "5"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3852": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "ADD",
      "path": "5"
    },
    "3853": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3854": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8345,
        8412
      ],
      "op": "LOG3",
      "path": "5"
    },
    "3855": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8495,
        8512
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xB"
    },
    "3857": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8495,
        8512
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3864": {
      "op": "SHL"
    },
    "3865": {
      "op": "SUB"
    },
    "3866": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8495,
        8512
      ],
      "op": "AND",
      "path": "5"
    },
    "3867": {
      "branch": 117,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8495,
        8526
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3868": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8491,
        8648
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF78"
    },
    "3871": {
      "branch": 117,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8491,
        8648
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3872": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8582,
        8599
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 27,
      "value": "0xB"
    },
    "3874": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8582,
        8599
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3875": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8547,
        8637
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3877": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8547,
        8637
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3878": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8547,
        8637
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3879": {
      "op": "DUP2"
    },
    "3880": {
      "op": "DUP2"
    },
    "3881": {
      "op": "MSTORE"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3884": {
      "op": "DUP2"
    },
    "3885": {
      "op": "DUP4"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "MSTORE"
    },
    "3888": {
      "op": "PUSH16",
      "value": "0x10D49151125517D4155490D21054D151"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "3907": {
      "op": "SHL"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3910": {
      "op": "DUP3"
    },
    "3911": {
      "op": "ADD"
    },
    "3912": {
      "op": "MSTORE"
    },
    "3913": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8621,
        8636
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3916": {
      "op": "DUP3"
    },
    "3917": {
      "op": "ADD"
    },
    "3918": {
      "op": "MSTORE"
    },
    "3919": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8547,
        8637
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3920": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8547,
        8637
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3927": {
      "op": "SHL"
    },
    "3928": {
      "op": "SUB"
    },
    "3929": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8582,
        8599
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3930": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8582,
        8599
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3931": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8582,
        8599
      ],
      "op": "AND",
      "path": "5"
    },
    "3932": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8582,
        8599
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3933": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8570,
        8580
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3934": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8570,
        8580
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3937": {
      "op": "DUP1"
    },
    "3938": {
      "op": "MLOAD"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3941": {
      "op": "PUSH2",
      "value": "0x2AA8"
    },
    "3944": {
      "op": "DUP4"
    },
    "3945": {
      "op": "CODECOPY"
    },
    "3946": {
      "op": "DUP2"
    },
    "3947": {
      "op": "MLOAD"
    },
    "3948": {
      "op": "SWAP2"
    },
    "3949": {
      "op": "MSTORE"
    },
    "3950": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8547,
        8637
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3951": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8547,
        8637
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3952": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8547,
        8637
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3953": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8547,
        8637
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3954": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8547,
        8637
      ],
      "op": "SUB",
      "path": "5"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3957": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8547,
        8637
      ],
      "op": "ADD",
      "path": "5"
    },
    "3958": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8547,
        8637
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3959": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8547,
        8637
      ],
      "op": "LOG3",
      "path": "5"
    },
    "3960": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8491,
        8648
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3961": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8661,
        8681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xC"
    },
    "3963": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8661,
        8681
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3970": {
      "op": "SHL"
    },
    "3971": {
      "op": "SUB"
    },
    "3972": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8661,
        8681
      ],
      "op": "AND",
      "path": "5"
    },
    "3973": {
      "branch": 118,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8661,
        8695
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3974": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8657,
        8820
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFE2"
    },
    "3977": {
      "branch": 118,
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8657,
        8820
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3978": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8751,
        8771
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 28,
      "value": "0xC"
    },
    "3980": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8751,
        8771
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3981": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8716,
        8809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3983": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8716,
        8809
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3984": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8716,
        8809
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3985": {
      "op": "DUP2"
    },
    "3986": {
      "op": "DUP2"
    },
    "3987": {
      "op": "MSTORE"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3990": {
      "op": "DUP2"
    },
    "3991": {
      "op": "DUP4"
    },
    "3992": {
      "op": "ADD"
    },
    "3993": {
      "op": "MSTORE"
    },
    "3994": {
      "op": "PUSH16",
      "value": "0x10D49151125517D4155490D21054D151"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "4013": {
      "op": "SHL"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4016": {
      "op": "DUP3"
    },
    "4017": {
      "op": "ADD"
    },
    "4018": {
      "op": "MSTORE"
    },
    "4019": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8793,
        8808
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4022": {
      "op": "DUP3"
    },
    "4023": {
      "op": "ADD"
    },
    "4024": {
      "op": "MSTORE"
    },
    "4025": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8716,
        8809
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4026": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8716,
        8809
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4033": {
      "op": "SHL"
    },
    "4034": {
      "op": "SUB"
    },
    "4035": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8751,
        8771
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4036": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8751,
        8771
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4037": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8751,
        8771
      ],
      "op": "AND",
      "path": "5"
    },
    "4038": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8751,
        8771
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4039": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8739,
        8749
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4040": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8739,
        8749
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4043": {
      "op": "DUP1"
    },
    "4044": {
      "op": "MLOAD"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4047": {
      "op": "PUSH2",
      "value": "0x2AA8"
    },
    "4050": {
      "op": "DUP4"
    },
    "4051": {
      "op": "CODECOPY"
    },
    "4052": {
      "op": "DUP2"
    },
    "4053": {
      "op": "MLOAD"
    },
    "4054": {
      "op": "SWAP2"
    },
    "4055": {
      "op": "MSTORE"
    },
    "4056": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8716,
        8809
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4057": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8716,
        8809
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4058": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8716,
        8809
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4059": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8716,
        8809
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4060": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8716,
        8809
      ],
      "op": "SUB",
      "path": "5"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4063": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8716,
        8809
      ],
      "op": "ADD",
      "path": "5"
    },
    "4064": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8716,
        8809
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4065": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8716,
        8809
      ],
      "op": "LOG3",
      "path": "5"
    },
    "4066": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        8657,
        8820
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4067": {
      "offset": [
        3136,
        3137
      ],
      "op": "POP",
      "path": "5"
    },
    "4068": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7061,
        8826
      ],
      "op": "POP",
      "path": "5"
    },
    "4069": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7061,
        8826
      ],
      "op": "POP",
      "path": "5"
    },
    "4070": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7061,
        8826
      ],
      "op": "POP",
      "path": "5"
    },
    "4071": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "offset": [
        7061,
        8826
      ],
      "op": "POP",
      "path": "5"
    },
    "4072": {
      "fn": "GreenHydrogenCredit.purchaseCredits",
      "jump": "o",
      "offset": [
        7061,
        8826
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4073": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4074": {
      "offset": [
        2283,
        2300
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xB"
    },
    "4076": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2283,
        2300
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4083": {
      "op": "SHL"
    },
    "4084": {
      "op": "SUB"
    },
    "4085": {
      "offset": [
        2283,
        2300
      ],
      "op": "AND",
      "path": "5"
    },
    "4086": {
      "offset": [
        2269,
        2279
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4087": {
      "offset": [
        2269,
        2300
      ],
      "op": "EQ",
      "path": "5"
    },
    "4088": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2269,
        2300
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4089": {
      "offset": [
        2269,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1025"
    },
    "4092": {
      "offset": [
        2269,
        2348
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4093": {
      "op": "POP"
    },
    "4094": {
      "offset": [
        2329,
        2348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4096": {
      "offset": [
        2314,
        2324
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4097": {
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4099": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2325
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4100": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2325
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4101": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4102": {
      "offset": [
        2304,
        2313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "4104": {
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4106": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4107": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4109": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2325
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4110": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2325
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4111": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2325
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4112": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4114": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2325
      ],
      "op": "AND",
      "path": "5"
    },
    "4115": {
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "4117": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4118": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2348
      ],
      "op": "GT",
      "path": "5"
    },
    "4119": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2348
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4120": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1023"
    },
    "4123": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4124": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1023"
    },
    "4127": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253E"
    },
    "4130": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "jump": "i",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4131": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4132": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2304,
        2348
      ],
      "op": "EQ",
      "path": "5"
    },
    "4133": {
      "offset": [
        2269,
        2348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4134": {
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1041"
    },
    "4137": {
      "offset": [
        2261,
        2392
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4138": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4140": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2261,
        2392
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4141": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4147": {
      "op": "SHL"
    },
    "4148": {
      "offset": [
        2261,
        2392
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4149": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2261,
        2392
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4150": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4152": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2261,
        2392
      ],
      "op": "ADD",
      "path": "5"
    },
    "4153": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "4156": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2261,
        2392
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4157": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2950"
    },
    "4160": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "jump": "i",
      "offset": [
        2261,
        2392
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4161": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        2261,
        2392
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4162": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4200,
        4217
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 29,
      "value": "0x1"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4170": {
      "op": "SHL"
    },
    "4171": {
      "op": "SUB"
    },
    "4172": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4173": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "AND",
      "path": "5"
    },
    "4174": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4176": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4177": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4178": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4179": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "4181": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4183": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4184": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4186": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4187": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4188": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4189": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4191": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4196
      ],
      "op": "AND",
      "path": "5"
    },
    "4192": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "4194": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4217
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4195": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4217
      ],
      "op": "GT",
      "path": "5"
    },
    "4196": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4217
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4197": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4217
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1070"
    },
    "4200": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4217
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4201": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4217
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1070"
    },
    "4204": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4217
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253E"
    },
    "4207": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "jump": "i",
      "offset": [
        4177,
        4217
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4208": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4217
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4209": {
      "branch": 119,
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4177,
        4217
      ],
      "op": "EQ",
      "path": "5"
    },
    "4210": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4169,
        4260
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CC"
    },
    "4213": {
      "branch": 119,
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4169,
        4260
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4214": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4169,
        4260
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4216": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4169,
        4260
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4217": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4223": {
      "op": "SHL"
    },
    "4224": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4169,
        4260
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4225": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4169,
        4260
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4228": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4169,
        4260
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4230": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4169,
        4260
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4231": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4169,
        4260
      ],
      "op": "ADD",
      "path": "5"
    },
    "4232": {
      "op": "MSTORE"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4237": {
      "op": "DUP3"
    },
    "4238": {
      "op": "ADD"
    },
    "4239": {
      "op": "MSTORE"
    },
    "4240": {
      "op": "PUSH32",
      "value": "0x41646472657373206D7573742062652072656769737465726564206173207072"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4275": {
      "op": "DUP3"
    },
    "4276": {
      "op": "ADD"
    },
    "4277": {
      "op": "MSTORE"
    },
    "4278": {
      "op": "PUSH6",
      "value": "0x37B23AB1B2B9"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "4287": {
      "op": "SHL"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4290": {
      "op": "DUP3"
    },
    "4291": {
      "op": "ADD"
    },
    "4292": {
      "op": "MSTORE"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4295": {
      "op": "ADD"
    },
    "4296": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4169,
        4260
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "4299": {
      "op": "JUMP"
    },
    "4300": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4169,
        4260
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4307": {
      "op": "SHL"
    },
    "4308": {
      "op": "SUB"
    },
    "4309": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 30
    },
    "4310": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "AND",
      "path": "5"
    },
    "4311": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4313": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4314": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4315": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4316": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4279
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "4318": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4320": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4321": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4322": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4323": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4325": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4326": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4327": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4328": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4289
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4329": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4311
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4330": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4311
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4331": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4311
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4332": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4311
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4333": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4311
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4336": {
      "op": "NOT"
    },
    "4337": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4311
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4338": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4311
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4339": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4311
      ],
      "op": "AND",
      "path": "5"
    },
    "4340": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4311
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4341": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4311
      ],
      "op": "OR",
      "path": "5"
    },
    "4342": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4311
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4343": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4270,
        4311
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4344": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4321,
        4349
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 31,
      "value": "0x3"
    },
    "4346": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4321,
        4349
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4347": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4321,
        4349
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4348": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4321,
        4349
      ],
      "op": "ADD",
      "path": "5"
    },
    "4349": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4321,
        4361
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4350": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4321,
        4361
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4351": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4321,
        4361
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4352": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4321,
        4361
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4353": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4321,
        4361
      ],
      "op": "AND",
      "path": "5"
    },
    "4354": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4321,
        4361
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4355": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4321,
        4361
      ],
      "op": "OR",
      "path": "5"
    },
    "4356": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4321,
        4361
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4357": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4321,
        4361
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4358": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4376,
        4414
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 32
    },
    "4359": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4376,
        4414
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4360": {
      "op": "SWAP2"
    },
    "4361": {
      "op": "DUP3"
    },
    "4362": {
      "op": "MSTORE"
    },
    "4363": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4376,
        4414
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xF8D2D47F1A3527C24D2E241F4634C1FEE251076C49FAE9B5530A36E77E0BD9D9"
    },
    "4396": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4376,
        4414
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4397": {
      "op": "ADD"
    },
    "4398": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4376,
        4414
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4400": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4376,
        4414
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4401": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4376,
        4414
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4402": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4376,
        4414
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4403": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4376,
        4414
      ],
      "op": "SUB",
      "path": "5"
    },
    "4404": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4376,
        4414
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4405": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4376,
        4414
      ],
      "op": "LOG2",
      "path": "5"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4412": {
      "op": "SHL"
    },
    "4413": {
      "op": "SUB"
    },
    "4414": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 33
    },
    "4415": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "AND",
      "path": "5"
    },
    "4416": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4452,
        4462
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4419": {
      "op": "DUP1"
    },
    "4420": {
      "op": "MLOAD"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4423": {
      "op": "PUSH2",
      "value": "0x2AA8"
    },
    "4426": {
      "op": "DUP4"
    },
    "4427": {
      "op": "CODECOPY"
    },
    "4428": {
      "op": "DUP2"
    },
    "4429": {
      "op": "MLOAD"
    },
    "4430": {
      "op": "SWAP2"
    },
    "4431": {
      "op": "MSTORE"
    },
    "4432": {
      "branch": 120,
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4483
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4433": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x117D"
    },
    "4436": {
      "branch": 120,
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4437": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4439": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4440": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4441": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4443": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "ADD",
      "path": "5"
    },
    "4444": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4446": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4447": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4448": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xB"
    },
    "4450": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4451": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4452": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4454": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "ADD",
      "path": "5"
    },
    "4455": {
      "op": "PUSH11",
      "value": "0x111150D154951251925151"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "4469": {
      "op": "SHL"
    },
    "4470": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4471": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4472": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "POP",
      "path": "5"
    },
    "4473": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A0"
    },
    "4476": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4477": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4478": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4480": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4481": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4482": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4484": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "ADD",
      "path": "5"
    },
    "4485": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4487": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4488": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4489": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "4491": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4492": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4493": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4495": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "ADD",
      "path": "5"
    },
    "4496": {
      "op": "PUSH9",
      "value": "0x10D154951251925151"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "4508": {
      "op": "SHL"
    },
    "4509": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4510": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4511": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "POP",
      "path": "5"
    },
    "4512": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4474,
        4513
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4513": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4515,
        4530
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "4514": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4516": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4517": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11AF"
    },
    "4520": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4521": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4522": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4523": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2997"
    },
    "4526": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "jump": "i",
      "offset": [
        4429,
        4531
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4527": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4528": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4530": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4531": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4532": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4533": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "SUB",
      "path": "5"
    },
    "4534": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4535": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4429,
        4531
      ],
      "op": "LOG3",
      "path": "5"
    },
    "4536": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "POP",
      "path": "5"
    },
    "4537": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "offset": [
        4078,
        4538
      ],
      "op": "POP",
      "path": "5"
    },
    "4538": {
      "fn": "GreenHydrogenCredit.certifyProducer",
      "jump": "o",
      "offset": [
        4078,
        4538
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4539": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6165,
        6661
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4540": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6229,
        6239
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 34
    },
    "4541": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6244,
        6257
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4543": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4544": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6240
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4545": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6240
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4546": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "4548": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4550": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6240
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4551": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4553": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6240
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4554": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6240
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4555": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6240
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4556": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4558": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6240
      ],
      "op": "AND",
      "path": "5"
    },
    "4559": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6257
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "4561": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6257
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4562": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6257
      ],
      "op": "GT",
      "path": "5"
    },
    "4563": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6257
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4564": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6257
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11DF"
    },
    "4567": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6257
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4568": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6257
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11DF"
    },
    "4571": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6257
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253E"
    },
    "4574": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "jump": "i",
      "offset": [
        6219,
        6257
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4575": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6257
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4576": {
      "branch": 121,
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6219,
        6257
      ],
      "op": "EQ",
      "path": "5"
    },
    "4577": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6211,
        6294
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11FC"
    },
    "4580": {
      "branch": 121,
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6211,
        6294
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4581": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6211,
        6294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4583": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6211,
        6294
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4584": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4590": {
      "op": "SHL"
    },
    "4591": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6211,
        6294
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4592": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6211,
        6294
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4593": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6211,
        6294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4595": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6211,
        6294
      ],
      "op": "ADD",
      "path": "5"
    },
    "4596": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6211,
        6294
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "4599": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6211,
        6294
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4600": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6211,
        6294
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2797"
    },
    "4603": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "jump": "i",
      "offset": [
        6211,
        6294
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4604": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6211,
        6294
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4605": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6314,
        6324
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 35
    },
    "4606": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4608": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6325
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4609": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6325
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4610": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4611": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "4613": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4615": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6325
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4616": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6325
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4617": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4618": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4620": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6325
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4621": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6325
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4622": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6325
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4623": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6344
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4624": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6344
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4627": {
      "op": "NOT"
    },
    "4628": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6344
      ],
      "op": "AND",
      "path": "5"
    },
    "4629": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6328,
        6344
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4631": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6344
      ],
      "op": "OR",
      "path": "5"
    },
    "4632": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6344
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4633": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6304,
        6344
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4634": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 36
    },
    "4635": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4636": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4637": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4638": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "ADD",
      "path": "5"
    },
    "4639": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4640": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4641": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "4643": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4644": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4645": {
      "op": "PUSH7",
      "value": "0x666163746F7279"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "4655": {
      "op": "SHL"
    },
    "4656": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4657": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4658": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "ADD",
      "path": "5"
    },
    "4659": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4660": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6379
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4661": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6379
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4662": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6379
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4663": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6367
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "4665": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4666": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6379
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4667": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6379
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4668": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4669": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6379
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4670": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4671": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1248"
    },
    "4674": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4675": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6379
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4676": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2813"
    },
    "4679": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "jump": "i",
      "offset": [
        6354,
        6391
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4680": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6354,
        6391
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4681": {
      "op": "POP"
    },
    "4682": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 37,
      "value": "0x40"
    },
    "4684": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4685": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4686": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "4688": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4689": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "ADD",
      "path": "5"
    },
    "4690": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4691": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4694": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4695": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4696": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4697": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4699": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4700": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4701": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "ADD",
      "path": "5"
    },
    "4702": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4703": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4704": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4705": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4706": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4707": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "ADD",
      "path": "5"
    },
    "4708": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4709": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4710": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4711": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "4713": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4714": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "ADD",
      "path": "5"
    },
    "4715": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4716": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4717": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4718": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "4720": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4721": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "ADD",
      "path": "5"
    },
    "4722": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4723": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4724": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4725": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6411,
        6421
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4726": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6422
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4727": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6422
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4728": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6422
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4729": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6410
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "4731": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6422
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4732": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6422
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4733": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6422
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4734": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6422
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4735": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6422
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4736": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6422
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4737": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6422
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4738": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4739": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4740": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4741": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4742": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4743": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4744": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6425,
        6586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4746": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4747": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "ADD",
      "path": "5"
    },
    "4748": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4749": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4750": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4751": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4752": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4755": {
      "op": "NOT"
    },
    "4756": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4757": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4758": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "AND",
      "path": "5"
    },
    "4759": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "OR",
      "path": "5"
    },
    "4760": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4761": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4762": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4763": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4764": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4766": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4767": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4768": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "ADD",
      "path": "5"
    },
    "4769": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4770": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4771": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4772": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4773": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4774": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4775": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4777": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4778": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "ADD",
      "path": "5"
    },
    "4779": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4780": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4781": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4782": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4783": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4784": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4785": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4786": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4787": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "AND",
      "path": "5"
    },
    "4788": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "OR",
      "path": "5"
    },
    "4789": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4790": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4791": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4792": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4793": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4795": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4796": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4797": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "ADD",
      "path": "5"
    },
    "4798": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4799": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4800": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4801": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4802": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6601,
        6654
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 38
    },
    "4803": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6601,
        6654
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4804": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6411,
        6421
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4805": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6411,
        6421
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4808": {
      "op": "DUP1"
    },
    "4809": {
      "op": "MLOAD"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4812": {
      "op": "PUSH2",
      "value": "0x2A88"
    },
    "4815": {
      "op": "DUP4"
    },
    "4816": {
      "op": "CODECOPY"
    },
    "4817": {
      "op": "DUP2"
    },
    "4818": {
      "op": "MLOAD"
    },
    "4819": {
      "op": "SWAP2"
    },
    "4820": {
      "op": "MSTORE"
    },
    "4821": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6601,
        6654
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4822": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6601,
        6654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA46"
    },
    "4825": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6601,
        6654
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4826": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6401,
        6586
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4827": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "offset": [
        6601,
        6654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29B9"
    },
    "4830": {
      "fn": "GreenHydrogenCredit.registerAsFactory",
      "jump": "i",
      "offset": [
        6601,
        6654
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4831": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8869,
        9170
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4832": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8933,
        8943
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 39
    },
    "4833": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8948,
        8961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4835": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8944
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4836": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8944
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4837": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8944
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4838": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8932
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "4840": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8944
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4842": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8944
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4843": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8944
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4845": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8944
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4846": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8944
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4847": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8944
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4848": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8944
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4850": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8944
      ],
      "op": "AND",
      "path": "5"
    },
    "4851": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "4853": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8961
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4854": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8961
      ],
      "op": "GT",
      "path": "5"
    },
    "4855": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8961
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4856": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8961
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1303"
    },
    "4859": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8961
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4860": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8961
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1303"
    },
    "4863": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8961
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253E"
    },
    "4866": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "jump": "i",
      "offset": [
        8923,
        8961
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4867": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8961
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4868": {
      "branch": 122,
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8923,
        8961
      ],
      "op": "EQ",
      "path": "5"
    },
    "4869": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8915,
        8998
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1320"
    },
    "4872": {
      "branch": 122,
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8915,
        8998
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4873": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8915,
        8998
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4875": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8915,
        8998
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4876": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4882": {
      "op": "SHL"
    },
    "4883": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8915,
        8998
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4884": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8915,
        8998
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4885": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8915,
        8998
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4887": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8915,
        8998
      ],
      "op": "ADD",
      "path": "5"
    },
    "4888": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8915,
        8998
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "4891": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8915,
        8998
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4892": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8915,
        8998
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2797"
    },
    "4895": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "jump": "i",
      "offset": [
        8915,
        8998
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4896": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        8915,
        8998
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4897": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9018,
        9028
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 40
    },
    "4898": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9029
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4900": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9029
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4901": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9029
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4902": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9029
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4903": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "4905": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9029
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4907": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9029
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4908": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9029
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4909": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9029
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4910": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9029
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4912": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9029
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4913": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9029
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4914": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9029
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4915": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9048
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4916": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9048
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4919": {
      "op": "NOT"
    },
    "4920": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9048
      ],
      "op": "AND",
      "path": "5"
    },
    "4921": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9032,
        9048
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "4923": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9048
      ],
      "op": "OR",
      "path": "5"
    },
    "4924": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9048
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4925": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9008,
        9048
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4926": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 41
    },
    "4927": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4928": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4929": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4930": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "ADD",
      "path": "5"
    },
    "4931": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4932": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4933": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "4935": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4936": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4937": {
      "op": "PUSH7",
      "value": "0x31B4BA34BD32B7"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "4947": {
      "op": "SHL"
    },
    "4948": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4949": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4950": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "ADD",
      "path": "5"
    },
    "4951": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4952": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9083
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4953": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9083
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4954": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9083
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4955": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9071
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "4957": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9083
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4958": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9083
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4959": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9083
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4960": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9083
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4961": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9083
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4962": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9083
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4963": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x136C"
    },
    "4966": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4967": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9083
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4968": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2813"
    },
    "4971": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "jump": "i",
      "offset": [
        9058,
        9095
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4972": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4973": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9058,
        9095
      ],
      "op": "POP",
      "path": "5"
    },
    "4974": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9123,
        9133
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 42
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4981": {
      "op": "SHL"
    },
    "4982": {
      "op": "SUB"
    },
    "4983": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9110,
        9163
      ],
      "op": "AND",
      "path": "5"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4986": {
      "op": "DUP1"
    },
    "4987": {
      "op": "MLOAD"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4990": {
      "op": "PUSH2",
      "value": "0x2A88"
    },
    "4993": {
      "op": "DUP4"
    },
    "4994": {
      "op": "CODECOPY"
    },
    "4995": {
      "op": "DUP2"
    },
    "4996": {
      "op": "MLOAD"
    },
    "4997": {
      "op": "SWAP2"
    },
    "4998": {
      "op": "MSTORE"
    },
    "4999": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9135,
        9151
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "5001": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9110,
        9163
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5003": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9110,
        9163
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5004": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9110,
        9163
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA46"
    },
    "5007": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9110,
        9163
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5008": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9110,
        9163
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5009": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "offset": [
        9110,
        9163
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29EA"
    },
    "5012": {
      "fn": "GreenHydrogenCredit.registerAsCitizen",
      "jump": "i",
      "offset": [
        9110,
        9163
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5013": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5014": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139D"
    },
    "5017": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2165"
    },
    "5020": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5021": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5022": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3269,
        3286
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 43,
      "value": "0xB"
    },
    "5024": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3269,
        3300
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5025": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3269,
        3300
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5032": {
      "op": "SHL"
    },
    "5033": {
      "op": "SUB"
    },
    "5034": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3269,
        3300
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5035": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3269,
        3300
      ],
      "op": "AND",
      "path": "5"
    },
    "5036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5042": {
      "op": "SHL"
    },
    "5043": {
      "op": "SUB"
    },
    "5044": {
      "op": "NOT"
    },
    "5045": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3269,
        3300
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5046": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3269,
        3300
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5047": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3269,
        3300
      ],
      "op": "AND",
      "path": "5"
    },
    "5048": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3269,
        3300
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5049": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3269,
        3300
      ],
      "op": "OR",
      "path": "5"
    },
    "5050": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3269,
        3300
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5051": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3269,
        3300
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5052": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3269,
        3300
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5055": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3332
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 44
    },
    "5056": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3332
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5057": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3332
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5058": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3319
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "5060": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3332
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5062": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3332
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5063": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3332
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5064": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3332
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5065": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3332
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5067": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3332
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5068": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3332
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5069": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3332
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5070": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3354
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5071": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3354
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5074": {
      "op": "NOT"
    },
    "5075": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3354
      ],
      "op": "AND",
      "path": "5"
    },
    "5076": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3335,
        3354
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5078": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3354
      ],
      "op": "OR",
      "path": "5"
    },
    "5079": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3354
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5080": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3310,
        3354
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5081": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 45
    },
    "5082": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5083": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5084": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5085": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "ADD",
      "path": "5"
    },
    "5086": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5087": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5088": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "5090": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5091": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5092": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5093": {
      "op": "PUSH10",
      "value": "0x19DBDD995C9B9B595B9D"
    },
    "5104": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "5106": {
      "op": "SHL"
    },
    "5107": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5108": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5109": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "ADD",
      "path": "5"
    },
    "5110": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5111": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3390
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "5112": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3390
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5113": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3390
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5114": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3390
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5115": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3390
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5116": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3390
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5117": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3390
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5118": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3390
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5119": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3390
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5120": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3390
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5121": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x140A"
    },
    "5124": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5125": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3390
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5126": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2813"
    },
    "5129": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "jump": "i",
      "offset": [
        3364,
        3405
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5130": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5131": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3364,
        3405
      ],
      "op": "POP",
      "path": "5"
    },
    "5132": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3433,
        3444
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 46
    },
    "5133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5139": {
      "op": "SHL"
    },
    "5140": {
      "op": "SUB"
    },
    "5141": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "AND",
      "path": "5"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5144": {
      "op": "DUP1"
    },
    "5145": {
      "op": "MLOAD"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5148": {
      "op": "PUSH2",
      "value": "0x2A88"
    },
    "5151": {
      "op": "DUP4"
    },
    "5152": {
      "op": "CODECOPY"
    },
    "5153": {
      "op": "DUP2"
    },
    "5154": {
      "op": "MLOAD"
    },
    "5155": {
      "op": "SWAP2"
    },
    "5156": {
      "op": "MSTORE"
    },
    "5157": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3446,
        3465
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5159": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5161": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5162": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1433"
    },
    "5165": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5166": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5167": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A1B"
    },
    "5170": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "jump": "i",
      "offset": [
        3420,
        3480
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5171": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5172": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5174": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5175": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5176": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5177": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "SUB",
      "path": "5"
    },
    "5178": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5179": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3420,
        3480
      ],
      "op": "LOG2",
      "path": "5"
    },
    "5180": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "offset": [
        3191,
        3487
      ],
      "op": "POP",
      "path": "5"
    },
    "5181": {
      "fn": "GreenHydrogenCredit.setGovernmentAddress",
      "jump": "o",
      "offset": [
        3191,
        3487
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5182": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5183": {
      "offset": [
        2283,
        2300
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xB"
    },
    "5185": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2283,
        2300
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5192": {
      "op": "SHL"
    },
    "5193": {
      "op": "SUB"
    },
    "5194": {
      "offset": [
        2283,
        2300
      ],
      "op": "AND",
      "path": "5"
    },
    "5195": {
      "offset": [
        2269,
        2279
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5196": {
      "offset": [
        2269,
        2300
      ],
      "op": "EQ",
      "path": "5"
    },
    "5197": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2269,
        2300
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5198": {
      "offset": [
        2269,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x147A"
    },
    "5201": {
      "offset": [
        2269,
        2348
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5202": {
      "op": "POP"
    },
    "5203": {
      "offset": [
        2329,
        2348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5205": {
      "offset": [
        2314,
        2324
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5206": {
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5208": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2325
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5209": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2325
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5210": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5211": {
      "offset": [
        2304,
        2313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "5213": {
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5215": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5216": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5218": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2325
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5219": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2325
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5220": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2325
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5221": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "5223": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2325
      ],
      "op": "AND",
      "path": "5"
    },
    "5224": {
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "5226": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5227": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2348
      ],
      "op": "GT",
      "path": "5"
    },
    "5228": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2348
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5229": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1478"
    },
    "5232": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5233": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1478"
    },
    "5236": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253E"
    },
    "5239": {
      "fn": "GreenHydrogenCredit.assignRole",
      "jump": "i",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5240": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5241": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2304,
        2348
      ],
      "op": "EQ",
      "path": "5"
    },
    "5242": {
      "offset": [
        2269,
        2348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5243": {
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1496"
    },
    "5246": {
      "offset": [
        2261,
        2392
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5247": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5249": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2261,
        2392
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5250": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5256": {
      "op": "SHL"
    },
    "5257": {
      "offset": [
        2261,
        2392
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5258": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2261,
        2392
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5259": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5261": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2261,
        2392
      ],
      "op": "ADD",
      "path": "5"
    },
    "5262": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "5265": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2261,
        2392
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5266": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2950"
    },
    "5269": {
      "fn": "GreenHydrogenCredit.assignRole",
      "jump": "i",
      "offset": [
        2261,
        2392
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5270": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        2261,
        2392
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5277": {
      "op": "SHL"
    },
    "5278": {
      "op": "SUB"
    },
    "5279": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3965
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 47
    },
    "5280": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3965
      ],
      "op": "AND",
      "path": "5"
    },
    "5281": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3965
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5283": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3965
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5284": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3965
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5285": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3965
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5286": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3959
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "5288": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3965
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5290": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3965
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5291": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3965
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5293": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3965
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5294": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3965
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5295": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5296": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5297": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3968,
        3972
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5298": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3968,
        3972
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5299": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3965
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5302": {
      "op": "NOT"
    },
    "5303": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "AND",
      "path": "5"
    },
    "5304": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5306": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3968,
        3972
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5307": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "5309": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5310": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "GT",
      "path": "5"
    },
    "5311": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5312": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14CB"
    },
    "5315": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5316": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14CB"
    },
    "5319": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253E"
    },
    "5322": {
      "fn": "GreenHydrogenCredit.assignRole",
      "jump": "i",
      "offset": [
        3950,
        3972
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5323": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5324": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "MUL",
      "path": "5"
    },
    "5325": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "OR",
      "path": "5"
    },
    "5326": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5327": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3950,
        3972
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5328": {
      "op": "POP"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5335": {
      "op": "SHL"
    },
    "5336": {
      "op": "SUB"
    },
    "5337": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4001
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 48
    },
    "5338": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4001
      ],
      "op": "AND",
      "path": "5"
    },
    "5339": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5341": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4001
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5342": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4001
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5343": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5344": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        3995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "5346": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5348": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4001
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5349": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5351": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4001
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5352": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4001
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5353": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4012
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14F2"
    },
    "5356": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4004,
        4012
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5357": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4001
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5358": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4012
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2813"
    },
    "5361": {
      "fn": "GreenHydrogenCredit.assignRole",
      "jump": "i",
      "offset": [
        3982,
        4012
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5362": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4012
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5363": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3982,
        4012
      ],
      "op": "POP",
      "path": "5"
    },
    "5364": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4040,
        4044
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 49
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5371": {
      "op": "SHL"
    },
    "5372": {
      "op": "SUB"
    },
    "5373": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "AND",
      "path": "5"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5376": {
      "op": "DUP1"
    },
    "5377": {
      "op": "MLOAD"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5380": {
      "op": "PUSH2",
      "value": "0x2A88"
    },
    "5383": {
      "op": "DUP4"
    },
    "5384": {
      "op": "CODECOPY"
    },
    "5385": {
      "op": "DUP2"
    },
    "5386": {
      "op": "MLOAD"
    },
    "5387": {
      "op": "SWAP2"
    },
    "5388": {
      "op": "MSTORE"
    },
    "5389": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4046,
        4050
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5390": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4052,
        4060
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5391": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5393": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5394": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x151C"
    },
    "5397": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5398": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5399": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5400": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2576"
    },
    "5403": {
      "fn": "GreenHydrogenCredit.assignRole",
      "jump": "i",
      "offset": [
        4027,
        4061
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5404": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5405": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5407": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5408": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5409": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5410": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "SUB",
      "path": "5"
    },
    "5411": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5412": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        4027,
        4061
      ],
      "op": "LOG2",
      "path": "5"
    },
    "5413": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "POP",
      "path": "5"
    },
    "5414": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "POP",
      "path": "5"
    },
    "5415": {
      "fn": "GreenHydrogenCredit.assignRole",
      "offset": [
        3845,
        4068
      ],
      "op": "POP",
      "path": "5"
    },
    "5416": {
      "fn": "GreenHydrogenCredit.assignRole",
      "jump": "o",
      "offset": [
        3845,
        4068
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5417": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5418": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1531"
    },
    "5421": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2165"
    },
    "5424": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5425": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5426": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 50,
      "value": "0x153B"
    },
    "5429": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5431": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21BF"
    },
    "5434": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5435": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5436": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5437": {
      "offset": [
        916,
        963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5438": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "5440": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5442": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5443": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5445": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5446": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5447": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5448": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5450": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5451": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5452": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5453": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5454": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1556"
    },
    "5457": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5458": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x275D"
    },
    "5461": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        916,
        963
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5462": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5463": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5464": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5466": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "ADD",
      "path": "5"
    },
    "5467": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5469": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5470": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5471": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DIV",
      "path": "5"
    },
    "5472": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "MUL",
      "path": "5"
    },
    "5473": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5475": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "ADD",
      "path": "5"
    },
    "5476": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5478": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5479": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5480": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5481": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "ADD",
      "path": "5"
    },
    "5482": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5484": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5485": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5486": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5487": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5488": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5489": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5490": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5491": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5492": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5494": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "ADD",
      "path": "5"
    },
    "5495": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5496": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5497": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5498": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1582"
    },
    "5501": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5502": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x275D"
    },
    "5505": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        916,
        963
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5506": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5507": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5508": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5509": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15CF"
    },
    "5512": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5513": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5514": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5516": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "LT",
      "path": "5"
    },
    "5517": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15A4"
    },
    "5520": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5521": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "5524": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5525": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5526": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5527": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DIV",
      "path": "5"
    },
    "5528": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "MUL",
      "path": "5"
    },
    "5529": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5530": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5531": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5532": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5534": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "ADD",
      "path": "5"
    },
    "5535": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5536": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15CF"
    },
    "5539": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5540": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5541": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5542": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "ADD",
      "path": "5"
    },
    "5543": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5544": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5545": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5547": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5548": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5550": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5552": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5553": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5554": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5555": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5556": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5557": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5558": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5559": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5560": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5562": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "ADD",
      "path": "5"
    },
    "5563": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5564": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5566": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "ADD",
      "path": "5"
    },
    "5567": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5568": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5569": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "GT",
      "path": "5"
    },
    "5570": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15B2"
    },
    "5573": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5574": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5575": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5576": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SUB",
      "path": "5"
    },
    "5577": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5579": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "AND",
      "path": "5"
    },
    "5580": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5581": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "ADD",
      "path": "5"
    },
    "5582": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5583": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5584": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "POP",
      "path": "5"
    },
    "5585": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "POP",
      "path": "5"
    },
    "5586": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "POP",
      "path": "5"
    },
    "5587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "POP",
      "path": "5"
    },
    "5588": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "POP",
      "path": "5"
    },
    "5589": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        916,
        963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5590": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        916,
        963
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5591": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5592": {
      "fn": "ERC20.symbol",
      "offset": [
        2421,
        2434
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "5594": {
      "fn": "ERC20.symbol",
      "offset": [
        2453,
        2460
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 51,
      "value": "0x4"
    },
    "5596": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5597": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5598": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x889"
    },
    "5601": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5602": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x275D"
    },
    "5605": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2446,
        2460
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5606": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9344,
        9464
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5607": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9406,
        9420
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x161C"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5612": {
      "op": "MLOAD"
    },
    "5613": {
      "op": "DUP1"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5616": {
      "op": "ADD"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5619": {
      "op": "MSTORE"
    },
    "5620": {
      "op": "DUP1"
    },
    "5621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5623": {
      "op": "DUP2"
    },
    "5624": {
      "op": "MSTORE"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5627": {
      "op": "ADD"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5630": {
      "op": "ISZERO"
    },
    "5631": {
      "op": "ISZERO"
    },
    "5632": {
      "op": "DUP2"
    },
    "5633": {
      "op": "MSTORE"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5636": {
      "op": "ADD"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5639": {
      "op": "DUP2"
    },
    "5640": {
      "op": "MSTORE"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5643": {
      "op": "ADD"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5646": {
      "op": "ISZERO"
    },
    "5647": {
      "op": "ISZERO"
    },
    "5648": {
      "op": "DUP2"
    },
    "5649": {
      "op": "MSTORE"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5652": {
      "op": "ADD"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5655": {
      "op": "DUP2"
    },
    "5656": {
      "op": "MSTORE"
    },
    "5657": {
      "op": "POP"
    },
    "5658": {
      "op": "SWAP1"
    },
    "5659": {
      "op": "JUMP"
    },
    "5660": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9406,
        9420
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5661": {
      "op": "POP"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5668": {
      "op": "SHL"
    },
    "5669": {
      "op": "SUB"
    },
    "5670": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "AND",
      "path": "5",
      "statement": 52
    },
    "5671": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5673": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5674": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5675": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5676": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9448
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "5678": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5680": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5681": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5682": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5683": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5685": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5686": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5687": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5688": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9439,
        9457
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5689": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5690": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5691": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "5693": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5694": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "ADD",
      "path": "5"
    },
    "5695": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5696": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5697": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5698": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5699": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5700": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5701": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5703": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5704": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "ADD",
      "path": "5"
    },
    "5705": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5706": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "5708": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5709": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5710": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "AND",
      "path": "5"
    },
    "5711": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5712": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5713": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5714": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5715": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "ADD",
      "path": "5"
    },
    "5716": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5717": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5718": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5719": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5720": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5722": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5723": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "ADD",
      "path": "5"
    },
    "5724": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5725": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5726": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5727": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "ADD",
      "path": "5"
    },
    "5728": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5729": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5730": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5731": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5732": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5734": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5735": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "ADD",
      "path": "5"
    },
    "5736": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5737": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5738": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5739": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "AND",
      "path": "5"
    },
    "5740": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5741": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5742": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5744": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5745": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "ADD",
      "path": "5"
    },
    "5746": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5747": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5749": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "ADD",
      "path": "5"
    },
    "5750": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5751": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "5753": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5754": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "ADD",
      "path": "5"
    },
    "5755": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5756": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "offset": [
        9432,
        9457
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5757": {
      "fn": "GreenHydrogenCredit.getFactoryInfo",
      "jump": "o",
      "offset": [
        9344,
        9464
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5758": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6671,
        7051
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5759": {
      "offset": [
        2945,
        2961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5761": {
      "offset": [
        2930,
        2940
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5762": {
      "offset": [
        2920,
        2941
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5764": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2941
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5765": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2941
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5766": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2941
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5767": {
      "offset": [
        2920,
        2929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "5769": {
      "offset": [
        2920,
        2941
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5771": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2941
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5772": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2941
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5774": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2941
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5775": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2941
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5776": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2941
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5777": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2941
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "5779": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2941
      ],
      "op": "AND",
      "path": "5"
    },
    "5780": {
      "offset": [
        2920,
        2961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "5782": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2961
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5783": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2961
      ],
      "op": "GT",
      "path": "5"
    },
    "5784": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2961
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5785": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2961
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16A4"
    },
    "5788": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2961
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5789": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2961
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16A4"
    },
    "5792": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2961
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253E"
    },
    "5795": {
      "fn": "GreenHydrogenCredit.setQuota",
      "jump": "i",
      "offset": [
        2920,
        2961
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5796": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2961
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5797": {
      "branch": 123,
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2920,
        2961
      ],
      "op": "EQ",
      "path": "5"
    },
    "5798": {
      "offset": [
        2912,
        3004
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1700"
    },
    "5801": {
      "branch": 123,
      "offset": [
        2912,
        3004
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5802": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2912,
        3004
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5804": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2912,
        3004
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5805": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5811": {
      "op": "SHL"
    },
    "5812": {
      "offset": [
        2912,
        3004
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5813": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2912,
        3004
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5816": {
      "offset": [
        2912,
        3004
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5818": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2912,
        3004
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5819": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        2912,
        3004
      ],
      "op": "ADD",
      "path": "5"
    },
    "5820": {
      "op": "MSTORE"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5823": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5825": {
      "op": "DUP3"
    },
    "5826": {
      "op": "ADD"
    },
    "5827": {
      "op": "MSTORE"
    },
    "5828": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920666163746F726965732063616E20706572666F726D207468697320"
    },
    "5861": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5863": {
      "op": "DUP3"
    },
    "5864": {
      "op": "ADD"
    },
    "5865": {
      "op": "MSTORE"
    },
    "5866": {
      "op": "PUSH6",
      "value": "0x30B1BA34B7B7"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "5875": {
      "op": "SHL"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5878": {
      "op": "DUP3"
    },
    "5879": {
      "op": "ADD"
    },
    "5880": {
      "op": "MSTORE"
    },
    "5881": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5883": {
      "op": "ADD"
    },
    "5884": {
      "offset": [
        2912,
        3004
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "5887": {
      "op": "JUMP"
    },
    "5888": {
      "offset": [
        2912,
        3004
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5889": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6749,
        6750
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 53,
      "value": "0x0"
    },
    "5891": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6741,
        6746
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5892": {
      "branch": 124,
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6741,
        6750
      ],
      "op": "GT",
      "path": "5"
    },
    "5893": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6733,
        6783
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1750"
    },
    "5896": {
      "branch": 124,
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6733,
        6783
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5897": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6733,
        6783
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5899": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6733,
        6783
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5900": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5906": {
      "op": "SHL"
    },
    "5907": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6733,
        6783
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5908": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6733,
        6783
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5911": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6733,
        6783
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5913": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6733,
        6783
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5914": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6733,
        6783
      ],
      "op": "ADD",
      "path": "5"
    },
    "5915": {
      "op": "MSTORE"
    },
    "5916": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5920": {
      "op": "DUP3"
    },
    "5921": {
      "op": "ADD"
    },
    "5922": {
      "op": "MSTORE"
    },
    "5923": {
      "op": "PUSH32",
      "value": "0x51756F7461206D7573742062652067726561746572207468616E203000000000"
    },
    "5956": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5958": {
      "op": "DUP3"
    },
    "5959": {
      "op": "ADD"
    },
    "5960": {
      "op": "MSTORE"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5963": {
      "op": "ADD"
    },
    "5964": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6733,
        6783
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "5967": {
      "op": "JUMP"
    },
    "5968": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6733,
        6783
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5969": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6803,
        6813
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 54
    },
    "5970": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5972": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6814
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5973": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6814
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5974": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6814
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5975": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6802
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "5977": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5979": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6814
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5980": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6814
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5981": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6814
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5982": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5984": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6814
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5985": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6814
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5986": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6814
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5987": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6814
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5988": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6828
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5989": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6828
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5990": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6793,
        6828
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5991": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6871,
        6875
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 55,
      "value": "0x1"
    },
    "5993": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6838,
        6868
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5994": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6838,
        6868
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5995": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6838,
        6868
      ],
      "op": "ADD",
      "path": "5"
    },
    "5996": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6838,
        6875
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5997": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6838,
        6875
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6000": {
      "op": "NOT"
    },
    "6001": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6838,
        6875
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6002": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6838,
        6875
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6003": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6838,
        6875
      ],
      "op": "AND",
      "path": "5"
    },
    "6004": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6838,
        6875
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6005": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6838,
        6875
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6006": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6838,
        6875
      ],
      "op": "OR",
      "path": "5"
    },
    "6007": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6838,
        6875
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6008": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6838,
        6875
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6009": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6922,
        6937
      ],
      "op": "TIMESTAMP",
      "path": "5",
      "statement": 56
    },
    "6010": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6885,
        6919
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6012": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6885,
        6919
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6013": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6885,
        6919
      ],
      "op": "ADD",
      "path": "5"
    },
    "6014": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6885,
        6937
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6015": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6885,
        6937
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6016": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6885,
        6937
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6017": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6947,
        6977
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 57,
      "value": "0x3"
    },
    "6019": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6947,
        6977
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6020": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6947,
        6977
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6021": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6947,
        6977
      ],
      "op": "ADD",
      "path": "5"
    },
    "6022": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6947,
        6985
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6023": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6947,
        6985
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6024": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6947,
        6985
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6025": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6947,
        6985
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6026": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6947,
        6985
      ],
      "op": "AND",
      "path": "5"
    },
    "6027": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6947,
        6985
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6028": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        6947,
        6985
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6029": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        7000,
        7044
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 58
    },
    "6030": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        7000,
        7044
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6031": {
      "op": "DUP6"
    },
    "6032": {
      "op": "DUP2"
    },
    "6033": {
      "op": "MSTORE"
    },
    "6034": {
      "op": "SWAP2"
    },
    "6035": {
      "op": "DUP3"
    },
    "6036": {
      "op": "ADD"
    },
    "6037": {
      "op": "MSTORE"
    },
    "6038": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        7000,
        7044
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x76555ACD4D6A60C38AF93F6AFADF981892E0CA4C57C35B1B117A8FF4ED30C7BD"
    },
    "6071": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        7000,
        7044
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6072": {
      "op": "ADD"
    },
    "6073": {
      "fn": "GreenHydrogenCredit.setQuota",
      "offset": [
        7000,
        7044
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1433"
    },
    "6076": {
      "op": "JUMP"
    },
    "6077": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6078": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6080": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "6081": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6689
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6082": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6766,
        6791
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17CB"
    },
    "6085": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6086": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6783,
        6790
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6087": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6766,
        6775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A41"
    },
    "6090": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6766,
        6791
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6091": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6766,
        6791
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6092": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6739,
        6791
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6093": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6739,
        6791
      ],
      "op": "POP",
      "path": "1"
    },
    "6094": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6829,
        6844
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 59
    },
    "6095": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6825
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6096": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "LT",
      "path": "1"
    },
    "6097": {
      "branch": 137,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6098": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x182B"
    },
    "6101": {
      "branch": 137,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6102": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6104": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6111": {
      "op": "SHL"
    },
    "6112": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6113": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6116": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6118": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6119": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "ADD",
      "path": "1"
    },
    "6120": {
      "op": "MSTORE"
    },
    "6121": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6125": {
      "op": "DUP3"
    },
    "6126": {
      "op": "ADD"
    },
    "6127": {
      "op": "MSTORE"
    },
    "6128": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "6161": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6163": {
      "op": "DUP3"
    },
    "6164": {
      "op": "ADD"
    },
    "6165": {
      "op": "MSTORE"
    },
    "6166": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "6172": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6174": {
      "op": "SHL"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6177": {
      "op": "DUP3"
    },
    "6178": {
      "op": "ADD"
    },
    "6179": {
      "op": "MSTORE"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6182": {
      "op": "ADD"
    },
    "6183": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x967"
    },
    "6186": {
      "op": "JUMP"
    },
    "6187": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6188": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6920,
        6980
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 60,
      "value": "0x1838"
    },
    "6191": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6929,
        6934
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6192": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6936,
        6943
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6193": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6964,
        6979
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6194": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6961
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6195": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6979
      ],
      "op": "SUB",
      "path": "1"
    },
    "6196": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6920,
        6928
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E7B"
    },
    "6199": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6920,
        6980
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6200": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6920,
        6980
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6201": {
      "op": "POP"
    },
    "6202": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7008,
        7012
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 61,
      "value": "0x1"
    },
    "6204": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7008,
        7012
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "6205": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "6206": {
      "op": "POP"
    },
    "6207": {
      "op": "POP"
    },
    "6208": {
      "op": "POP"
    },
    "6209": {
      "op": "POP"
    },
    "6210": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6211": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6212": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10226,
        10236
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6213": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10261,
        10265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6215": {
      "offset": [
        3087,
        3104
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6216": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6217": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6218": {
      "offset": [
        3087,
        3095
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "6220": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6222": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6223": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6225": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6226": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6227": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6228": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10261,
        10265
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6229": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10261,
        10265
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6230": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10226,
        10236
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6231": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6233": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "AND",
      "path": "5"
    },
    "6234": {
      "offset": [
        3086,
        3104
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6235": {
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1876"
    },
    "6238": {
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6239": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6241": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6248": {
      "op": "SHL"
    },
    "6249": {
      "offset": [
        3078,
        3126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6250": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6251": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6253": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "ADD",
      "path": "5"
    },
    "6254": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "6257": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6258": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2904"
    },
    "6261": {
      "fn": "GreenHydrogenCredit.transfer",
      "jump": "i",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6262": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6269": {
      "op": "SHL"
    },
    "6270": {
      "op": "SUB"
    },
    "6271": {
      "offset": [
        3087,
        3104
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6272": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "AND",
      "path": "5"
    },
    "6273": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6275": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6276": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6277": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6278": {
      "offset": [
        3087,
        3095
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "6280": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6282": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6283": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6285": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6286": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6287": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6288": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10248,
        10250
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6289": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10248,
        10250
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6290": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6292": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3087,
        3104
      ],
      "op": "AND",
      "path": "5"
    },
    "6293": {
      "offset": [
        3086,
        3104
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6294": {
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18B1"
    },
    "6297": {
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6298": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6300": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6301": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6307": {
      "op": "SHL"
    },
    "6308": {
      "offset": [
        3078,
        3126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6309": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6310": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6312": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "ADD",
      "path": "5"
    },
    "6313": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "6316": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6317": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2904"
    },
    "6320": {
      "fn": "GreenHydrogenCredit.transfer",
      "jump": "i",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6321": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6322": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10277,
        10288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6324": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10291,
        10317
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18BD"
    },
    "6327": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10306,
        10308
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6328": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10310,
        10316
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6329": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10291,
        10305
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2211"
    },
    "6332": {
      "fn": "GreenHydrogenCredit.transfer",
      "jump": "i",
      "offset": [
        10291,
        10317
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6333": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10291,
        10317
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6334": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10277,
        10317
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6335": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10277,
        10317
      ],
      "op": "POP",
      "path": "5"
    },
    "6336": {
      "branch": 125,
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10331,
        10337
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6337": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10327,
        10451
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6338": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10327,
        10451
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1916"
    },
    "6341": {
      "branch": 125,
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10327,
        10451
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6342": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10393,
        10410
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 62,
      "value": "0xB"
    },
    "6344": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10393,
        10410
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6345": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10358,
        10440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6347": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10358,
        10440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6348": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10358,
        10440
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6349": {
      "op": "DUP2"
    },
    "6350": {
      "op": "DUP2"
    },
    "6351": {
      "op": "MSTORE"
    },
    "6352": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "6354": {
      "op": "DUP2"
    },
    "6355": {
      "op": "DUP4"
    },
    "6356": {
      "op": "ADD"
    },
    "6357": {
      "op": "MSTORE"
    },
    "6358": {
      "op": "PUSH8",
      "value": "0x2A2920A729A322A9"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "6369": {
      "op": "SHL"
    },
    "6370": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6372": {
      "op": "DUP3"
    },
    "6373": {
      "op": "ADD"
    },
    "6374": {
      "op": "MSTORE"
    },
    "6375": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10424,
        10439
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6378": {
      "op": "DUP3"
    },
    "6379": {
      "op": "ADD"
    },
    "6380": {
      "op": "MSTORE"
    },
    "6381": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10358,
        10440
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6382": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10358,
        10440
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6389": {
      "op": "SHL"
    },
    "6390": {
      "op": "SUB"
    },
    "6391": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10393,
        10410
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6392": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10393,
        10410
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6393": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10393,
        10410
      ],
      "op": "AND",
      "path": "5"
    },
    "6394": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10393,
        10410
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6395": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10381,
        10391
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6396": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10381,
        10391
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6399": {
      "op": "DUP1"
    },
    "6400": {
      "op": "MLOAD"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6403": {
      "op": "PUSH2",
      "value": "0x2AA8"
    },
    "6406": {
      "op": "DUP4"
    },
    "6407": {
      "op": "CODECOPY"
    },
    "6408": {
      "op": "DUP2"
    },
    "6409": {
      "op": "MLOAD"
    },
    "6410": {
      "op": "SWAP2"
    },
    "6411": {
      "op": "MSTORE"
    },
    "6412": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10358,
        10440
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6413": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10358,
        10440
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6414": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10358,
        10440
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6415": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10358,
        10440
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6416": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10358,
        10440
      ],
      "op": "SUB",
      "path": "5"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6419": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10358,
        10440
      ],
      "op": "ADD",
      "path": "5"
    },
    "6420": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10358,
        10440
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6421": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10358,
        10440
      ],
      "op": "LOG3",
      "path": "5"
    },
    "6422": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10327,
        10451
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6423": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10467,
        10473
      ],
      "op": "SWAP6",
      "path": "5",
      "statement": 63
    },
    "6424": {
      "fn": "GreenHydrogenCredit.transfer",
      "offset": [
        10154,
        10480
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "6425": {
      "op": "POP"
    },
    "6426": {
      "op": "POP"
    },
    "6427": {
      "op": "POP"
    },
    "6428": {
      "op": "POP"
    },
    "6429": {
      "op": "POP"
    },
    "6430": {
      "fn": "GreenHydrogenCredit.transfer",
      "jump": "o",
      "offset": [
        10154,
        10480
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6431": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4548,
        4809
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6432": {
      "offset": [
        2283,
        2300
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xB"
    },
    "6434": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2283,
        2300
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6441": {
      "op": "SHL"
    },
    "6442": {
      "op": "SUB"
    },
    "6443": {
      "offset": [
        2283,
        2300
      ],
      "op": "AND",
      "path": "5"
    },
    "6444": {
      "offset": [
        2269,
        2279
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6445": {
      "offset": [
        2269,
        2300
      ],
      "op": "EQ",
      "path": "5"
    },
    "6446": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2269,
        2300
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6447": {
      "offset": [
        2269,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x195B"
    },
    "6450": {
      "offset": [
        2269,
        2348
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6451": {
      "op": "POP"
    },
    "6452": {
      "offset": [
        2329,
        2348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6454": {
      "offset": [
        2314,
        2324
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6455": {
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6457": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2325
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6458": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2325
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6459": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6460": {
      "offset": [
        2304,
        2313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "6462": {
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6464": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6465": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6467": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2325
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6468": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2325
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6469": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2325
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6470": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6472": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2325
      ],
      "op": "AND",
      "path": "5"
    },
    "6473": {
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "6475": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6476": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2348
      ],
      "op": "GT",
      "path": "5"
    },
    "6477": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2348
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6478": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1959"
    },
    "6481": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6482": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1959"
    },
    "6485": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253E"
    },
    "6488": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "jump": "i",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6489": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6490": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2304,
        2348
      ],
      "op": "EQ",
      "path": "5"
    },
    "6491": {
      "offset": [
        2269,
        2348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6492": {
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1977"
    },
    "6495": {
      "offset": [
        2261,
        2392
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6496": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6498": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2261,
        2392
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6499": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6503": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6505": {
      "op": "SHL"
    },
    "6506": {
      "offset": [
        2261,
        2392
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6507": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2261,
        2392
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6508": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6510": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2261,
        2392
      ],
      "op": "ADD",
      "path": "5"
    },
    "6511": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "6514": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2261,
        2392
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6515": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2950"
    },
    "6518": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "jump": "i",
      "offset": [
        2261,
        2392
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6519": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        2261,
        2392
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6526": {
      "op": "SHL"
    },
    "6527": {
      "op": "SUB"
    },
    "6528": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 64
    },
    "6529": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "AND",
      "path": "5"
    },
    "6530": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6532": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6533": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6534": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6535": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4641
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "6537": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6539": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6540": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6541": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6542": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6544": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6545": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6546": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6547": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4647
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6548": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4656
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6549": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4656
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6550": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6552": {
      "op": "NOT"
    },
    "6553": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4656
      ],
      "op": "AND",
      "path": "5"
    },
    "6554": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4656
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6555": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4656
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6556": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4656
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6557": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4656
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6558": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4656
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6559": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4656
      ],
      "op": "OR",
      "path": "5"
    },
    "6560": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4656
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6561": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4656
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6562": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4633,
        4656
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6563": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4671,
        4698
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 65
    },
    "6564": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4671,
        4698
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6565": {
      "op": "SWAP2"
    },
    "6566": {
      "op": "DUP3"
    },
    "6567": {
      "op": "MSTORE"
    },
    "6568": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4671,
        4698
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xA33E6B076D391E96626483B30E365719F79F1D6594AFF6587649FFD6C82ED7FA"
    },
    "6601": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4671,
        4698
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6602": {
      "op": "ADD"
    },
    "6603": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4671,
        4698
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6605": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4671,
        4698
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6606": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4671,
        4698
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6607": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4671,
        4698
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6608": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4671,
        4698
      ],
      "op": "SUB",
      "path": "5"
    },
    "6609": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4671,
        4698
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6610": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4671,
        4698
      ],
      "op": "LOG2",
      "path": "5"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6617": {
      "op": "SHL"
    },
    "6618": {
      "op": "SUB"
    },
    "6619": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4713,
        4802
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 66
    },
    "6620": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4713,
        4802
      ],
      "op": "AND",
      "path": "5"
    },
    "6621": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4736,
        4746
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6624": {
      "op": "DUP1"
    },
    "6625": {
      "op": "MLOAD"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6628": {
      "op": "PUSH2",
      "value": "0x2AA8"
    },
    "6631": {
      "op": "DUP4"
    },
    "6632": {
      "op": "CODECOPY"
    },
    "6633": {
      "op": "DUP2"
    },
    "6634": {
      "op": "MLOAD"
    },
    "6635": {
      "op": "SWAP2"
    },
    "6636": {
      "op": "MSTORE"
    },
    "6637": {
      "branch": 126,
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4760
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6638": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A17"
    },
    "6641": {
      "branch": 126,
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6642": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6644": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6645": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6646": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6648": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "ADD",
      "path": "5"
    },
    "6649": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6651": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6652": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6653": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "6655": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6656": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6657": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6659": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "ADD",
      "path": "5"
    },
    "6660": {
      "op": "PUSH8",
      "value": "0x2AA7232927AD22A7"
    },
    "6669": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "6671": {
      "op": "SHL"
    },
    "6672": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6673": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6674": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "POP",
      "path": "5"
    },
    "6675": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A0"
    },
    "6678": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6679": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6680": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6682": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6683": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6684": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6685": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6686": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "ADD",
      "path": "5"
    },
    "6687": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6688": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6689": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "6691": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6692": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6693": {
      "op": "PUSH6",
      "value": "0x232927AD22A7"
    },
    "6700": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "6702": {
      "op": "SHL"
    },
    "6703": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6705": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6706": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "ADD",
      "path": "5"
    },
    "6707": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6708": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4713,
        4802
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6709": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4713,
        4802
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6710": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4713,
        4802
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11AF"
    },
    "6713": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4713,
        4802
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6714": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4754,
        4784
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6715": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4786,
        4801
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "6716": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4786,
        4801
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6717": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "offset": [
        4713,
        4802
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2997"
    },
    "6720": {
      "fn": "GreenHydrogenCredit.setAccountFrozen",
      "jump": "i",
      "offset": [
        4713,
        4802
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6721": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6728": {
      "op": "SHL"
    },
    "6729": {
      "op": "SUB"
    },
    "6730": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 67
    },
    "6731": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6732": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "AND",
      "path": "1"
    },
    "6733": {
      "fn": "ERC20.allowance",
      "offset": [
        4063,
        4070
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6735": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6736": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6737": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6738": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6740": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6742": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6743": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6744": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6745": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6747": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6748": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6749": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6750": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "6751": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6752": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "6753": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "AND",
      "path": "1"
    },
    "6754": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6755": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6756": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6757": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6758": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6759": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6760": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6761": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6762": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6763": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6764": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6765": {
      "offset": [
        2705,
        2722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6767": {
      "offset": [
        2690,
        2700
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6768": {
      "offset": [
        2680,
        2701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6770": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2701
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6771": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2701
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6772": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2701
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6773": {
      "offset": [
        2680,
        2689
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "6775": {
      "offset": [
        2680,
        2701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6777": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2701
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6778": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6780": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2701
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6781": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2701
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6782": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2701
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6783": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6785": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2701
      ],
      "op": "AND",
      "path": "5"
    },
    "6786": {
      "offset": [
        2680,
        2722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "6788": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2722
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6789": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2722
      ],
      "op": "GT",
      "path": "5"
    },
    "6790": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2722
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6791": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A92"
    },
    "6794": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2722
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6795": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A92"
    },
    "6798": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2722
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253E"
    },
    "6801": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "jump": "i",
      "offset": [
        2680,
        2722
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6802": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2722
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6803": {
      "branch": 127,
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2722
      ],
      "op": "EQ",
      "path": "5"
    },
    "6804": {
      "offset": [
        2680,
        2757
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6805": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2757
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6806": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2757
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AAE"
    },
    "6809": {
      "branch": 127,
      "offset": [
        2680,
        2757
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6810": {
      "op": "POP"
    },
    "6811": {
      "offset": [
        2736,
        2746
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6812": {
      "offset": [
        2726,
        2747
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6814": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2726,
        2747
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6815": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2726,
        2747
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6816": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2726,
        2747
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6817": {
      "offset": [
        2726,
        2735
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "6819": {
      "offset": [
        2726,
        2747
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6821": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2726,
        2747
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6822": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2726,
        2747
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6824": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2726,
        2747
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6825": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2726,
        2747
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6826": {
      "offset": [
        2726,
        2757
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6827": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2726,
        2757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6829": {
      "branch": 128,
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2726,
        2757
      ],
      "op": "AND",
      "path": "5"
    },
    "6830": {
      "offset": [
        2680,
        2757
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6831": {
      "offset": [
        2680,
        2791
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6832": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2791
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6833": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2680,
        2791
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1ACC"
    },
    "6836": {
      "branch": 128,
      "offset": [
        2680,
        2791
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6837": {
      "op": "POP"
    },
    "6838": {
      "offset": [
        2771,
        2781
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6839": {
      "offset": [
        2761,
        2782
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6841": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2761,
        2782
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6842": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2761,
        2782
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6843": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2761,
        2782
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6844": {
      "offset": [
        2761,
        2770
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "6846": {
      "offset": [
        2761,
        2782
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6848": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2761,
        2782
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6849": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2761,
        2782
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6851": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2761,
        2782
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6852": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2761,
        2782
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6853": {
      "offset": [
        2761,
        2791
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6855": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2761,
        2791
      ],
      "op": "ADD",
      "path": "5"
    },
    "6856": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2761,
        2791
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6857": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2761,
        2791
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6859": {
      "branch": 129,
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2761,
        2791
      ],
      "op": "AND",
      "path": "5"
    },
    "6860": {
      "offset": [
        2680,
        2791
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6861": {
      "offset": [
        2672,
        2851
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B3E"
    },
    "6864": {
      "branch": 129,
      "offset": [
        2672,
        2851
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6865": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2672,
        2851
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6867": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2672,
        2851
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6868": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6872": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6874": {
      "op": "SHL"
    },
    "6875": {
      "offset": [
        2672,
        2851
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6876": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2672,
        2851
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6879": {
      "offset": [
        2672,
        2851
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6881": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2672,
        2851
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6882": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        2672,
        2851
      ],
      "op": "ADD",
      "path": "5"
    },
    "6883": {
      "op": "MSTORE"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6888": {
      "op": "DUP3"
    },
    "6889": {
      "op": "ADD"
    },
    "6890": {
      "op": "MSTORE"
    },
    "6891": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920636572746966696564206163746976652070726F64756365727320"
    },
    "6924": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6926": {
      "op": "DUP3"
    },
    "6927": {
      "op": "ADD"
    },
    "6928": {
      "op": "MSTORE"
    },
    "6929": {
      "op": "PUSH32",
      "value": "0x63616E20706572666F726D207468697320616374696F6E000000000000000000"
    },
    "6962": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6964": {
      "op": "DUP3"
    },
    "6965": {
      "op": "ADD"
    },
    "6966": {
      "op": "MSTORE"
    },
    "6967": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6969": {
      "op": "ADD"
    },
    "6970": {
      "offset": [
        2672,
        2851
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "6973": {
      "op": "JUMP"
    },
    "6974": {
      "offset": [
        2672,
        2851
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6975": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5416,
        5426
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6976": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6978": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6979": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6980": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6981": {
      "offset": [
        3087,
        3095
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "6983": {
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6985": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6986": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6988": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6989": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6990": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6991": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6993": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3087,
        3104
      ],
      "op": "AND",
      "path": "5"
    },
    "6994": {
      "offset": [
        3086,
        3104
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6995": {
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B6E"
    },
    "6998": {
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6999": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7001": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7008": {
      "op": "SHL"
    },
    "7009": {
      "offset": [
        3078,
        3126
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7010": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7011": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7013": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "ADD",
      "path": "5"
    },
    "7014": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "7017": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7018": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2904"
    },
    "7021": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "jump": "i",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7022": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        3078,
        3126
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7023": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5455,
        5456
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 68,
      "value": "0x0"
    },
    "7025": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5446,
        5452
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7026": {
      "branch": 130,
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5446,
        5456
      ],
      "op": "GT",
      "path": "5"
    },
    "7027": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5438,
        5490
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BBE"
    },
    "7030": {
      "branch": 130,
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5438,
        5490
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7031": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5438,
        5490
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7033": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5438,
        5490
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7034": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7038": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7040": {
      "op": "SHL"
    },
    "7041": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5438,
        5490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7042": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5438,
        5490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7045": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5438,
        5490
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7047": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5438,
        5490
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7048": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5438,
        5490
      ],
      "op": "ADD",
      "path": "5"
    },
    "7049": {
      "op": "MSTORE"
    },
    "7050": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7052": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7054": {
      "op": "DUP3"
    },
    "7055": {
      "op": "ADD"
    },
    "7056": {
      "op": "MSTORE"
    },
    "7057": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E2030000000"
    },
    "7090": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7092": {
      "op": "DUP3"
    },
    "7093": {
      "op": "ADD"
    },
    "7094": {
      "op": "MSTORE"
    },
    "7095": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7097": {
      "op": "ADD"
    },
    "7098": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5438,
        5490
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "7101": {
      "op": "JUMP"
    },
    "7102": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5438,
        5490
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7103": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5509,
        5534
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 69,
      "value": "0x1BC8"
    },
    "7106": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5515,
        5525
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7107": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5527,
        5533
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7108": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5509,
        5514
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x221F"
    },
    "7111": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "jump": "i",
      "offset": [
        5509,
        5534
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7112": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5509,
        5534
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7113": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5554,
        5564
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 70
    },
    "7114": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5565
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7116": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5565
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7117": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5565
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7118": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5565
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7119": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5553
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "7121": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5565
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7123": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5565
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7124": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5565
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7126": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5565
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7127": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5565
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7128": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5577
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "7130": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5577
      ],
      "op": "ADD",
      "path": "5"
    },
    "7131": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5587
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7132": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5587
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7133": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5581,
        5587
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7134": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5581,
        5587
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7135": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5565
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7136": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5587
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BEA"
    },
    "7139": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5587
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7140": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5581,
        5587
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7141": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5581,
        5587
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7142": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5587
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x292F"
    },
    "7145": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "jump": "i",
      "offset": [
        5544,
        5587
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7146": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5587
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7147": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5587
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7148": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5587
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7149": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5544,
        5587
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7150": {
      "op": "POP"
    },
    "7151": {
      "op": "POP"
    },
    "7152": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5607,
        5617
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 71
    },
    "7153": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5618
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7155": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5618
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7156": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5618
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7157": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5618
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7158": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5606
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "7160": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5618
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7162": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5618
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7163": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5618
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7164": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5618
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7165": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5618
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7167": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5618
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7168": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5618
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7169": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5618
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7170": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5618
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7171": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5638,
        5653
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "7172": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5635
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7174": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5635
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7175": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5635
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7176": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5635
      ],
      "op": "ADD",
      "path": "5"
    },
    "7177": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5653
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7178": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5653
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7179": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5597,
        5653
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7180": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5677,
        5726
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 72
    },
    "7181": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5677,
        5726
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7182": {
      "op": "DUP7"
    },
    "7183": {
      "op": "DUP2"
    },
    "7184": {
      "op": "MSTORE"
    },
    "7185": {
      "op": "SWAP2"
    },
    "7186": {
      "op": "DUP3"
    },
    "7187": {
      "op": "ADD"
    },
    "7188": {
      "op": "MSTORE"
    },
    "7189": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5677,
        5726
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xF8CDDF2EAF16AF6F7A9735A8BED50968CABCEF91B322EECBDE3805D8D8377DA4"
    },
    "7222": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5677,
        5726
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7223": {
      "op": "ADD"
    },
    "7224": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5677,
        5726
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7226": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5677,
        5726
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7227": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5677,
        5726
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7228": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5677,
        5726
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7229": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5677,
        5726
      ],
      "op": "SUB",
      "path": "5"
    },
    "7230": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5677,
        5726
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7231": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5677,
        5726
      ],
      "op": "LOG2",
      "path": "5"
    },
    "7232": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5797,
        5814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xB"
    },
    "7234": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5797,
        5814
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7241": {
      "op": "SHL"
    },
    "7242": {
      "op": "SUB"
    },
    "7243": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5797,
        5814
      ],
      "op": "AND",
      "path": "5"
    },
    "7244": {
      "branch": 131,
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5797,
        5828
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7245": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5793,
        5947
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CA6"
    },
    "7248": {
      "branch": 131,
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5793,
        5947
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7249": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5884,
        5901
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 73,
      "value": "0xB"
    },
    "7251": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5884,
        5901
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7252": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5849,
        5936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7254": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5849,
        5936
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7255": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5849,
        5936
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7256": {
      "op": "DUP2"
    },
    "7257": {
      "op": "DUP2"
    },
    "7258": {
      "op": "MSTORE"
    },
    "7259": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "7261": {
      "op": "DUP2"
    },
    "7262": {
      "op": "DUP4"
    },
    "7263": {
      "op": "ADD"
    },
    "7264": {
      "op": "MSTORE"
    },
    "7265": {
      "op": "PUSH13",
      "value": "0x10D49151125517D254D4D55151"
    },
    "7279": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "7281": {
      "op": "SHL"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7284": {
      "op": "DUP3"
    },
    "7285": {
      "op": "ADD"
    },
    "7286": {
      "op": "MSTORE"
    },
    "7287": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5920,
        5935
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "7288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7290": {
      "op": "DUP3"
    },
    "7291": {
      "op": "ADD"
    },
    "7292": {
      "op": "MSTORE"
    },
    "7293": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5849,
        5936
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7294": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5849,
        5936
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7301": {
      "op": "SHL"
    },
    "7302": {
      "op": "SUB"
    },
    "7303": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5884,
        5901
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7304": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5884,
        5901
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7305": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5884,
        5901
      ],
      "op": "AND",
      "path": "5"
    },
    "7306": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5884,
        5901
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7307": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5872,
        5882
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7308": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5872,
        5882
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7311": {
      "op": "DUP1"
    },
    "7312": {
      "op": "MLOAD"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7315": {
      "op": "PUSH2",
      "value": "0x2AA8"
    },
    "7318": {
      "op": "DUP4"
    },
    "7319": {
      "op": "CODECOPY"
    },
    "7320": {
      "op": "DUP2"
    },
    "7321": {
      "op": "MLOAD"
    },
    "7322": {
      "op": "SWAP2"
    },
    "7323": {
      "op": "MSTORE"
    },
    "7324": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5849,
        5936
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7325": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5849,
        5936
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7326": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5849,
        5936
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7327": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5849,
        5936
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7328": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5849,
        5936
      ],
      "op": "SUB",
      "path": "5"
    },
    "7329": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7331": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5849,
        5936
      ],
      "op": "ADD",
      "path": "5"
    },
    "7332": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5849,
        5936
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7333": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5849,
        5936
      ],
      "op": "LOG3",
      "path": "5"
    },
    "7334": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5793,
        5947
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7335": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5960,
        5980
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xC"
    },
    "7337": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5960,
        5980
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7344": {
      "op": "SHL"
    },
    "7345": {
      "op": "SUB"
    },
    "7346": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5960,
        5980
      ],
      "op": "AND",
      "path": "5"
    },
    "7347": {
      "branch": 132,
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5960,
        5994
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7348": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5956,
        6116
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D0C"
    },
    "7351": {
      "branch": 132,
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5956,
        6116
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7352": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6050,
        6070
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 74,
      "value": "0xC"
    },
    "7354": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6050,
        6070
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7355": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6015,
        6105
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7357": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6015,
        6105
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7358": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6015,
        6105
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7359": {
      "op": "DUP2"
    },
    "7360": {
      "op": "DUP2"
    },
    "7361": {
      "op": "MSTORE"
    },
    "7362": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "7364": {
      "op": "SWAP2"
    },
    "7365": {
      "op": "DUP2"
    },
    "7366": {
      "op": "ADD"
    },
    "7367": {
      "op": "SWAP2"
    },
    "7368": {
      "op": "SWAP1"
    },
    "7369": {
      "op": "SWAP2"
    },
    "7370": {
      "op": "MSTORE"
    },
    "7371": {
      "op": "PUSH13",
      "value": "0x10D49151125517D254D4D55151"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "7387": {
      "op": "SHL"
    },
    "7388": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7390": {
      "op": "DUP3"
    },
    "7391": {
      "op": "ADD"
    },
    "7392": {
      "op": "MSTORE"
    },
    "7393": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6089,
        6104
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "7394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7396": {
      "op": "DUP3"
    },
    "7397": {
      "op": "ADD"
    },
    "7398": {
      "op": "MSTORE"
    },
    "7399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7405": {
      "op": "SHL"
    },
    "7406": {
      "op": "SUB"
    },
    "7407": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6050,
        6070
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7408": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6050,
        6070
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7409": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6050,
        6070
      ],
      "op": "AND",
      "path": "5"
    },
    "7410": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6050,
        6070
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7411": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6038,
        6048
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7412": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6038,
        6048
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7415": {
      "op": "DUP1"
    },
    "7416": {
      "op": "MLOAD"
    },
    "7417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7419": {
      "op": "PUSH2",
      "value": "0x2AA8"
    },
    "7422": {
      "op": "DUP4"
    },
    "7423": {
      "op": "CODECOPY"
    },
    "7424": {
      "op": "DUP2"
    },
    "7425": {
      "op": "MLOAD"
    },
    "7426": {
      "op": "SWAP2"
    },
    "7427": {
      "op": "MSTORE"
    },
    "7428": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6015,
        6105
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7431": {
      "op": "ADD"
    },
    "7432": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        6015,
        6105
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11AF"
    },
    "7435": {
      "op": "JUMP"
    },
    "7436": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5956,
        6116
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7437": {
      "offset": [
        2861,
        2862
      ],
      "op": "POP",
      "path": "5"
    },
    "7438": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "POP",
      "path": "5"
    },
    "7439": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "jump": "o",
      "offset": [
        5339,
        6122
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7440": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3497,
        3835
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7441": {
      "offset": [
        2283,
        2300
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xB"
    },
    "7443": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2283,
        2300
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7450": {
      "op": "SHL"
    },
    "7451": {
      "op": "SUB"
    },
    "7452": {
      "offset": [
        2283,
        2300
      ],
      "op": "AND",
      "path": "5"
    },
    "7453": {
      "offset": [
        2269,
        2279
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7454": {
      "offset": [
        2269,
        2300
      ],
      "op": "EQ",
      "path": "5"
    },
    "7455": {
      "branch": 133,
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2269,
        2300
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7456": {
      "offset": [
        2269,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D4C"
    },
    "7459": {
      "branch": 133,
      "offset": [
        2269,
        2348
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7460": {
      "op": "POP"
    },
    "7461": {
      "offset": [
        2329,
        2348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "7463": {
      "offset": [
        2314,
        2324
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7464": {
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7466": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2325
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7467": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2325
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7468": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7469": {
      "offset": [
        2304,
        2313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "7471": {
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7473": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7474": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7476": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2325
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7477": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2325
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7478": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2325
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7479": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "7481": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2325
      ],
      "op": "AND",
      "path": "5"
    },
    "7482": {
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "7484": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7485": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2348
      ],
      "op": "GT",
      "path": "5"
    },
    "7486": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2348
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7487": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D4A"
    },
    "7490": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7491": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D4A"
    },
    "7494": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x253E"
    },
    "7497": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "jump": "i",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7498": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7499": {
      "branch": 134,
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2304,
        2348
      ],
      "op": "EQ",
      "path": "5"
    },
    "7500": {
      "offset": [
        2269,
        2348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7501": {
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D68"
    },
    "7504": {
      "branch": 134,
      "offset": [
        2261,
        2392
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7505": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7507": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2261,
        2392
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7508": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7512": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7514": {
      "op": "SHL"
    },
    "7515": {
      "offset": [
        2261,
        2392
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7516": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2261,
        2392
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7517": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7519": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2261,
        2392
      ],
      "op": "ADD",
      "path": "5"
    },
    "7520": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "7523": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2261,
        2392
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7524": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2261,
        2392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2950"
    },
    "7527": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "jump": "i",
      "offset": [
        2261,
        2392
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7528": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        2261,
        2392
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7529": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3586,
        3606
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 75,
      "value": "0xC"
    },
    "7531": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3586,
        3623
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7532": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3586,
        3623
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7539": {
      "op": "SHL"
    },
    "7540": {
      "op": "SUB"
    },
    "7541": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3586,
        3623
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7542": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3586,
        3623
      ],
      "op": "AND",
      "path": "5"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7549": {
      "op": "SHL"
    },
    "7550": {
      "op": "SUB"
    },
    "7551": {
      "op": "NOT"
    },
    "7552": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3586,
        3623
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7553": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3586,
        3623
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7554": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3586,
        3623
      ],
      "op": "AND",
      "path": "5"
    },
    "7555": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3586,
        3623
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7556": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3586,
        3623
      ],
      "op": "OR",
      "path": "5"
    },
    "7557": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3586,
        3623
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7558": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3586,
        3623
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7559": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3586,
        3623
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7562": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3658
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 76
    },
    "7563": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3658
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7564": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3658
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7565": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3642
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "7567": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3658
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7569": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3658
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7570": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3658
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7571": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3658
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7572": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3658
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7574": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3658
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7575": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3658
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7576": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3658
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7577": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3684
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7578": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3684
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7579": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7581": {
      "op": "NOT"
    },
    "7582": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3684
      ],
      "op": "AND",
      "path": "5"
    },
    "7583": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3661,
        3684
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7585": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3684
      ],
      "op": "OR",
      "path": "5"
    },
    "7586": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3684
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7587": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3633,
        3684
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7588": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 77
    },
    "7589": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7590": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7591": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7592": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "ADD",
      "path": "5"
    },
    "7593": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7594": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7595": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "7597": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7598": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7599": {
      "op": "PUSH14",
      "value": "0x706F6C6C7574696F6E5F626F6479"
    },
    "7614": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7616": {
      "op": "SHL"
    },
    "7617": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7618": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7619": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "ADD",
      "path": "5"
    },
    "7620": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7621": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3723
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7622": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3723
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7623": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7624": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "7626": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7627": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3723
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7628": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7629": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7630": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3723
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7631": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7632": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DD9"
    },
    "7635": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7636": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7637": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2813"
    },
    "7640": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "jump": "i",
      "offset": [
        3694,
        3742
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7641": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7642": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3694,
        3742
      ],
      "op": "POP",
      "path": "5"
    },
    "7643": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3770,
        3784
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 78
    },
    "7644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7650": {
      "op": "SHL"
    },
    "7651": {
      "op": "SUB"
    },
    "7652": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3757,
        3828
      ],
      "op": "AND",
      "path": "5"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7655": {
      "op": "DUP1"
    },
    "7656": {
      "op": "MLOAD"
    },
    "7657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7659": {
      "op": "PUSH2",
      "value": "0x2A88"
    },
    "7662": {
      "op": "DUP4"
    },
    "7663": {
      "op": "CODECOPY"
    },
    "7664": {
      "op": "DUP2"
    },
    "7665": {
      "op": "MLOAD"
    },
    "7666": {
      "op": "SWAP2"
    },
    "7667": {
      "op": "MSTORE"
    },
    "7668": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3786,
        3809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7670": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3757,
        3828
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7672": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3757,
        3828
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7673": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3757,
        3828
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1433"
    },
    "7676": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3757,
        3828
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7677": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3757,
        3828
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7678": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "offset": [
        3757,
        3828
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A4F"
    },
    "7681": {
      "fn": "GreenHydrogenCredit.setPollutionBodyAddress",
      "jump": "i",
      "offset": [
        3757,
        3828
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7682": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7683": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0A"
    },
    "7686": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2165"
    },
    "7689": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7690": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7697": {
      "op": "SHL"
    },
    "7698": {
      "op": "SUB"
    },
    "7699": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 79
    },
    "7700": {
      "branch": 146,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "7701": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6F"
    },
    "7704": {
      "branch": 146,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7705": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7707": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7708": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7714": {
      "op": "SHL"
    },
    "7715": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7716": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7719": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7721": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7722": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "7723": {
      "op": "MSTORE"
    },
    "7724": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7728": {
      "op": "DUP3"
    },
    "7729": {
      "op": "ADD"
    },
    "7730": {
      "op": "MSTORE"
    },
    "7731": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "7764": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7766": {
      "op": "DUP3"
    },
    "7767": {
      "op": "ADD"
    },
    "7768": {
      "op": "MSTORE"
    },
    "7769": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7778": {
      "op": "SHL"
    },
    "7779": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7781": {
      "op": "DUP3"
    },
    "7782": {
      "op": "ADD"
    },
    "7783": {
      "op": "MSTORE"
    },
    "7784": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7786": {
      "op": "ADD"
    },
    "7787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x967"
    },
    "7790": {
      "op": "JUMP"
    },
    "7791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7792": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 80,
      "value": "0x1E78"
    },
    "7795": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21BF"
    },
    "7799": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7801": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "7802": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7803": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7810": {
      "op": "SHL"
    },
    "7811": {
      "op": "SUB"
    },
    "7812": {
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 81
    },
    "7813": {
      "branch": 138,
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "AND",
      "path": "1"
    },
    "7814": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EDD"
    },
    "7817": {
      "branch": 138,
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7818": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7820": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7821": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7825": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7827": {
      "op": "SHL"
    },
    "7828": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7829": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7832": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7834": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7835": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "ADD",
      "path": "1"
    },
    "7836": {
      "op": "MSTORE"
    },
    "7837": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7839": {
      "op": "DUP1"
    },
    "7840": {
      "op": "DUP3"
    },
    "7841": {
      "op": "ADD"
    },
    "7842": {
      "op": "MSTORE"
    },
    "7843": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "7876": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7878": {
      "op": "DUP3"
    },
    "7879": {
      "op": "ADD"
    },
    "7880": {
      "op": "MSTORE"
    },
    "7881": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "7886": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7888": {
      "op": "SHL"
    },
    "7889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7891": {
      "op": "DUP3"
    },
    "7892": {
      "op": "ADD"
    },
    "7893": {
      "op": "MSTORE"
    },
    "7894": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7896": {
      "op": "ADD"
    },
    "7897": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x967"
    },
    "7900": {
      "op": "JUMP"
    },
    "7901": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7908": {
      "op": "SHL"
    },
    "7909": {
      "op": "SUB"
    },
    "7910": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 82
    },
    "7911": {
      "branch": 139,
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "AND",
      "path": "1"
    },
    "7912": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F3E"
    },
    "7915": {
      "branch": 139,
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7916": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7918": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7919": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7923": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7925": {
      "op": "SHL"
    },
    "7926": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7927": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7930": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7932": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7933": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "ADD",
      "path": "1"
    },
    "7934": {
      "op": "MSTORE"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7937": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7939": {
      "op": "DUP3"
    },
    "7940": {
      "op": "ADD"
    },
    "7941": {
      "op": "MSTORE"
    },
    "7942": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "7975": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7977": {
      "op": "DUP3"
    },
    "7978": {
      "op": "ADD"
    },
    "7979": {
      "op": "MSTORE"
    },
    "7980": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "7983": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7985": {
      "op": "SHL"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7988": {
      "op": "DUP3"
    },
    "7989": {
      "op": "ADD"
    },
    "7990": {
      "op": "MSTORE"
    },
    "7991": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7993": {
      "op": "ADD"
    },
    "7994": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x967"
    },
    "7997": {
      "op": "JUMP"
    },
    "7998": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8005": {
      "op": "SHL"
    },
    "8006": {
      "op": "SUB"
    },
    "8007": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 83
    },
    "8008": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8009": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "AND",
      "path": "1"
    },
    "8010": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8012": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8013": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8014": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8015": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10795
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8017": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8019": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8020": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8021": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8022": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8024": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8025": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8026": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8027": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "8028": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8029": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "AND",
      "path": "1"
    },
    "8030": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8031": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8032": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8033": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "8034": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8035": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8036": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8037": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8038": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8039": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8040": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10820
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8041": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10820
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8042": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10820
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8043": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 84
    },
    "8044": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8045": {
      "op": "DUP5"
    },
    "8046": {
      "op": "DUP2"
    },
    "8047": {
      "op": "MSTORE"
    },
    "8048": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "8081": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8082": {
      "op": "ADD"
    },
    "8083": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8085": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8086": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8087": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8088": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SUB",
      "path": "1"
    },
    "8089": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8090": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "LOG3",
      "path": "1"
    },
    "8091": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "POP",
      "path": "1"
    },
    "8092": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "POP",
      "path": "1"
    },
    "8093": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "POP",
      "path": "1"
    },
    "8094": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8095": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8096": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5317,
        5321
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8098": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "8099": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5373,
        5411
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 85,
      "value": "0x1FAD"
    },
    "8102": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5389,
        5393
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8103": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8104": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5404,
        5410
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8105": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5373,
        5388
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22EA"
    },
    "8108": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5373,
        5411
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8109": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5373,
        5411
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8110": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5421,
        5448
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 86,
      "value": "0x1838"
    },
    "8113": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5431,
        5435
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8114": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5437,
        5439
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8115": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8116": {
      "fn": "ERC20._transfer",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8123": {
      "op": "SHL"
    },
    "8124": {
      "op": "SUB"
    },
    "8125": {
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 87
    },
    "8126": {
      "branch": 140,
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "AND",
      "path": "1"
    },
    "8127": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2018"
    },
    "8130": {
      "branch": 140,
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8131": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8133": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8140": {
      "op": "SHL"
    },
    "8141": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8142": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8145": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8147": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8148": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "ADD",
      "path": "1"
    },
    "8149": {
      "op": "MSTORE"
    },
    "8150": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "8152": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8154": {
      "op": "DUP3"
    },
    "8155": {
      "op": "ADD"
    },
    "8156": {
      "op": "MSTORE"
    },
    "8157": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "8190": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8192": {
      "op": "DUP3"
    },
    "8193": {
      "op": "ADD"
    },
    "8194": {
      "op": "MSTORE"
    },
    "8195": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "8201": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "8203": {
      "op": "SHL"
    },
    "8204": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8206": {
      "op": "DUP3"
    },
    "8207": {
      "op": "ADD"
    },
    "8208": {
      "op": "MSTORE"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8211": {
      "op": "ADD"
    },
    "8212": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x967"
    },
    "8215": {
      "op": "JUMP"
    },
    "8216": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8223": {
      "op": "SHL"
    },
    "8224": {
      "op": "SUB"
    },
    "8225": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 88
    },
    "8226": {
      "branch": 141,
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "AND",
      "path": "1"
    },
    "8227": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x207A"
    },
    "8230": {
      "branch": 141,
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8231": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8233": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8234": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8238": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8240": {
      "op": "SHL"
    },
    "8241": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8242": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8245": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8247": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8248": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "ADD",
      "path": "1"
    },
    "8249": {
      "op": "MSTORE"
    },
    "8250": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8254": {
      "op": "DUP3"
    },
    "8255": {
      "op": "ADD"
    },
    "8256": {
      "op": "MSTORE"
    },
    "8257": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "8290": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8292": {
      "op": "DUP3"
    },
    "8293": {
      "op": "ADD"
    },
    "8294": {
      "op": "MSTORE"
    },
    "8295": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "8301": {
      "op": "SHL"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8304": {
      "op": "DUP3"
    },
    "8305": {
      "op": "ADD"
    },
    "8306": {
      "op": "MSTORE"
    },
    "8307": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8309": {
      "op": "ADD"
    },
    "8310": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x967"
    },
    "8313": {
      "op": "JUMP"
    },
    "8314": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8315": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7782
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 89,
      "value": "0x2085"
    },
    "8318": {
      "fn": "ERC20._transfer",
      "offset": [
        7765,
        7769
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8319": {
      "fn": "ERC20._transfer",
      "offset": [
        7771,
        7773
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8320": {
      "fn": "ERC20._transfer",
      "offset": [
        7775,
        7781
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8321": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7764
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x235E"
    },
    "8324": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7744,
        7782
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8325": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7782
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8332": {
      "op": "SHL"
    },
    "8333": {
      "op": "SUB"
    },
    "8334": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8335": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "AND",
      "path": "1"
    },
    "8336": {
      "fn": "ERC20._transfer",
      "offset": [
        7793,
        7812
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8338": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8339": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8340": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8341": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8343": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8344": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8345": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8346": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8348": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8349": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8350": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8351": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 90
    },
    "8352": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8353": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "LT",
      "path": "1"
    },
    "8354": {
      "branch": 142,
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8355": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20FD"
    },
    "8358": {
      "branch": 142,
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8359": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8361": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8362": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8366": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8368": {
      "op": "SHL"
    },
    "8369": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8370": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8373": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8375": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8376": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "ADD",
      "path": "1"
    },
    "8377": {
      "op": "MSTORE"
    },
    "8378": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8382": {
      "op": "DUP3"
    },
    "8383": {
      "op": "ADD"
    },
    "8384": {
      "op": "MSTORE"
    },
    "8385": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "8418": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8420": {
      "op": "DUP3"
    },
    "8421": {
      "op": "ADD"
    },
    "8422": {
      "op": "MSTORE"
    },
    "8423": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "8430": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8432": {
      "op": "SHL"
    },
    "8433": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8435": {
      "op": "DUP3"
    },
    "8436": {
      "op": "ADD"
    },
    "8437": {
      "op": "MSTORE"
    },
    "8438": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8440": {
      "op": "ADD"
    },
    "8441": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x967"
    },
    "8444": {
      "op": "JUMP"
    },
    "8445": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8452": {
      "op": "SHL"
    },
    "8453": {
      "op": "SUB"
    },
    "8454": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 91
    },
    "8455": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8456": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "AND",
      "path": "1"
    },
    "8457": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8459": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8460": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8461": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8462": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8464": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8465": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8466": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8467": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8469": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8470": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8471": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8472": {
      "fn": "ERC20._transfer",
      "offset": [
        7964,
        7984
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8473": {
      "fn": "ERC20._transfer",
      "offset": [
        7964,
        7984
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8474": {
      "fn": "ERC20._transfer",
      "offset": [
        7964,
        7984
      ],
      "op": "SUB",
      "path": "1"
    },
    "8475": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8476": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7984
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8477": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 92
    },
    "8478": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8479": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "AND",
      "path": "1"
    },
    "8480": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8481": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8482": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8483": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8484": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8485": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8486": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8487": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8488": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8489": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8490": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "ADD",
      "path": "1"
    },
    "8491": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8492": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8493": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 93
    },
    "8494": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8495": {
      "op": "DUP6"
    },
    "8496": {
      "op": "DUP2"
    },
    "8497": {
      "op": "MSTORE"
    },
    "8498": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8499": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8500": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8533": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8534": {
      "op": "ADD"
    },
    "8535": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8537": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8538": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8539": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8540": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SUB",
      "path": "1"
    },
    "8541": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8542": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "LOG3",
      "path": "1"
    },
    "8543": {
      "fn": "ERC20._transfer",
      "offset": [
        8247,
        8284
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 94
    },
    "8544": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        8291
      ],
      "op": "POP",
      "path": "1"
    },
    "8545": {
      "fn": "ERC20._transfer",
      "offset": [
        7473,
        8291
      ],
      "op": "POP",
      "path": "1"
    },
    "8546": {
      "fn": "ERC20._transfer",
      "offset": [
        7473,
        8291
      ],
      "op": "POP",
      "path": "1"
    },
    "8547": {
      "fn": "ERC20._transfer",
      "offset": [
        7473,
        8291
      ],
      "op": "POP",
      "path": "1"
    },
    "8548": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8549": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8550": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "8552": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8559": {
      "op": "SHL"
    },
    "8560": {
      "op": "SUB"
    },
    "8561": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "8562": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "8563": {
      "branch": 147,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 95
    },
    "8564": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153B"
    },
    "8567": {
      "branch": 147,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8568": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8570": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8571": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8575": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8577": {
      "op": "SHL"
    },
    "8578": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8579": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8582": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8584": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8585": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "8586": {
      "op": "DUP2"
    },
    "8587": {
      "op": "SWAP1"
    },
    "8588": {
      "op": "MSTORE"
    },
    "8589": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8591": {
      "op": "DUP3"
    },
    "8592": {
      "op": "ADD"
    },
    "8593": {
      "op": "MSTORE"
    },
    "8594": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "8627": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8629": {
      "op": "DUP3"
    },
    "8630": {
      "op": "ADD"
    },
    "8631": {
      "op": "MSTORE"
    },
    "8632": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8634": {
      "op": "ADD"
    },
    "8635": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x967"
    },
    "8638": {
      "op": "JUMP"
    },
    "8639": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8640": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "8642": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8643": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8650": {
      "op": "SHL"
    },
    "8651": {
      "op": "SUB"
    },
    "8652": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 96
    },
    "8653": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8654": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8661": {
      "op": "SHL"
    },
    "8662": {
      "op": "SUB"
    },
    "8663": {
      "op": "NOT"
    },
    "8664": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8665": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "8666": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8667": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "8668": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8669": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8670": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8671": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 97,
      "value": "0x40"
    },
    "8673": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8674": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8675": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "8676": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8677": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8678": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8679": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8680": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "8713": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8714": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8716": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8717": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8718": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "8719": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "8720": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8721": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8722": {
      "fn": "ERC20.transfer",
      "offset": [
        3806,
        3810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8724": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "8725": {
      "fn": "ERC20.transfer",
      "offset": [
        3860,
        3888
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 98,
      "value": "0x91A"
    },
    "8728": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8729": {
      "fn": "ERC20.transfer",
      "offset": [
        3877,
        3879
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8730": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8731": {
      "fn": "ERC20.transfer",
      "offset": [
        3860,
        3869
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FB4"
    },
    "8734": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3860,
        3888
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8735": {
      "fn": "ERC20._mint",
      "offset": [
        8567,
        9102
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8742": {
      "op": "SHL"
    },
    "8743": {
      "op": "SUB"
    },
    "8744": {
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 99
    },
    "8745": {
      "branch": 143,
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "AND",
      "path": "1"
    },
    "8746": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2275"
    },
    "8749": {
      "branch": 143,
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8750": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8752": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8753": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8757": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8759": {
      "op": "SHL"
    },
    "8760": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8761": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8764": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8766": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8767": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "ADD",
      "path": "1"
    },
    "8768": {
      "op": "MSTORE"
    },
    "8769": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8773": {
      "op": "DUP3"
    },
    "8774": {
      "op": "ADD"
    },
    "8775": {
      "op": "MSTORE"
    },
    "8776": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "8809": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8811": {
      "op": "DUP3"
    },
    "8812": {
      "op": "ADD"
    },
    "8813": {
      "op": "MSTORE"
    },
    "8814": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8816": {
      "op": "ADD"
    },
    "8817": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x967"
    },
    "8820": {
      "op": "JUMP"
    },
    "8821": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8707
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8822": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8767
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 100,
      "value": "0x2281"
    },
    "8825": {
      "fn": "ERC20._mint",
      "offset": [
        8747,
        8748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8827": {
      "fn": "ERC20._mint",
      "offset": [
        8751,
        8758
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8828": {
      "fn": "ERC20._mint",
      "offset": [
        8760,
        8766
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8829": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8738
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x235E"
    },
    "8832": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8718,
        8767
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8833": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8767
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8834": {
      "fn": "ERC20._mint",
      "offset": [
        8794,
        8800
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 101
    },
    "8835": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "8837": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8839": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8840": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8841": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8842": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2293"
    },
    "8845": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8846": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8847": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x292F"
    },
    "8850": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8851": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8852": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8853": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8854": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8855": {
      "op": "POP"
    },
    "8856": {
      "op": "POP"
    },
    "8857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8863": {
      "op": "SHL"
    },
    "8864": {
      "op": "SUB"
    },
    "8865": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 102
    },
    "8866": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "AND",
      "path": "1"
    },
    "8867": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8869": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8870": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8871": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8872": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8874": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8875": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8876": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8877": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8879": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8880": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8881": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8964
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8882": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8974
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8883": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8974
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8884": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8974
      ],
      "op": "DUP7",
      "path": "1"
    },
    "8885": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8974
      ],
      "op": "ADD",
      "path": "1"
    },
    "8886": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8974
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8887": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8974
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8888": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 103
    },
    "8889": {
      "op": "DUP5"
    },
    "8890": {
      "op": "DUP2"
    },
    "8891": {
      "op": "MSTORE"
    },
    "8892": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8925": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8926": {
      "op": "ADD"
    },
    "8927": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8929": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8930": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8931": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8932": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "SUB",
      "path": "1"
    },
    "8933": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8934": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "LOG3",
      "path": "1"
    },
    "8935": {
      "offset": [
        2861,
        2862
      ],
      "op": "POP",
      "path": "5"
    },
    "8936": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "offset": [
        5339,
        6122
      ],
      "op": "POP",
      "path": "5"
    },
    "8937": {
      "fn": "GreenHydrogenCredit.issueCredits",
      "jump": "o",
      "offset": [
        5339,
        6122
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8938": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11155,
        11596
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8939": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11285,
        11309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8941": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11312,
        11337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22F6"
    },
    "8944": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11322,
        11327
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8945": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11329,
        11336
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8946": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11312,
        11321
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A41"
    },
    "8949": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11312,
        11337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8950": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11312,
        11337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8951": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11285,
        11337
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8952": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11285,
        11337
      ],
      "op": "POP",
      "path": "1"
    },
    "8953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8955": {
      "op": "NOT"
    },
    "8956": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11367
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8957": {
      "branch": 144,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11388
      ],
      "op": "EQ",
      "path": "1"
    },
    "8958": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x215F"
    },
    "8961": {
      "branch": 144,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8962": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11432,
        11438
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 104
    },
    "8963": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8964": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "LT",
      "path": "1"
    },
    "8965": {
      "branch": 145,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8966": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2351"
    },
    "8969": {
      "branch": 145,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8970": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8972": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8973": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8977": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8979": {
      "op": "SHL"
    },
    "8980": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8981": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8984": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8986": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8987": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "ADD",
      "path": "1"
    },
    "8988": {
      "op": "MSTORE"
    },
    "8989": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "8991": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8993": {
      "op": "DUP3"
    },
    "8994": {
      "op": "ADD"
    },
    "8995": {
      "op": "MSTORE"
    },
    "8996": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9031": {
      "op": "DUP3"
    },
    "9032": {
      "op": "ADD"
    },
    "9033": {
      "op": "MSTORE"
    },
    "9034": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9036": {
      "op": "ADD"
    },
    "9037": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x967"
    },
    "9040": {
      "op": "JUMP"
    },
    "9041": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9042": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11514,
        11565
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 105,
      "value": "0x215F"
    },
    "9045": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11523,
        11528
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9046": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11530,
        11537
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9047": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11558,
        11564
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9048": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11555
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9049": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "SUB",
      "path": "1"
    },
    "9050": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11514,
        11522
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E7B"
    },
    "9053": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11514,
        11565
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9054": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9786,
        10076
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9061": {
      "op": "SHL"
    },
    "9062": {
      "op": "SUB"
    },
    "9063": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 106
    },
    "9064": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "AND",
      "path": "5"
    },
    "9065": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9067": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9068": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9069": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9070": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9903
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "9072": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9074": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9075": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9077": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9078": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9079": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9080": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "9082": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9895,
        9909
      ],
      "op": "AND",
      "path": "5"
    },
    "9083": {
      "branch": 135,
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9894,
        9909
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9084": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9886,
        9945
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23C7"
    },
    "9087": {
      "branch": 135,
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9886,
        9945
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9088": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9886,
        9945
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9090": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9886,
        9945
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9091": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9095": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9097": {
      "op": "SHL"
    },
    "9098": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9886,
        9945
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9099": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9886,
        9945
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9102": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9886,
        9945
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9104": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9886,
        9945
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9105": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9886,
        9945
      ],
      "op": "ADD",
      "path": "5"
    },
    "9106": {
      "op": "MSTORE"
    },
    "9107": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9111": {
      "op": "DUP3"
    },
    "9112": {
      "op": "ADD"
    },
    "9113": {
      "op": "MSTORE"
    },
    "9114": {
      "op": "PUSH32",
      "value": "0x45524332303A2073656E646572206163636F756E742069732066726F7A656E00"
    },
    "9147": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9149": {
      "op": "DUP3"
    },
    "9150": {
      "op": "ADD"
    },
    "9151": {
      "op": "MSTORE"
    },
    "9152": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9154": {
      "op": "ADD"
    },
    "9155": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9886,
        9945
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "9158": {
      "op": "JUMP"
    },
    "9159": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9886,
        9945
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9166": {
      "op": "SHL"
    },
    "9167": {
      "op": "SUB"
    },
    "9168": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 107
    },
    "9169": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "AND",
      "path": "5"
    },
    "9170": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9172": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9173": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9174": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9175": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9972
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "9177": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9179": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9180": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9182": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9183": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9184": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9185": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "9187": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9964,
        9976
      ],
      "op": "AND",
      "path": "5"
    },
    "9188": {
      "branch": 136,
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9963,
        9976
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9189": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9955,
        10015
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x243B"
    },
    "9192": {
      "branch": 136,
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9955,
        10015
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9193": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9955,
        10015
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9195": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9955,
        10015
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9196": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9202": {
      "op": "SHL"
    },
    "9203": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9955,
        10015
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9204": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9955,
        10015
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9207": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9955,
        10015
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9209": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9955,
        10015
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9210": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9955,
        10015
      ],
      "op": "ADD",
      "path": "5"
    },
    "9211": {
      "op": "MSTORE"
    },
    "9212": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9214": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9216": {
      "op": "DUP3"
    },
    "9217": {
      "op": "ADD"
    },
    "9218": {
      "op": "MSTORE"
    },
    "9219": {
      "op": "PUSH32",
      "value": "0x45524332303A20726563697069656E74206163636F756E742069732066726F7A"
    },
    "9252": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9254": {
      "op": "DUP3"
    },
    "9255": {
      "op": "ADD"
    },
    "9256": {
      "op": "MSTORE"
    },
    "9257": {
      "op": "PUSH2",
      "value": "0x32B7"
    },
    "9260": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "9262": {
      "op": "SHL"
    },
    "9263": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9265": {
      "op": "DUP3"
    },
    "9266": {
      "op": "ADD"
    },
    "9267": {
      "op": "MSTORE"
    },
    "9268": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9270": {
      "op": "ADD"
    },
    "9271": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9955,
        10015
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "9274": {
      "op": "JUMP"
    },
    "9275": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9955,
        10015
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9276": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9786,
        10076
      ],
      "op": "POP",
      "path": "5"
    },
    "9277": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9786,
        10076
      ],
      "op": "POP",
      "path": "5"
    },
    "9278": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "offset": [
        9786,
        10076
      ],
      "op": "POP",
      "path": "5"
    },
    "9279": {
      "fn": "GreenHydrogenCredit._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        9786,
        10076
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9280": {
      "op": "JUMPDEST"
    },
    "9281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9283": {
      "op": "DUP2"
    },
    "9284": {
      "op": "MLOAD"
    },
    "9285": {
      "op": "DUP1"
    },
    "9286": {
      "op": "DUP5"
    },
    "9287": {
      "op": "MSTORE"
    },
    "9288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9290": {
      "op": "JUMPDEST"
    },
    "9291": {
      "op": "DUP2"
    },
    "9292": {
      "op": "DUP2"
    },
    "9293": {
      "op": "LT"
    },
    "9294": {
      "op": "ISZERO"
    },
    "9295": {
      "op": "PUSH2",
      "value": "0x2466"
    },
    "9298": {
      "op": "JUMPI"
    },
    "9299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9301": {
      "op": "DUP2"
    },
    "9302": {
      "op": "DUP6"
    },
    "9303": {
      "op": "ADD"
    },
    "9304": {
      "op": "DUP2"
    },
    "9305": {
      "op": "ADD"
    },
    "9306": {
      "op": "MLOAD"
    },
    "9307": {
      "op": "DUP7"
    },
    "9308": {
      "op": "DUP4"
    },
    "9309": {
      "op": "ADD"
    },
    "9310": {
      "op": "DUP3"
    },
    "9311": {
      "op": "ADD"
    },
    "9312": {
      "op": "MSTORE"
    },
    "9313": {
      "op": "ADD"
    },
    "9314": {
      "op": "PUSH2",
      "value": "0x244A"
    },
    "9317": {
      "op": "JUMP"
    },
    "9318": {
      "op": "JUMPDEST"
    },
    "9319": {
      "op": "POP"
    },
    "9320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9324": {
      "op": "DUP3"
    },
    "9325": {
      "op": "DUP7"
    },
    "9326": {
      "op": "ADD"
    },
    "9327": {
      "op": "ADD"
    },
    "9328": {
      "op": "MSTORE"
    },
    "9329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9331": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9333": {
      "op": "NOT"
    },
    "9334": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9336": {
      "op": "DUP4"
    },
    "9337": {
      "op": "ADD"
    },
    "9338": {
      "op": "AND"
    },
    "9339": {
      "op": "DUP6"
    },
    "9340": {
      "op": "ADD"
    },
    "9341": {
      "op": "ADD"
    },
    "9342": {
      "op": "SWAP2"
    },
    "9343": {
      "op": "POP"
    },
    "9344": {
      "op": "POP"
    },
    "9345": {
      "op": "SWAP3"
    },
    "9346": {
      "op": "SWAP2"
    },
    "9347": {
      "op": "POP"
    },
    "9348": {
      "op": "POP"
    },
    "9349": {
      "jump": "o",
      "op": "JUMP"
    },
    "9350": {
      "op": "JUMPDEST"
    },
    "9351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9353": {
      "op": "DUP2"
    },
    "9354": {
      "op": "MSTORE"
    },
    "9355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9357": {
      "op": "PUSH2",
      "value": "0x2499"
    },
    "9360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9362": {
      "op": "DUP4"
    },
    "9363": {
      "op": "ADD"
    },
    "9364": {
      "op": "DUP5"
    },
    "9365": {
      "op": "PUSH2",
      "value": "0x2440"
    },
    "9368": {
      "jump": "i",
      "op": "JUMP"
    },
    "9369": {
      "op": "JUMPDEST"
    },
    "9370": {
      "op": "SWAP4"
    },
    "9371": {
      "op": "SWAP3"
    },
    "9372": {
      "op": "POP"
    },
    "9373": {
      "op": "POP"
    },
    "9374": {
      "op": "POP"
    },
    "9375": {
      "jump": "o",
      "op": "JUMP"
    },
    "9376": {
      "op": "JUMPDEST"
    },
    "9377": {
      "op": "DUP1"
    },
    "9378": {
      "op": "CALLDATALOAD"
    },
    "9379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9385": {
      "op": "SHL"
    },
    "9386": {
      "op": "SUB"
    },
    "9387": {
      "op": "DUP2"
    },
    "9388": {
      "op": "AND"
    },
    "9389": {
      "op": "DUP2"
    },
    "9390": {
      "op": "EQ"
    },
    "9391": {
      "op": "PUSH2",
      "value": "0x24B7"
    },
    "9394": {
      "op": "JUMPI"
    },
    "9395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9397": {
      "op": "DUP1"
    },
    "9398": {
      "op": "REVERT"
    },
    "9399": {
      "op": "JUMPDEST"
    },
    "9400": {
      "op": "SWAP2"
    },
    "9401": {
      "op": "SWAP1"
    },
    "9402": {
      "op": "POP"
    },
    "9403": {
      "jump": "o",
      "op": "JUMP"
    },
    "9404": {
      "op": "JUMPDEST"
    },
    "9405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9407": {
      "op": "DUP1"
    },
    "9408": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9410": {
      "op": "DUP4"
    },
    "9411": {
      "op": "DUP6"
    },
    "9412": {
      "op": "SUB"
    },
    "9413": {
      "op": "SLT"
    },
    "9414": {
      "op": "ISZERO"
    },
    "9415": {
      "op": "PUSH2",
      "value": "0x24CF"
    },
    "9418": {
      "op": "JUMPI"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9421": {
      "op": "DUP1"
    },
    "9422": {
      "op": "REVERT"
    },
    "9423": {
      "op": "JUMPDEST"
    },
    "9424": {
      "op": "PUSH2",
      "value": "0x24D8"
    },
    "9427": {
      "op": "DUP4"
    },
    "9428": {
      "op": "PUSH2",
      "value": "0x24A0"
    },
    "9431": {
      "jump": "i",
      "op": "JUMP"
    },
    "9432": {
      "op": "JUMPDEST"
    },
    "9433": {
      "op": "SWAP5"
    },
    "9434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9436": {
      "op": "SWAP4"
    },
    "9437": {
      "op": "SWAP1"
    },
    "9438": {
      "op": "SWAP4"
    },
    "9439": {
      "op": "ADD"
    },
    "9440": {
      "op": "CALLDATALOAD"
    },
    "9441": {
      "op": "SWAP4"
    },
    "9442": {
      "op": "POP"
    },
    "9443": {
      "op": "POP"
    },
    "9444": {
      "op": "POP"
    },
    "9445": {
      "jump": "o",
      "op": "JUMP"
    },
    "9446": {
      "op": "JUMPDEST"
    },
    "9447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9449": {
      "op": "DUP1"
    },
    "9450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9452": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9454": {
      "op": "DUP5"
    },
    "9455": {
      "op": "DUP7"
    },
    "9456": {
      "op": "SUB"
    },
    "9457": {
      "op": "SLT"
    },
    "9458": {
      "op": "ISZERO"
    },
    "9459": {
      "op": "PUSH2",
      "value": "0x24FB"
    },
    "9462": {
      "op": "JUMPI"
    },
    "9463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9465": {
      "op": "DUP1"
    },
    "9466": {
      "op": "REVERT"
    },
    "9467": {
      "op": "JUMPDEST"
    },
    "9468": {
      "op": "PUSH2",
      "value": "0x2504"
    },
    "9471": {
      "op": "DUP5"
    },
    "9472": {
      "op": "PUSH2",
      "value": "0x24A0"
    },
    "9475": {
      "jump": "i",
      "op": "JUMP"
    },
    "9476": {
      "op": "JUMPDEST"
    },
    "9477": {
      "op": "SWAP3"
    },
    "9478": {
      "op": "POP"
    },
    "9479": {
      "op": "PUSH2",
      "value": "0x2512"
    },
    "9482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9484": {
      "op": "DUP6"
    },
    "9485": {
      "op": "ADD"
    },
    "9486": {
      "op": "PUSH2",
      "value": "0x24A0"
    },
    "9489": {
      "jump": "i",
      "op": "JUMP"
    },
    "9490": {
      "op": "JUMPDEST"
    },
    "9491": {
      "op": "SWAP3"
    },
    "9492": {
      "op": "SWAP6"
    },
    "9493": {
      "op": "SWAP3"
    },
    "9494": {
      "op": "SWAP5"
    },
    "9495": {
      "op": "POP"
    },
    "9496": {
      "op": "POP"
    },
    "9497": {
      "op": "POP"
    },
    "9498": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9500": {
      "op": "SWAP2"
    },
    "9501": {
      "op": "SWAP1"
    },
    "9502": {
      "op": "SWAP2"
    },
    "9503": {
      "op": "ADD"
    },
    "9504": {
      "op": "CALLDATALOAD"
    },
    "9505": {
      "op": "SWAP1"
    },
    "9506": {
      "jump": "o",
      "op": "JUMP"
    },
    "9507": {
      "op": "JUMPDEST"
    },
    "9508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9512": {
      "op": "DUP3"
    },
    "9513": {
      "op": "DUP5"
    },
    "9514": {
      "op": "SUB"
    },
    "9515": {
      "op": "SLT"
    },
    "9516": {
      "op": "ISZERO"
    },
    "9517": {
      "op": "PUSH2",
      "value": "0x2535"
    },
    "9520": {
      "op": "JUMPI"
    },
    "9521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9523": {
      "op": "DUP1"
    },
    "9524": {
      "op": "REVERT"
    },
    "9525": {
      "op": "JUMPDEST"
    },
    "9526": {
      "op": "PUSH2",
      "value": "0x2499"
    },
    "9529": {
      "op": "DUP3"
    },
    "9530": {
      "op": "PUSH2",
      "value": "0x24A0"
    },
    "9533": {
      "jump": "i",
      "op": "JUMP"
    },
    "9534": {
      "op": "JUMPDEST"
    },
    "9535": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9542": {
      "op": "SHL"
    },
    "9543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9545": {
      "op": "MSTORE"
    },
    "9546": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9548": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9550": {
      "op": "MSTORE"
    },
    "9551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9555": {
      "op": "REVERT"
    },
    "9556": {
      "op": "JUMPDEST"
    },
    "9557": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "9559": {
      "op": "DUP2"
    },
    "9560": {
      "op": "LT"
    },
    "9561": {
      "op": "PUSH2",
      "value": "0x2572"
    },
    "9564": {
      "op": "JUMPI"
    },
    "9565": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9570": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9572": {
      "op": "SHL"
    },
    "9573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9575": {
      "op": "MSTORE"
    },
    "9576": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9578": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9580": {
      "op": "MSTORE"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9585": {
      "op": "REVERT"
    },
    "9586": {
      "op": "JUMPDEST"
    },
    "9587": {
      "op": "SWAP1"
    },
    "9588": {
      "op": "MSTORE"
    },
    "9589": {
      "jump": "o",
      "op": "JUMP"
    },
    "9590": {
      "op": "JUMPDEST"
    },
    "9591": {
      "op": "PUSH2",
      "value": "0x2580"
    },
    "9594": {
      "op": "DUP2"
    },
    "9595": {
      "op": "DUP5"
    },
    "9596": {
      "op": "PUSH2",
      "value": "0x2554"
    },
    "9599": {
      "jump": "i",
      "op": "JUMP"
    },
    "9600": {
      "op": "JUMPDEST"
    },
    "9601": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9605": {
      "op": "DUP3"
    },
    "9606": {
      "op": "ADD"
    },
    "9607": {
      "op": "MSTORE"
    },
    "9608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9610": {
      "op": "PUSH2",
      "value": "0x2596"
    },
    "9613": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9615": {
      "op": "DUP4"
    },
    "9616": {
      "op": "ADD"
    },
    "9617": {
      "op": "DUP5"
    },
    "9618": {
      "op": "PUSH2",
      "value": "0x2440"
    },
    "9621": {
      "jump": "i",
      "op": "JUMP"
    },
    "9622": {
      "op": "JUMPDEST"
    },
    "9623": {
      "op": "SWAP5"
    },
    "9624": {
      "op": "SWAP4"
    },
    "9625": {
      "op": "POP"
    },
    "9626": {
      "op": "POP"
    },
    "9627": {
      "op": "POP"
    },
    "9628": {
      "op": "POP"
    },
    "9629": {
      "jump": "o",
      "op": "JUMP"
    },
    "9630": {
      "op": "JUMPDEST"
    },
    "9631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9633": {
      "op": "DUP1"
    },
    "9634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9636": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9638": {
      "op": "DUP5"
    },
    "9639": {
      "op": "DUP7"
    },
    "9640": {
      "op": "SUB"
    },
    "9641": {
      "op": "SLT"
    },
    "9642": {
      "op": "ISZERO"
    },
    "9643": {
      "op": "PUSH2",
      "value": "0x25B3"
    },
    "9646": {
      "op": "JUMPI"
    },
    "9647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9649": {
      "op": "DUP1"
    },
    "9650": {
      "op": "REVERT"
    },
    "9651": {
      "op": "JUMPDEST"
    },
    "9652": {
      "op": "PUSH2",
      "value": "0x25BC"
    },
    "9655": {
      "op": "DUP5"
    },
    "9656": {
      "op": "PUSH2",
      "value": "0x24A0"
    },
    "9659": {
      "jump": "i",
      "op": "JUMP"
    },
    "9660": {
      "op": "JUMPDEST"
    },
    "9661": {
      "op": "SWAP6"
    },
    "9662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9664": {
      "op": "DUP6"
    },
    "9665": {
      "op": "ADD"
    },
    "9666": {
      "op": "CALLDATALOAD"
    },
    "9667": {
      "op": "SWAP6"
    },
    "9668": {
      "op": "POP"
    },
    "9669": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9671": {
      "op": "SWAP1"
    },
    "9672": {
      "op": "SWAP5"
    },
    "9673": {
      "op": "ADD"
    },
    "9674": {
      "op": "CALLDATALOAD"
    },
    "9675": {
      "op": "SWAP4"
    },
    "9676": {
      "op": "SWAP3"
    },
    "9677": {
      "op": "POP"
    },
    "9678": {
      "op": "POP"
    },
    "9679": {
      "op": "POP"
    },
    "9680": {
      "jump": "o",
      "op": "JUMP"
    },
    "9681": {
      "op": "JUMPDEST"
    },
    "9682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9684": {
      "op": "DUP1"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9687": {
      "op": "DUP4"
    },
    "9688": {
      "op": "DUP6"
    },
    "9689": {
      "op": "SUB"
    },
    "9690": {
      "op": "SLT"
    },
    "9691": {
      "op": "ISZERO"
    },
    "9692": {
      "op": "PUSH2",
      "value": "0x25E4"
    },
    "9695": {
      "op": "JUMPI"
    },
    "9696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9698": {
      "op": "DUP1"
    },
    "9699": {
      "op": "REVERT"
    },
    "9700": {
      "op": "JUMPDEST"
    },
    "9701": {
      "op": "PUSH2",
      "value": "0x25ED"
    },
    "9704": {
      "op": "DUP4"
    },
    "9705": {
      "op": "PUSH2",
      "value": "0x24A0"
    },
    "9708": {
      "jump": "i",
      "op": "JUMP"
    },
    "9709": {
      "op": "JUMPDEST"
    },
    "9710": {
      "op": "SWAP2"
    },
    "9711": {
      "op": "POP"
    },
    "9712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9714": {
      "op": "DUP4"
    },
    "9715": {
      "op": "ADD"
    },
    "9716": {
      "op": "CALLDATALOAD"
    },
    "9717": {
      "op": "DUP1"
    },
    "9718": {
      "op": "ISZERO"
    },
    "9719": {
      "op": "ISZERO"
    },
    "9720": {
      "op": "DUP2"
    },
    "9721": {
      "op": "EQ"
    },
    "9722": {
      "op": "PUSH2",
      "value": "0x2602"
    },
    "9725": {
      "op": "JUMPI"
    },
    "9726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9728": {
      "op": "DUP1"
    },
    "9729": {
      "op": "REVERT"
    },
    "9730": {
      "op": "JUMPDEST"
    },
    "9731": {
      "op": "DUP1"
    },
    "9732": {
      "op": "SWAP2"
    },
    "9733": {
      "op": "POP"
    },
    "9734": {
      "op": "POP"
    },
    "9735": {
      "op": "SWAP3"
    },
    "9736": {
      "op": "POP"
    },
    "9737": {
      "op": "SWAP3"
    },
    "9738": {
      "op": "SWAP1"
    },
    "9739": {
      "op": "POP"
    },
    "9740": {
      "jump": "o",
      "op": "JUMP"
    },
    "9741": {
      "op": "JUMPDEST"
    },
    "9742": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9747": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9749": {
      "op": "SHL"
    },
    "9750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9752": {
      "op": "MSTORE"
    },
    "9753": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9755": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9757": {
      "op": "MSTORE"
    },
    "9758": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9762": {
      "op": "REVERT"
    },
    "9763": {
      "op": "JUMPDEST"
    },
    "9764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9766": {
      "op": "DUP1"
    },
    "9767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9769": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9771": {
      "op": "DUP5"
    },
    "9772": {
      "op": "DUP7"
    },
    "9773": {
      "op": "SUB"
    },
    "9774": {
      "op": "SLT"
    },
    "9775": {
      "op": "ISZERO"
    },
    "9776": {
      "op": "PUSH2",
      "value": "0x2638"
    },
    "9779": {
      "op": "JUMPI"
    },
    "9780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9782": {
      "op": "DUP1"
    },
    "9783": {
      "op": "REVERT"
    },
    "9784": {
      "op": "JUMPDEST"
    },
    "9785": {
      "op": "PUSH2",
      "value": "0x2641"
    },
    "9788": {
      "op": "DUP5"
    },
    "9789": {
      "op": "PUSH2",
      "value": "0x24A0"
    },
    "9792": {
      "jump": "i",
      "op": "JUMP"
    },
    "9793": {
      "op": "JUMPDEST"
    },
    "9794": {
      "op": "SWAP3"
    },
    "9795": {
      "op": "POP"
    },
    "9796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9798": {
      "op": "DUP5"
    },
    "9799": {
      "op": "ADD"
    },
    "9800": {
      "op": "CALLDATALOAD"
    },
    "9801": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "9803": {
      "op": "DUP2"
    },
    "9804": {
      "op": "LT"
    },
    "9805": {
      "op": "PUSH2",
      "value": "0x2655"
    },
    "9808": {
      "op": "JUMPI"
    },
    "9809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9811": {
      "op": "DUP1"
    },
    "9812": {
      "op": "REVERT"
    },
    "9813": {
      "op": "JUMPDEST"
    },
    "9814": {
      "op": "SWAP2"
    },
    "9815": {
      "op": "POP"
    },
    "9816": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9818": {
      "op": "DUP5"
    },
    "9819": {
      "op": "ADD"
    },
    "9820": {
      "op": "CALLDATALOAD"
    },
    "9821": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9830": {
      "op": "DUP2"
    },
    "9831": {
      "op": "GT"
    },
    "9832": {
      "op": "ISZERO"
    },
    "9833": {
      "op": "PUSH2",
      "value": "0x2671"
    },
    "9836": {
      "op": "JUMPI"
    },
    "9837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9839": {
      "op": "DUP1"
    },
    "9840": {
      "op": "REVERT"
    },
    "9841": {
      "op": "JUMPDEST"
    },
    "9842": {
      "op": "DUP5"
    },
    "9843": {
      "op": "ADD"
    },
    "9844": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9846": {
      "op": "DUP2"
    },
    "9847": {
      "op": "ADD"
    },
    "9848": {
      "op": "DUP7"
    },
    "9849": {
      "op": "SGT"
    },
    "9850": {
      "op": "PUSH2",
      "value": "0x2682"
    },
    "9853": {
      "op": "JUMPI"
    },
    "9854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9856": {
      "op": "DUP1"
    },
    "9857": {
      "op": "REVERT"
    },
    "9858": {
      "op": "JUMPDEST"
    },
    "9859": {
      "op": "DUP1"
    },
    "9860": {
      "op": "CALLDATALOAD"
    },
    "9861": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9870": {
      "op": "DUP2"
    },
    "9871": {
      "op": "GT"
    },
    "9872": {
      "op": "ISZERO"
    },
    "9873": {
      "op": "PUSH2",
      "value": "0x269C"
    },
    "9876": {
      "op": "JUMPI"
    },
    "9877": {
      "op": "PUSH2",
      "value": "0x269C"
    },
    "9880": {
      "op": "PUSH2",
      "value": "0x260D"
    },
    "9883": {
      "jump": "i",
      "op": "JUMP"
    },
    "9884": {
      "op": "JUMPDEST"
    },
    "9885": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9887": {
      "op": "MLOAD"
    },
    "9888": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9890": {
      "op": "DUP3"
    },
    "9891": {
      "op": "ADD"
    },
    "9892": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9894": {
      "op": "NOT"
    },
    "9895": {
      "op": "SWAP1"
    },
    "9896": {
      "op": "DUP2"
    },
    "9897": {
      "op": "AND"
    },
    "9898": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9900": {
      "op": "ADD"
    },
    "9901": {
      "op": "AND"
    },
    "9902": {
      "op": "DUP2"
    },
    "9903": {
      "op": "ADD"
    },
    "9904": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9913": {
      "op": "DUP2"
    },
    "9914": {
      "op": "GT"
    },
    "9915": {
      "op": "DUP3"
    },
    "9916": {
      "op": "DUP3"
    },
    "9917": {
      "op": "LT"
    },
    "9918": {
      "op": "OR"
    },
    "9919": {
      "op": "ISZERO"
    },
    "9920": {
      "op": "PUSH2",
      "value": "0x26CB"
    },
    "9923": {
      "op": "JUMPI"
    },
    "9924": {
      "op": "PUSH2",
      "value": "0x26CB"
    },
    "9927": {
      "op": "PUSH2",
      "value": "0x260D"
    },
    "9930": {
      "jump": "i",
      "op": "JUMP"
    },
    "9931": {
      "op": "JUMPDEST"
    },
    "9932": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9934": {
      "op": "MSTORE"
    },
    "9935": {
      "op": "DUP2"
    },
    "9936": {
      "op": "DUP2"
    },
    "9937": {
      "op": "MSTORE"
    },
    "9938": {
      "op": "DUP3"
    },
    "9939": {
      "op": "DUP3"
    },
    "9940": {
      "op": "ADD"
    },
    "9941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9943": {
      "op": "ADD"
    },
    "9944": {
      "op": "DUP9"
    },
    "9945": {
      "op": "LT"
    },
    "9946": {
      "op": "ISZERO"
    },
    "9947": {
      "op": "PUSH2",
      "value": "0x26E3"
    },
    "9950": {
      "op": "JUMPI"
    },
    "9951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9953": {
      "op": "DUP1"
    },
    "9954": {
      "op": "REVERT"
    },
    "9955": {
      "op": "JUMPDEST"
    },
    "9956": {
      "op": "DUP2"
    },
    "9957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9959": {
      "op": "DUP5"
    },
    "9960": {
      "op": "ADD"
    },
    "9961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9963": {
      "op": "DUP4"
    },
    "9964": {
      "op": "ADD"
    },
    "9965": {
      "op": "CALLDATACOPY"
    },
    "9966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9970": {
      "op": "DUP4"
    },
    "9971": {
      "op": "DUP4"
    },
    "9972": {
      "op": "ADD"
    },
    "9973": {
      "op": "ADD"
    },
    "9974": {
      "op": "MSTORE"
    },
    "9975": {
      "op": "DUP1"
    },
    "9976": {
      "op": "SWAP4"
    },
    "9977": {
      "op": "POP"
    },
    "9978": {
      "op": "POP"
    },
    "9979": {
      "op": "POP"
    },
    "9980": {
      "op": "POP"
    },
    "9981": {
      "op": "SWAP3"
    },
    "9982": {
      "op": "POP"
    },
    "9983": {
      "op": "SWAP3"
    },
    "9984": {
      "op": "POP"
    },
    "9985": {
      "op": "SWAP3"
    },
    "9986": {
      "jump": "o",
      "op": "JUMP"
    },
    "9987": {
      "op": "JUMPDEST"
    },
    "9988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9990": {
      "op": "DUP2"
    },
    "9991": {
      "op": "ADD"
    },
    "9992": {
      "op": "PUSH2",
      "value": "0x920"
    },
    "9995": {
      "op": "DUP3"
    },
    "9996": {
      "op": "DUP5"
    },
    "9997": {
      "op": "PUSH2",
      "value": "0x2554"
    },
    "10000": {
      "jump": "i",
      "op": "JUMP"
    },
    "10001": {
      "op": "JUMPDEST"
    },
    "10002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10006": {
      "op": "DUP3"
    },
    "10007": {
      "op": "DUP5"
    },
    "10008": {
      "op": "SUB"
    },
    "10009": {
      "op": "SLT"
    },
    "10010": {
      "op": "ISZERO"
    },
    "10011": {
      "op": "PUSH2",
      "value": "0x2723"
    },
    "10014": {
      "op": "JUMPI"
    },
    "10015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10017": {
      "op": "DUP1"
    },
    "10018": {
      "op": "REVERT"
    },
    "10019": {
      "op": "JUMPDEST"
    },
    "10020": {
      "op": "POP"
    },
    "10021": {
      "op": "CALLDATALOAD"
    },
    "10022": {
      "op": "SWAP2"
    },
    "10023": {
      "op": "SWAP1"
    },
    "10024": {
      "op": "POP"
    },
    "10025": {
      "jump": "o",
      "op": "JUMP"
    },
    "10026": {
      "op": "JUMPDEST"
    },
    "10027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10029": {
      "op": "DUP1"
    },
    "10030": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10032": {
      "op": "DUP4"
    },
    "10033": {
      "op": "DUP6"
    },
    "10034": {
      "op": "SUB"
    },
    "10035": {
      "op": "SLT"
    },
    "10036": {
      "op": "ISZERO"
    },
    "10037": {
      "op": "PUSH2",
      "value": "0x273D"
    },
    "10040": {
      "op": "JUMPI"
    },
    "10041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10043": {
      "op": "DUP1"
    },
    "10044": {
      "op": "REVERT"
    },
    "10045": {
      "op": "JUMPDEST"
    },
    "10046": {
      "op": "PUSH2",
      "value": "0x2746"
    },
    "10049": {
      "op": "DUP4"
    },
    "10050": {
      "op": "PUSH2",
      "value": "0x24A0"
    },
    "10053": {
      "jump": "i",
      "op": "JUMP"
    },
    "10054": {
      "op": "JUMPDEST"
    },
    "10055": {
      "op": "SWAP2"
    },
    "10056": {
      "op": "POP"
    },
    "10057": {
      "op": "PUSH2",
      "value": "0x2754"
    },
    "10060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10062": {
      "op": "DUP5"
    },
    "10063": {
      "op": "ADD"
    },
    "10064": {
      "op": "PUSH2",
      "value": "0x24A0"
    },
    "10067": {
      "jump": "i",
      "op": "JUMP"
    },
    "10068": {
      "op": "JUMPDEST"
    },
    "10069": {
      "op": "SWAP1"
    },
    "10070": {
      "op": "POP"
    },
    "10071": {
      "op": "SWAP3"
    },
    "10072": {
      "op": "POP"
    },
    "10073": {
      "op": "SWAP3"
    },
    "10074": {
      "op": "SWAP1"
    },
    "10075": {
      "op": "POP"
    },
    "10076": {
      "jump": "o",
      "op": "JUMP"
    },
    "10077": {
      "op": "JUMPDEST"
    },
    "10078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10080": {
      "op": "DUP2"
    },
    "10081": {
      "op": "DUP2"
    },
    "10082": {
      "op": "SHR"
    },
    "10083": {
      "op": "SWAP1"
    },
    "10084": {
      "op": "DUP3"
    },
    "10085": {
      "op": "AND"
    },
    "10086": {
      "op": "DUP1"
    },
    "10087": {
      "op": "PUSH2",
      "value": "0x2771"
    },
    "10090": {
      "op": "JUMPI"
    },
    "10091": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10093": {
      "op": "DUP3"
    },
    "10094": {
      "op": "AND"
    },
    "10095": {
      "op": "SWAP2"
    },
    "10096": {
      "op": "POP"
    },
    "10097": {
      "op": "JUMPDEST"
    },
    "10098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10100": {
      "op": "DUP3"
    },
    "10101": {
      "op": "LT"
    },
    "10102": {
      "op": "DUP2"
    },
    "10103": {
      "op": "SUB"
    },
    "10104": {
      "op": "PUSH2",
      "value": "0x2791"
    },
    "10107": {
      "op": "JUMPI"
    },
    "10108": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10113": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10115": {
      "op": "SHL"
    },
    "10116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10118": {
      "op": "MSTORE"
    },
    "10119": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10121": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10123": {
      "op": "MSTORE"
    },
    "10124": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10128": {
      "op": "REVERT"
    },
    "10129": {
      "op": "JUMPDEST"
    },
    "10130": {
      "op": "POP"
    },
    "10131": {
      "op": "SWAP2"
    },
    "10132": {
      "op": "SWAP1"
    },
    "10133": {
      "op": "POP"
    },
    "10134": {
      "jump": "o",
      "op": "JUMP"
    },
    "10135": {
      "op": "JUMPDEST"
    },
    "10136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10138": {
      "op": "DUP1"
    },
    "10139": {
      "op": "DUP3"
    },
    "10140": {
      "op": "MSTORE"
    },
    "10141": {
      "op": "DUP2"
    },
    "10142": {
      "op": "DUP2"
    },
    "10143": {
      "op": "ADD"
    },
    "10144": {
      "op": "MSTORE"
    },
    "10145": {
      "op": "PUSH32",
      "value": "0x5573657220616C726561647920686173206120726F6C652061737369676E6564"
    },
    "10178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10180": {
      "op": "DUP3"
    },
    "10181": {
      "op": "ADD"
    },
    "10182": {
      "op": "MSTORE"
    },
    "10183": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10185": {
      "op": "ADD"
    },
    "10186": {
      "op": "SWAP1"
    },
    "10187": {
      "jump": "o",
      "op": "JUMP"
    },
    "10188": {
      "op": "JUMPDEST"
    },
    "10189": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10191": {
      "op": "DUP3"
    },
    "10192": {
      "op": "GT"
    },
    "10193": {
      "op": "ISZERO"
    },
    "10194": {
      "op": "PUSH2",
      "value": "0x243B"
    },
    "10197": {
      "op": "JUMPI"
    },
    "10198": {
      "op": "DUP1"
    },
    "10199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10201": {
      "op": "MSTORE"
    },
    "10202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10206": {
      "op": "KECCAK256"
    },
    "10207": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10209": {
      "op": "DUP5"
    },
    "10210": {
      "op": "ADD"
    },
    "10211": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10213": {
      "op": "SHR"
    },
    "10214": {
      "op": "DUP2"
    },
    "10215": {
      "op": "ADD"
    },
    "10216": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10218": {
      "op": "DUP6"
    },
    "10219": {
      "op": "LT"
    },
    "10220": {
      "op": "ISZERO"
    },
    "10221": {
      "op": "PUSH2",
      "value": "0x27F3"
    },
    "10224": {
      "op": "JUMPI"
    },
    "10225": {
      "op": "POP"
    },
    "10226": {
      "op": "DUP1"
    },
    "10227": {
      "op": "JUMPDEST"
    },
    "10228": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10230": {
      "op": "DUP5"
    },
    "10231": {
      "op": "ADD"
    },
    "10232": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10234": {
      "op": "SHR"
    },
    "10235": {
      "op": "DUP3"
    },
    "10236": {
      "op": "ADD"
    },
    "10237": {
      "op": "SWAP2"
    },
    "10238": {
      "op": "POP"
    },
    "10239": {
      "op": "JUMPDEST"
    },
    "10240": {
      "op": "DUP2"
    },
    "10241": {
      "op": "DUP2"
    },
    "10242": {
      "op": "LT"
    },
    "10243": {
      "op": "ISZERO"
    },
    "10244": {
      "op": "PUSH2",
      "value": "0xFE2"
    },
    "10247": {
      "op": "JUMPI"
    },
    "10248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10250": {
      "op": "DUP2"
    },
    "10251": {
      "op": "SSTORE"
    },
    "10252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10254": {
      "op": "ADD"
    },
    "10255": {
      "op": "PUSH2",
      "value": "0x27FF"
    },
    "10258": {
      "op": "JUMP"
    },
    "10259": {
      "op": "JUMPDEST"
    },
    "10260": {
      "op": "DUP2"
    },
    "10261": {
      "op": "MLOAD"
    },
    "10262": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10271": {
      "op": "DUP2"
    },
    "10272": {
      "op": "GT"
    },
    "10273": {
      "op": "ISZERO"
    },
    "10274": {
      "op": "PUSH2",
      "value": "0x282D"
    },
    "10277": {
      "op": "JUMPI"
    },
    "10278": {
      "op": "PUSH2",
      "value": "0x282D"
    },
    "10281": {
      "op": "PUSH2",
      "value": "0x260D"
    },
    "10284": {
      "jump": "i",
      "op": "JUMP"
    },
    "10285": {
      "op": "JUMPDEST"
    },
    "10286": {
      "op": "PUSH2",
      "value": "0x2841"
    },
    "10289": {
      "op": "DUP2"
    },
    "10290": {
      "op": "PUSH2",
      "value": "0x283B"
    },
    "10293": {
      "op": "DUP5"
    },
    "10294": {
      "op": "SLOAD"
    },
    "10295": {
      "op": "PUSH2",
      "value": "0x275D"
    },
    "10298": {
      "jump": "i",
      "op": "JUMP"
    },
    "10299": {
      "op": "JUMPDEST"
    },
    "10300": {
      "op": "DUP5"
    },
    "10301": {
      "op": "PUSH2",
      "value": "0x27CC"
    },
    "10304": {
      "jump": "i",
      "op": "JUMP"
    },
    "10305": {
      "op": "JUMPDEST"
    },
    "10306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10308": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10310": {
      "op": "DUP3"
    },
    "10311": {
      "op": "GT"
    },
    "10312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10314": {
      "op": "DUP2"
    },
    "10315": {
      "op": "EQ"
    },
    "10316": {
      "op": "PUSH2",
      "value": "0x2875"
    },
    "10319": {
      "op": "JUMPI"
    },
    "10320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10322": {
      "op": "DUP4"
    },
    "10323": {
      "op": "ISZERO"
    },
    "10324": {
      "op": "PUSH2",
      "value": "0x285D"
    },
    "10327": {
      "op": "JUMPI"
    },
    "10328": {
      "op": "POP"
    },
    "10329": {
      "op": "DUP5"
    },
    "10330": {
      "op": "DUP3"
    },
    "10331": {
      "op": "ADD"
    },
    "10332": {
      "op": "MLOAD"
    },
    "10333": {
      "op": "JUMPDEST"
    },
    "10334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10336": {
      "op": "NOT"
    },
    "10337": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10339": {
      "op": "DUP6"
    },
    "10340": {
      "op": "SWAP1"
    },
    "10341": {
      "op": "SHL"
    },
    "10342": {
      "op": "SHR"
    },
    "10343": {
      "op": "NOT"
    },
    "10344": {
      "op": "AND"
    },
    "10345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10347": {
      "op": "DUP5"
    },
    "10348": {
      "op": "SWAP1"
    },
    "10349": {
      "op": "SHL"
    },
    "10350": {
      "op": "OR"
    },
    "10351": {
      "op": "DUP5"
    },
    "10352": {
      "op": "SSTORE"
    },
    "10353": {
      "op": "PUSH2",
      "value": "0xFE2"
    },
    "10356": {
      "op": "JUMP"
    },
    "10357": {
      "op": "JUMPDEST"
    },
    "10358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10360": {
      "op": "DUP5"
    },
    "10361": {
      "op": "DUP2"
    },
    "10362": {
      "op": "MSTORE"
    },
    "10363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10365": {
      "op": "DUP2"
    },
    "10366": {
      "op": "KECCAK256"
    },
    "10367": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10369": {
      "op": "NOT"
    },
    "10370": {
      "op": "DUP6"
    },
    "10371": {
      "op": "AND"
    },
    "10372": {
      "op": "SWAP2"
    },
    "10373": {
      "op": "JUMPDEST"
    },
    "10374": {
      "op": "DUP3"
    },
    "10375": {
      "op": "DUP2"
    },
    "10376": {
      "op": "LT"
    },
    "10377": {
      "op": "ISZERO"
    },
    "10378": {
      "op": "PUSH2",
      "value": "0x28A5"
    },
    "10381": {
      "op": "JUMPI"
    },
    "10382": {
      "op": "DUP8"
    },
    "10383": {
      "op": "DUP6"
    },
    "10384": {
      "op": "ADD"
    },
    "10385": {
      "op": "MLOAD"
    },
    "10386": {
      "op": "DUP3"
    },
    "10387": {
      "op": "SSTORE"
    },
    "10388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10390": {
      "op": "SWAP5"
    },
    "10391": {
      "op": "DUP6"
    },
    "10392": {
      "op": "ADD"
    },
    "10393": {
      "op": "SWAP5"
    },
    "10394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10396": {
      "op": "SWAP1"
    },
    "10397": {
      "op": "SWAP3"
    },
    "10398": {
      "op": "ADD"
    },
    "10399": {
      "op": "SWAP2"
    },
    "10400": {
      "op": "ADD"
    },
    "10401": {
      "op": "PUSH2",
      "value": "0x2885"
    },
    "10404": {
      "op": "JUMP"
    },
    "10405": {
      "op": "JUMPDEST"
    },
    "10406": {
      "op": "POP"
    },
    "10407": {
      "op": "DUP5"
    },
    "10408": {
      "op": "DUP3"
    },
    "10409": {
      "op": "LT"
    },
    "10410": {
      "op": "ISZERO"
    },
    "10411": {
      "op": "PUSH2",
      "value": "0x28C3"
    },
    "10414": {
      "op": "JUMPI"
    },
    "10415": {
      "op": "DUP7"
    },
    "10416": {
      "op": "DUP5"
    },
    "10417": {
      "op": "ADD"
    },
    "10418": {
      "op": "MLOAD"
    },
    "10419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10421": {
      "op": "NOT"
    },
    "10422": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10424": {
      "op": "DUP8"
    },
    "10425": {
      "op": "SWAP1"
    },
    "10426": {
      "op": "SHL"
    },
    "10427": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10429": {
      "op": "AND"
    },
    "10430": {
      "op": "SHR"
    },
    "10431": {
      "op": "NOT"
    },
    "10432": {
      "op": "AND"
    },
    "10433": {
      "op": "DUP2"
    },
    "10434": {
      "op": "SSTORE"
    },
    "10435": {
      "op": "JUMPDEST"
    },
    "10436": {
      "op": "POP"
    },
    "10437": {
      "op": "POP"
    },
    "10438": {
      "op": "POP"
    },
    "10439": {
      "op": "POP"
    },
    "10440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10442": {
      "op": "SWAP1"
    },
    "10443": {
      "op": "DUP2"
    },
    "10444": {
      "op": "SHL"
    },
    "10445": {
      "op": "ADD"
    },
    "10446": {
      "op": "SWAP1"
    },
    "10447": {
      "op": "SSTORE"
    },
    "10448": {
      "op": "POP"
    },
    "10449": {
      "jump": "o",
      "op": "JUMP"
    },
    "10450": {
      "op": "JUMPDEST"
    },
    "10451": {
      "op": "PUSH2",
      "value": "0x28DC"
    },
    "10454": {
      "op": "DUP2"
    },
    "10455": {
      "op": "DUP4"
    },
    "10456": {
      "op": "PUSH2",
      "value": "0x2554"
    },
    "10459": {
      "jump": "i",
      "op": "JUMP"
    },
    "10460": {
      "op": "JUMPDEST"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10465": {
      "op": "DUP3"
    },
    "10466": {
      "op": "ADD"
    },
    "10467": {
      "op": "DUP2"
    },
    "10468": {
      "op": "SWAP1"
    },
    "10469": {
      "op": "MSTORE"
    },
    "10470": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "10472": {
      "op": "SWAP1"
    },
    "10473": {
      "op": "DUP3"
    },
    "10474": {
      "op": "ADD"
    },
    "10475": {
      "op": "MSTORE"
    },
    "10476": {
      "op": "PUSH8",
      "value": "0x383937B23AB1B2B9"
    },
    "10485": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "10487": {
      "op": "SHL"
    },
    "10488": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10490": {
      "op": "DUP3"
    },
    "10491": {
      "op": "ADD"
    },
    "10492": {
      "op": "MSTORE"
    },
    "10493": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10495": {
      "op": "ADD"
    },
    "10496": {
      "op": "SWAP2"
    },
    "10497": {
      "op": "SWAP1"
    },
    "10498": {
      "op": "POP"
    },
    "10499": {
      "jump": "o",
      "op": "JUMP"
    },
    "10500": {
      "op": "JUMPDEST"
    },
    "10501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10503": {
      "op": "DUP1"
    },
    "10504": {
      "op": "DUP3"
    },
    "10505": {
      "op": "MSTORE"
    },
    "10506": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10508": {
      "op": "SWAP1"
    },
    "10509": {
      "op": "DUP3"
    },
    "10510": {
      "op": "ADD"
    },
    "10511": {
      "op": "MSTORE"
    },
    "10512": {
      "op": "PUSH17",
      "value": "0x20B1B1B7BAB73A1034B990333937BD32B7"
    },
    "10530": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "10532": {
      "op": "SHL"
    },
    "10533": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10535": {
      "op": "DUP3"
    },
    "10536": {
      "op": "ADD"
    },
    "10537": {
      "op": "MSTORE"
    },
    "10538": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10540": {
      "op": "ADD"
    },
    "10541": {
      "op": "SWAP1"
    },
    "10542": {
      "jump": "o",
      "op": "JUMP"
    },
    "10543": {
      "op": "JUMPDEST"
    },
    "10544": {
      "op": "DUP1"
    },
    "10545": {
      "op": "DUP3"
    },
    "10546": {
      "op": "ADD"
    },
    "10547": {
      "op": "DUP1"
    },
    "10548": {
      "op": "DUP3"
    },
    "10549": {
      "op": "GT"
    },
    "10550": {
      "op": "ISZERO"
    },
    "10551": {
      "op": "PUSH2",
      "value": "0x920"
    },
    "10554": {
      "op": "JUMPI"
    },
    "10555": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10560": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10562": {
      "op": "SHL"
    },
    "10563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10565": {
      "op": "MSTORE"
    },
    "10566": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10568": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10570": {
      "op": "MSTORE"
    },
    "10571": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10575": {
      "op": "REVERT"
    },
    "10576": {
      "op": "JUMPDEST"
    },
    "10577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10579": {
      "op": "DUP1"
    },
    "10580": {
      "op": "DUP3"
    },
    "10581": {
      "op": "MSTORE"
    },
    "10582": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "10584": {
      "op": "SWAP1"
    },
    "10585": {
      "op": "DUP3"
    },
    "10586": {
      "op": "ADD"
    },
    "10587": {
      "op": "MSTORE"
    },
    "10588": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920676F7665726E6D656E742063616E20706572666F726D2074686973"
    },
    "10621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10623": {
      "op": "DUP3"
    },
    "10624": {
      "op": "ADD"
    },
    "10625": {
      "op": "MSTORE"
    },
    "10626": {
      "op": "PUSH7",
      "value": "0x1030B1BA34B7B7"
    },
    "10634": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "10636": {
      "op": "SHL"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10639": {
      "op": "DUP3"
    },
    "10640": {
      "op": "ADD"
    },
    "10641": {
      "op": "MSTORE"
    },
    "10642": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10644": {
      "op": "ADD"
    },
    "10645": {
      "op": "SWAP1"
    },
    "10646": {
      "jump": "o",
      "op": "JUMP"
    },
    "10647": {
      "op": "JUMPDEST"
    },
    "10648": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10650": {
      "op": "DUP2"
    },
    "10651": {
      "op": "MSTORE"
    },
    "10652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10654": {
      "op": "PUSH2",
      "value": "0x29AA"
    },
    "10657": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10659": {
      "op": "DUP4"
    },
    "10660": {
      "op": "ADD"
    },
    "10661": {
      "op": "DUP6"
    },
    "10662": {
      "op": "PUSH2",
      "value": "0x2440"
    },
    "10665": {
      "jump": "i",
      "op": "JUMP"
    },
    "10666": {
      "op": "JUMPDEST"
    },
    "10667": {
      "op": "SWAP1"
    },
    "10668": {
      "op": "POP"
    },
    "10669": {
      "op": "DUP3"
    },
    "10670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10672": {
      "op": "DUP4"
    },
    "10673": {
      "op": "ADD"
    },
    "10674": {
      "op": "MSTORE"
    },
    "10675": {
      "op": "SWAP4"
    },
    "10676": {
      "op": "SWAP3"
    },
    "10677": {
      "op": "POP"
    },
    "10678": {
      "op": "POP"
    },
    "10679": {
      "op": "POP"
    },
    "10680": {
      "jump": "o",
      "op": "JUMP"
    },
    "10681": {
      "op": "JUMPDEST"
    },
    "10682": {
      "op": "PUSH2",
      "value": "0x29C3"
    },
    "10685": {
      "op": "DUP2"
    },
    "10686": {
      "op": "DUP4"
    },
    "10687": {
      "op": "PUSH2",
      "value": "0x2554"
    },
    "10690": {
      "jump": "i",
      "op": "JUMP"
    },
    "10691": {
      "op": "JUMPDEST"
    },
    "10692": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10696": {
      "op": "DUP3"
    },
    "10697": {
      "op": "ADD"
    },
    "10698": {
      "op": "DUP2"
    },
    "10699": {
      "op": "SWAP1"
    },
    "10700": {
      "op": "MSTORE"
    },
    "10701": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "10703": {
      "op": "SWAP1"
    },
    "10704": {
      "op": "DUP3"
    },
    "10705": {
      "op": "ADD"
    },
    "10706": {
      "op": "MSTORE"
    },
    "10707": {
      "op": "PUSH7",
      "value": "0x666163746F7279"
    },
    "10715": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "10717": {
      "op": "SHL"
    },
    "10718": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10720": {
      "op": "DUP3"
    },
    "10721": {
      "op": "ADD"
    },
    "10722": {
      "op": "MSTORE"
    },
    "10723": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10725": {
      "op": "ADD"
    },
    "10726": {
      "op": "SWAP2"
    },
    "10727": {
      "op": "SWAP1"
    },
    "10728": {
      "op": "POP"
    },
    "10729": {
      "jump": "o",
      "op": "JUMP"
    },
    "10730": {
      "op": "JUMPDEST"
    },
    "10731": {
      "op": "PUSH2",
      "value": "0x29F4"
    },
    "10734": {
      "op": "DUP2"
    },
    "10735": {
      "op": "DUP4"
    },
    "10736": {
      "op": "PUSH2",
      "value": "0x2554"
    },
    "10739": {
      "jump": "i",
      "op": "JUMP"
    },
    "10740": {
      "op": "JUMPDEST"
    },
    "10741": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10745": {
      "op": "DUP3"
    },
    "10746": {
      "op": "ADD"
    },
    "10747": {
      "op": "DUP2"
    },
    "10748": {
      "op": "SWAP1"
    },
    "10749": {
      "op": "MSTORE"
    },
    "10750": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "10752": {
      "op": "SWAP1"
    },
    "10753": {
      "op": "DUP3"
    },
    "10754": {
      "op": "ADD"
    },
    "10755": {
      "op": "MSTORE"
    },
    "10756": {
      "op": "PUSH7",
      "value": "0x31B4BA34BD32B7"
    },
    "10764": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "10766": {
      "op": "SHL"
    },
    "10767": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10769": {
      "op": "DUP3"
    },
    "10770": {
      "op": "ADD"
    },
    "10771": {
      "op": "MSTORE"
    },
    "10772": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10774": {
      "op": "ADD"
    },
    "10775": {
      "op": "SWAP2"
    },
    "10776": {
      "op": "SWAP1"
    },
    "10777": {
      "op": "POP"
    },
    "10778": {
      "jump": "o",
      "op": "JUMP"
    },
    "10779": {
      "op": "JUMPDEST"
    },
    "10780": {
      "op": "PUSH2",
      "value": "0x2A25"
    },
    "10783": {
      "op": "DUP2"
    },
    "10784": {
      "op": "DUP4"
    },
    "10785": {
      "op": "PUSH2",
      "value": "0x2554"
    },
    "10788": {
      "jump": "i",
      "op": "JUMP"
    },
    "10789": {
      "op": "JUMPDEST"
    },
    "10790": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10794": {
      "op": "DUP3"
    },
    "10795": {
      "op": "ADD"
    },
    "10796": {
      "op": "DUP2"
    },
    "10797": {
      "op": "SWAP1"
    },
    "10798": {
      "op": "MSTORE"
    },
    "10799": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "10801": {
      "op": "SWAP1"
    },
    "10802": {
      "op": "DUP3"
    },
    "10803": {
      "op": "ADD"
    },
    "10804": {
      "op": "MSTORE"
    },
    "10805": {
      "op": "PUSH10",
      "value": "0x19DBDD995C9B9B595B9D"
    },
    "10816": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "10818": {
      "op": "SHL"
    },
    "10819": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10821": {
      "op": "DUP3"
    },
    "10822": {
      "op": "ADD"
    },
    "10823": {
      "op": "MSTORE"
    },
    "10824": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10826": {
      "op": "ADD"
    },
    "10827": {
      "op": "SWAP2"
    },
    "10828": {
      "op": "SWAP1"
    },
    "10829": {
      "op": "POP"
    },
    "10830": {
      "jump": "o",
      "op": "JUMP"
    },
    "10831": {
      "op": "JUMPDEST"
    },
    "10832": {
      "op": "PUSH2",
      "value": "0x2A59"
    },
    "10835": {
      "op": "DUP2"
    },
    "10836": {
      "op": "DUP4"
    },
    "10837": {
      "op": "PUSH2",
      "value": "0x2554"
    },
    "10840": {
      "jump": "i",
      "op": "JUMP"
    },
    "10841": {
      "op": "JUMPDEST"
    },
    "10842": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10846": {
      "op": "DUP3"
    },
    "10847": {
      "op": "ADD"
    },
    "10848": {
      "op": "DUP2"
    },
    "10849": {
      "op": "SWAP1"
    },
    "10850": {
      "op": "MSTORE"
    },
    "10851": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "10853": {
      "op": "SWAP1"
    },
    "10854": {
      "op": "DUP3"
    },
    "10855": {
      "op": "ADD"
    },
    "10856": {
      "op": "MSTORE"
    },
    "10857": {
      "op": "PUSH14",
      "value": "0x706F6C6C7574696F6E5F626F6479"
    },
    "10872": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "10874": {
      "op": "SHL"
    },
    "10875": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10877": {
      "op": "DUP3"
    },
    "10878": {
      "op": "ADD"
    },
    "10879": {
      "op": "MSTORE"
    },
    "10880": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10882": {
      "op": "ADD"
    },
    "10883": {
      "op": "SWAP2"
    },
    "10884": {
      "op": "SWAP1"
    },
    "10885": {
      "op": "POP"
    },
    "10886": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "4b07f8fe60e9238b0b33e664eeba84d5e350f781",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract GreenHydrogenCredit is ERC20, Ownable {\n    // Structs for role management and quota tracking\n    struct Producer {\n        bool certified;\n        uint256 totalIssued;\n        uint256 lastIssuanceTime;\n        bool isActive;\n    }\n    \n    struct Factory {\n        uint256 quota;\n        bool hasQuota;\n        uint256 creditsPurchased;\n        bool quotaMet;\n        uint256 quotaSetTime;\n    }\n    \n    // Role definitions\n    enum UserRole { NONE, PRODUCER, FACTORY, GOVERNMENT, POLLUTION_BODY, CITIZEN }\n    \n    // State variables\n    mapping(address => Producer) public producers;\n    mapping(address => Factory) public factories;\n    mapping(address => bool) public isFrozen;\n    mapping(address => UserRole) public userRoles;\n    mapping(address => string) public userRoleNames;\n    \n    // Government and regulatory addresses\n    address public governmentAddress;\n    address public pollutionBodyAddress;\n    \n    // Events for comprehensive tracking\n    event AccountFrozen(address indexed user, bool frozen);\n    event CreditIssued(address indexed producer, uint256 amount, uint256 timestamp);\n    event CreditPurchased(address indexed buyer, address indexed seller, uint256 amount, uint256 price, uint256 timestamp);\n    event ProducerCertified(address indexed producer, bool certified);\n    event QuotaSet(address indexed factory, uint256 quota, uint256 timestamp);\n    event QuotaMet(address indexed factory, uint256 totalPurchased, uint256 timestamp);\n    event RoleAssigned(address indexed user, UserRole role, string roleName);\n    event RegulatoryNotification(address indexed notifier, address indexed subject, string action, uint256 timestamp);\n\n    constructor() ERC20(\"Green Hydrogen Credit\", \"GHC\") {\n        // Set deployer as government by default\n        governmentAddress = msg.sender;\n        userRoles[msg.sender] = UserRole.GOVERNMENT;\n        userRoleNames[msg.sender] = \"government\";\n        emit RoleAssigned(msg.sender, UserRole.GOVERNMENT, \"government\");\n    }\n\n    // Modifiers for role-based access control\n    modifier onlyGovernment() {\n        require(msg.sender == governmentAddress || userRoles[msg.sender] == UserRole.GOVERNMENT, \"Only government can perform this action\");\n        _;\n    }\n    \n    modifier onlyPollutionBody() {\n        require(msg.sender == pollutionBodyAddress || userRoles[msg.sender] == UserRole.POLLUTION_BODY, \"Only pollution body can perform this action\");\n        _;\n    }\n    \n    modifier onlyCertifiedProducer() {\n        require(userRoles[msg.sender] == UserRole.PRODUCER && producers[msg.sender].certified && producers[msg.sender].isActive, \"Only certified active producers can perform this action\");\n        _;\n    }\n    \n    modifier onlyFactory() {\n        require(userRoles[msg.sender] == UserRole.FACTORY, \"Only factories can perform this action\");\n        _;\n    }\n    \n    modifier notFrozen(address account) {\n        require(!isFrozen[account], \"Account is frozen\");\n        _;\n    }\n\n    // --- Government-Only Functions ---\n    function setGovernmentAddress(address _government) public onlyOwner {\n        governmentAddress = _government;\n        userRoles[_government] = UserRole.GOVERNMENT;\n        userRoleNames[_government] = \"government\";\n        emit RoleAssigned(_government, UserRole.GOVERNMENT, \"government\");\n    }\n    \n    function setPollutionBodyAddress(address _pollutionBody) public onlyGovernment {\n        pollutionBodyAddress = _pollutionBody;\n        userRoles[_pollutionBody] = UserRole.POLLUTION_BODY;\n        userRoleNames[_pollutionBody] = \"pollution_body\";\n        emit RoleAssigned(_pollutionBody, UserRole.POLLUTION_BODY, \"pollution_body\");\n    }\n    \n    function assignRole(address user, UserRole role, string memory roleName) public onlyGovernment {\n        userRoles[user] = role;\n        userRoleNames[user] = roleName;\n        emit RoleAssigned(user, role, roleName);\n    }\n    \n    function certifyProducer(address producer, bool certified) public onlyGovernment {\n        require(userRoles[producer] == UserRole.PRODUCER, \"Address must be registered as producer\");\n        producers[producer].certified = certified;\n        producers[producer].isActive = certified;\n        emit ProducerCertified(producer, certified);\n        emit RegulatoryNotification(msg.sender, producer, certified ? \"CERTIFIED\" : \"DECERTIFIED\", block.timestamp);\n    }\n    \n    function setAccountFrozen(address user, bool frozen) public onlyGovernment {\n        isFrozen[user] = frozen;\n        emit AccountFrozen(user, frozen);\n        emit RegulatoryNotification(msg.sender, user, frozen ? \"FROZEN\" : \"UNFROZEN\", block.timestamp);\n    }\n\n    // --- Producer Functions ---\n    function registerAsProducer() public {\n        require(userRoles[msg.sender] == UserRole.NONE, \"User already has a role assigned\");\n        userRoles[msg.sender] = UserRole.PRODUCER;\n        userRoleNames[msg.sender] = \"producer\";\n        producers[msg.sender] = Producer({\n            certified: false,\n            totalIssued: 0,\n            lastIssuanceTime: 0,\n            isActive: false\n        });\n        emit RoleAssigned(msg.sender, UserRole.PRODUCER, \"producer\");\n    }\n    \n    function issueCredits(uint256 amount) public onlyCertifiedProducer notFrozen(msg.sender) {\n        require(amount > 0, \"Amount must be greater than 0\");\n        \n        _mint(msg.sender, amount);\n        producers[msg.sender].totalIssued += amount;\n        producers[msg.sender].lastIssuanceTime = block.timestamp;\n        \n        emit CreditIssued(msg.sender, amount, block.timestamp);\n        \n        // Notify government and pollution body\n        if (governmentAddress != address(0)) {\n            emit RegulatoryNotification(msg.sender, governmentAddress, \"CREDIT_ISSUED\", block.timestamp);\n        }\n        if (pollutionBodyAddress != address(0)) {\n            emit RegulatoryNotification(msg.sender, pollutionBodyAddress, \"CREDIT_ISSUED\", block.timestamp);\n        }\n    }\n    \n    // --- Factory Functions ---\n    function registerAsFactory() public {\n        require(userRoles[msg.sender] == UserRole.NONE, \"User already has a role assigned\");\n        userRoles[msg.sender] = UserRole.FACTORY;\n        userRoleNames[msg.sender] = \"factory\";\n        factories[msg.sender] = Factory({\n            quota: 0,\n            hasQuota: false,\n            creditsPurchased: 0,\n            quotaMet: false,\n            quotaSetTime: 0\n        });\n        emit RoleAssigned(msg.sender, UserRole.FACTORY, \"factory\");\n    }\n    \n    function setQuota(uint256 quota) public onlyFactory {\n        require(quota > 0, \"Quota must be greater than 0\");\n        factories[msg.sender].quota = quota;\n        factories[msg.sender].hasQuota = true;\n        factories[msg.sender].quotaSetTime = block.timestamp;\n        factories[msg.sender].quotaMet = false;\n        emit QuotaSet(msg.sender, quota, block.timestamp);\n    }\n    \n    function purchaseCredits(address seller, uint256 amount, uint256 price) public payable notFrozen(msg.sender) notFrozen(seller) {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(balanceOf(seller) >= amount, \"Seller has insufficient credits\");\n        \n        // Transfer credits from seller to buyer\n        _transfer(seller, msg.sender, amount);\n        \n        // Update factory purchase tracking if buyer is a factory\n        if (userRoles[msg.sender] == UserRole.FACTORY) {\n            factories[msg.sender].creditsPurchased += amount;\n            \n            // Check if quota is met\n            if (factories[msg.sender].hasQuota && \n                factories[msg.sender].creditsPurchased >= factories[msg.sender].quota && \n                !factories[msg.sender].quotaMet) {\n                factories[msg.sender].quotaMet = true;\n                emit QuotaMet(msg.sender, factories[msg.sender].creditsPurchased, block.timestamp);\n                \n                // Notify pollution body about quota completion\n                if (pollutionBodyAddress != address(0)) {\n                    emit RegulatoryNotification(msg.sender, pollutionBodyAddress, \"QUOTA_MET\", block.timestamp);\n                }\n            }\n        }\n        \n        emit CreditPurchased(msg.sender, seller, amount, price, block.timestamp);\n        \n        // Notify government and pollution body of purchase\n        if (governmentAddress != address(0)) {\n            emit RegulatoryNotification(msg.sender, governmentAddress, \"CREDIT_PURCHASED\", block.timestamp);\n        }\n        if (pollutionBodyAddress != address(0)) {\n            emit RegulatoryNotification(msg.sender, pollutionBodyAddress, \"CREDIT_PURCHASED\", block.timestamp);\n        }\n    }\n    \n    // --- Citizen Functions ---\n    function registerAsCitizen() public {\n        require(userRoles[msg.sender] == UserRole.NONE, \"User already has a role assigned\");\n        userRoles[msg.sender] = UserRole.CITIZEN;\n        userRoleNames[msg.sender] = \"citizen\";\n        emit RoleAssigned(msg.sender, UserRole.CITIZEN, \"citizen\");\n    }\n    \n    // --- View Functions ---\n    function getProducerInfo(address producer) public view returns (Producer memory) {\n        return producers[producer];\n    }\n    \n    function getFactoryInfo(address factory) public view returns (Factory memory) {\n        return factories[factory];\n    }\n    \n    function getUserRole(address user) public view returns (UserRole, string memory) {\n        return (userRoles[user], userRoleNames[user]);\n    }\n    \n    function isAccountFrozen(address account) public view returns (bool) {\n        return isFrozen[account];\n    }\n    \n    // --- Modified Core Functions ---\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal override {\n        require(!isFrozen[from], \"ERC20: sender account is frozen\");\n        require(!isFrozen[to], \"ERC20: recipient account is frozen\");\n        super._beforeTokenTransfer(from, to, amount);\n    }\n    \n    // Override transfer functions to emit regulatory notifications\n    function transfer(address to, uint256 amount) public override notFrozen(msg.sender) notFrozen(to) returns (bool) {\n        bool result = super.transfer(to, amount);\n        if (result) {\n            emit RegulatoryNotification(msg.sender, governmentAddress, \"TRANSFER\", block.timestamp);\n        }\n        return result;\n    }\n    \n    function transferFrom(address from, address to, uint256 amount) public override notFrozen(from) notFrozen(to) returns (bool) {\n        bool result = super.transferFrom(from, to, amount);\n        if (result) {\n            emit RegulatoryNotification(from, governmentAddress, \"TRANSFER\", block.timestamp);\n        }\n        return result;\n    }\n}",
  "sourceMap": "168:10666:5:-:0;;;1847:325;;;;;;;;;;1976:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:1;;;2050:5;2042;:13;;;;;;:::i;:::-;-1:-1:-1;2065:7:1;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1958:17:5::1;:30:::0;;1978:10:::1;-1:-1:-1::0;;;;;;1958:30:5;;::::1;::::0;::::1;::::0;;;-1:-1:-1;1998:21:5;;;:9:::1;:21;::::0;;;;;;;:43;;-1:-1:-1;;1998:43:5::1;2022:19;1998:43;::::0;;2051:40;;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;2051:40:5;;::::1;::::0;:25;;;;;;;;;;:40:::1;::::0;:25;:40:::1;:::i;:::-;;2119:10;-1:-1:-1::0;;;;;2106:59:5::1;;2131:19;2106:59;;;;;;:::i;:::-;;;;;;;;168:10666:::0;;640:96:4;719:10;;640:96::o;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:6;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:6;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:6;;;2500:26;2451:89;-1:-1:-1;;1308:1:6;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:6;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:6;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:6;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:6:o;2787:568::-;2989:4;3029:1;3021:6;3018:13;3008:144;;3074:10;3069:3;3065:20;3062:1;3055:31;3109:4;3106:1;3099:15;3137:4;3134:1;3127:15;3008:144;-1:-1:-1;3161:25:6;;;3222:2;3217;3202:18;;3195:30;;;3261:2;3241:18;;;3234:30;-1:-1:-1;;;3295:2:6;3280:18;;3273:40;3345:3;3330:19;;2787:568::o;:::-;168:10666:5;;;;;;",
  "sourcePath": "contracts/GreenHydrogenCredit.sol",
  "type": "contract"
}